{"mappings":"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","sources":["node_modules/seedrandom/lib/alea.js","node_modules/seedrandom/lib/xor128.js","node_modules/seedrandom/lib/xorwow.js","node_modules/seedrandom/lib/xorshift7.js","node_modules/seedrandom/lib/xor4096.js","node_modules/seedrandom/lib/tychei.js","node_modules/seedrandom/seedrandom.js","node_modules/seedrandom/index.js","src/rand.ts","node_modules/marked/lib/marked.js","src/postprocessing.ts","src/settings.ts","src/weightedChoice.ts","src/evalApi.ts","src/stringUtils.ts","src/errors.ts","src/userDefs.ts","src/evalBlock.ts","src/functionCall.ts","src/mode.ts","src/prettyPrinting.ts","src/token.ts","src/tokenType.ts","src/lexer.ts","src/rule.ts","src/replacer.ts","src/backReference.ts","src/parsers.ts","src/noOp.ts","package.json","src/renderer.ts","src/browserIndex.js"],"sourcesContent":["// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\n// Detect the global object, even if operating in strict mode.\n// http://stackoverflow.com/a/14387057/265298\nvar global = (0, eval)('this'),\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","import { WeightedChoice, Choice } from './weightedChoice';\nimport seedrandom from 'seedrandom';\n\n// A module-local seedable random number generator\n// The selected seed will be random unless `setRandomSeed()` is called.\nlet rng = seedrandom();\n\nexport function setRandomSeed(seed: number) {\n  rng = seedrandom(seed);\n}\n\nexport function normalizeWeights(weightedChoices: WeightedChoice[]): WeightedChoice[] {\n  let normalized = [];\n  let sum = 0;\n  let nullWeightCount = 0;\n  for (let w = 0; w < weightedChoices.length; w++) {\n    let weightedChoice = weightedChoices[w];\n    normalized.push(weightedChoice.clone());\n    if (weightedChoice.weight === null) {\n      nullWeightCount++;\n    } else {\n      sum += weightedChoice.weight;\n    }\n  }\n  let nullWeight = (100 - sum) / nullWeightCount;\n  for (let n = 0; n < normalized.length; n++) {\n    if (normalized[n].weight === null) {\n      normalized[n].weight = nullWeight;\n    }\n  }\n  return normalized;\n}\n\nexport function randomFloat(min: number, max: number): number {\n  return (rng() * (max - min)) + min;\n}\n\nexport function randomInt(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(rng() * (max - min)) + min;\n}\n\n/**\n * Randomly choose from an array of weighted choices.\n *\n * The probability of any given `WeightedChoice` being\n * chosen is its weight divided by the sum of all given\n * choices.\n *\n * Returns an object of the form {choice, choiceIndex}\n */\nexport function weightedChoose(weights: WeightedChoice[]): { choice: Choice, choiceIndex: number } {\n  let sum = 0;\n  for (let wc of weights) {\n    sum += wc.weight ?? 0;\n  }\n  let progress = 0;\n  let pickedValue = randomFloat(0, sum);\n  for (let i = 0; i < weights.length; i++) {\n    let wc = weights[i];\n    progress += wc.weight ?? 0;\n    if (progress >= pickedValue) {\n      return { choice: wc.choice, choiceIndex: i };\n    }\n  }\n  // If we're still here, something went wrong.\n  // Log a warning but try to return a random value anyways.\n  console.warn('Unable to pick weighted choice for weights: ' + weights);\n  let fallbackIndex = randomInt(0, weights.length);\n  return { choice: weights[fallbackIndex].choice, choiceIndex: fallbackIndex };\n}\n\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n?(?!hr|heading|lheading| {0,3}>|tag)[^\\n]+)+)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"|[^\"]|\"[^\"\\n]*\")*\"|'\\n?(?:[^'\\n]+\\n?)*'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = edit(block.html)\n  .replace('comment', /<!--[\\s\\S]*?-->/)\n  .replace('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  .replace('closing', /<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"\\/>\\s]*)*?\\/?>/)\n  .replace(/tag/g, block._tag)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', '<' + block._tag)\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase();\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?[a-zA-Z0-9\\-]+(?:\"[^\"]*\"|'[^']*'|\\s[^<'\">\\/\\s]*)*?\\/?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^_([^\\s_](?:[^_]|__)+?[^\\s_])_\\b|^\\*((?:\\*\\*|[^*])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex()\n\ninline._inside = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = edit(inline.link)\n  .replace('inside', inline._inside)\n  .replace('href', inline._href)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('inside', inline._inside)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href),\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer(),\n  xhtml: false,\n  baseUrl: null\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","import marked from 'marked';\n\nconst BLANK_LINE_RE = /^\\s*$/;\nconst TRAILING_WHITESPACE_RE = /\\s+$/;\n\n/**\n * Cleans whitespace in the given text by:\n * 1. Removing all trailing whitespace in every line\n * 2. Collapsing any runs of over 1 blank line\n * 3. Collapsing any runs of over 1 space in the middle of a line.\n * 4. Removing blank lines at the start of the text\n * 5. Ensuring the text ends with a single line break\n */\nexport function whitespaceCleanup(text: string): string {\n  let out = '';\n  let atDocStart = true;\n  let lastLineWasBlank = false;\n  for (let line of text.split('\\n')) {\n    let isBlank = BLANK_LINE_RE.test(line);\n\n    if (atDocStart) {\n      if (isBlank) {\n        // Skip blank lines at start of document\n        continue;\n      } else {\n        atDocStart = false;\n      }\n    }\n\n    if (isBlank) {\n      if (lastLineWasBlank) {\n        // Skip runs of blank lines\n        continue;\n      }\n      // Lines consisting of only whitespace should\n      // become simply blank lines\n      line = '';\n    } else {\n      // intra-line cleanups\n      line = line.replace(TRAILING_WHITESPACE_RE, '');\n      let rewrittenLine = '';\n      let atLineStart = true;\n      let lastCharWasSpace = false;\n      for (let char of line) {\n        let charIsSpace = char === ' ';\n        if (!atLineStart && lastCharWasSpace && charIsSpace) {\n          continue;\n        } else {\n          if (!charIsSpace) {\n            atLineStart = false;\n          }\n          rewrittenLine += char;\n          lastCharWasSpace = charIsSpace;\n        }\n      }\n      line = rewrittenLine;\n    }\n\n    lastLineWasBlank = isBlank;\n\n    out += line + '\\n';\n  }\n\n  // Edge case: if input ended with a line break already, above code\n  // will result in \\n\\n ending the output. Correct this so output\n  // always terminates with a single \\n\n  if (out.endsWith('\\n\\n')) {\n    out = out.substring(0, out.length - 1);\n  }\n\n  return out;\n}\n\nconst MISPLACED_WORD_ENDING_PUNC_RE = /(\\w)(\\s+)([.,:;!?]+)/g;\n\n/**\n * Performs simple English-like correction of whitespace around\n * punctuation marks.\n *\n * - snap [, . : ; ! ?] to the end of preceding words when separated\n *   by whitespace (including line breaks.)\n */\nexport function punctuationCleanup(text: string): string {\n  return text.replace(MISPLACED_WORD_ENDING_PUNC_RE, '$1$3$2');\n}\n\n\n// \\p{Ll} matches unicode lowercase letters which have uppercase variants.\nconst INCORRECT_CAPS_RE = /([.!?]\\s+|^\\s*)(\\p{Ll})/gu;\n\n// Conforms to `text.replace` replacer function interface\nfunction correctCaps(_match: string, p1: string, p2: string) {\n  return p1 + p2.toUpperCase();\n}\n\n/**\n * Tries to correct capitalization of the first words of sentences.\n *\n * This automatically capitalizes the first letter of the first word\n * following a sentence-ending punctuation mark.\n */\nexport function capitalizationCleanup(text: string): string {\n  return text.replace(INCORRECT_CAPS_RE, correctCaps);\n}\n\nexport function renderMarkdown(text: string, markedSettings: object) {\n  return marked(text, markedSettings);\n}\n","export interface DocumentSettings {\n  /**\n   * Settings to pass to `marked`\n   *  \n   * @see {@link https://github.com/markedjs/marked/blob/v0.3.19/docs/USING_ADVANCED.md}\n   */\n  markdownSettings?: object | null;\n\n  /**\n   * Whether to perform a post-processing step cleaning up whitespace.\n   */\n  whitespaceCleanup?: boolean | null;\n\n  /**\n   * Whether to perform a post-processing step repositioning\n   * punctuation marks according to *some* English grammar rules.\n   */\n  punctuationCleanup?: boolean | null;\n\n  /**\n   * Whether to perform basic capitalization correction for words\n   * following sentence-ending punctuation.\n   */\n  capitalizationCleanup?: boolean | null;\n\n  /** \n   * The expected BML version number\n   *\n   * BML will log a warning if this version number does not match the\n   * interpreter version.\n   */\n  version?: string | null;\n}\n\nexport interface RenderSettings {\n  /**\n   * The random seed to use for this render.\n   *\n   * Can be any type, as this is fed directly to the `seedrandom`\n   * library, which converts the object to a string and uses that as\n   * the actual seed.\n   */\n  randomSeed?: number | null;\n  /**\n   * Whether to disable `eval` blocks in the document.\n   *\n   * This can be useful for security purposes.\n   */\n  allowEval?: boolean | null;\n  /**\n   * Whether to render the output document as markdown to HTML.\n   */\n  renderMarkdown?: boolean | null;\n}\n\n/**\n * Default settings. These are passed in to the main bml rendering function.\n */\nexport const defaultBMLSettings: DocumentSettings = {\n  markdownSettings: {},\n  whitespaceCleanup: true,\n  punctuationCleanup: true,\n  capitalizationCleanup: true,\n  version: null,\n};\n\nexport const defaultRenderSettings: RenderSettings = {\n  randomSeed: null,\n  allowEval: true,\n  renderMarkdown: false,\n};\n\n/**\n * Return a new settings object with all the properties defined in newSettings,\n * defaulting to those in originalSettings where absent.\n *\n * If `newSettings` is falsy, return `originalSettings` unmodified.\n */\nexport function mergeSettings<T>(originalSettings: T, newSettings: T | null | undefined): T {\n  return Object.assign({}, originalSettings, newSettings);\n}\n","import { FunctionCall } from './functionCall';\nimport noOp from './noOp';\n\n\nexport type Choice = string | FunctionCall | typeof noOp;\n\n/**\n * An outcome with a weight.\n */\nexport class WeightedChoice {\n  choice: Choice;\n  weight: number | null;\n\n  constructor(choice: Choice, weight: number | null) {\n    this.choice = choice;\n    this.weight = weight;\n  }\n\n  toString(): string {\n    return `WeightedChoice{choice: ${String(this.choice)}, weight: ${this.weight}}`;\n  }\n\n  /* Create a new WeightedChoice object with the same properties as this one. */\n  clone(): WeightedChoice {\n    return new WeightedChoice(this.choice, this.weight);\n  }\n}\n","import * as rand from './rand';\nimport { WeightedChoice } from './weightedChoice';\n\n/**\n * This module is exposed to BML script `eval` blocks in a `bml` object namespace.\n */\n\nexport const api = {\n  WeightedChoice: WeightedChoice,\n  weightedChoose: rand.weightedChoose,\n  randomInt: rand.randomInt,\n  randomFloat: rand.randomFloat\n}\n","export function lineAndColumnOf(str: string, index: number): { line: number, column: number } {\n  if (index > str.length) {\n    throw new Error('charIndex > string.length');\n  }\n  let line = 1;\n  let column = -1;\n  let newLine = false;\n  for (let i = 0; i <= index; i++) {\n    if (newLine) {\n      line++;\n      column = 0;\n      newLine = false;\n    } else {\n      column++;\n    }\n    if (str[i] === '\\n') {\n      newLine = true;\n    }\n  }\n  return { line: line, column: column };\n}\n\nexport function lineColumnString(str: string, index: number): string {\n  let lineAndColumn = lineAndColumnOf(str, index);\n  return 'line: ' + lineAndColumn.line + ', column: ' + lineAndColumn.column;\n}\n\nexport function isWhitespace(str: string): boolean {\n  return str.trim() === '';\n}\n\n/* Escape all regex-special characters in a string */\nexport function escapeRegExp(str: string): string {\n  return str.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n}\n","import * as stringUtils from './stringUtils';\n\nexport class IllegalStateError extends Error {\n  constructor(message: string) {\n    super(message + ' This is a bug. Please report at https://github.com/ajyoon/bml/issues');\n    this.name = 'IllegalStateError';\n    Object.setPrototypeOf(this, IllegalStateError.prototype);\n  }\n}\n\nexport class JavascriptSyntaxError extends Error {\n  constructor(bmlDoc: string, errorIndex: number) {\n    let message = 'Syntax error found while parsing bml javascript at '\n      + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(message);\n    this.name = 'JavascriptSyntaxError';\n    Object.setPrototypeOf(this, JavascriptSyntaxError.prototype);\n  }\n}\n\nexport class BMLSyntaxError extends Error {\n  constructor(message: string | null, bmlDoc: string, errorIndex: number) {\n    let resolvedMsg = (message || 'Syntax error found while parsing bml') +\n      ' at ' + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(resolvedMsg);\n    this.name = 'BMLSyntaxError';\n    Object.setPrototypeOf(this, BMLSyntaxError.prototype);\n  }\n}\n\nexport class BMLDuplicatedRefIndexError extends Error {\n  constructor(refIdentifier: string, choiceIndex: number, bmlDoc: string, errorIndex: number) {\n    let msg = `Duplicated reference index ${choiceIndex} for reference ${refIdentifier} `\n      + `at ${stringUtils.lineColumnString(bmlDoc, errorIndex)}`;\n    super(msg);\n    this.name = 'BMLDuplicatedRefIndexError';\n    Object.setPrototypeOf(this, BMLDuplicatedRefIndexError.prototype);\n  }\n}\n\nexport class BMLDuplicatedRefError extends Error {\n  constructor(refIdentifier: string, bmlDoc: string, errorIndex: number) {\n    let msg = `Duplicated reference ${refIdentifier} `\n      + `at ${stringUtils.lineColumnString(bmlDoc, errorIndex)}`;\n    super(msg);\n    this.name = 'BMLDuplicatedRefError';\n    Object.setPrototypeOf(this, BMLDuplicatedRefError.prototype);\n  }\n}\n\nexport class BMLNameError extends Error {\n  constructor(name: string, bmlDoc: string, errorIndex: number) {\n    let msg = 'Unknown name: \"' + name + '\" at '\n      + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(msg);\n    this.name = 'BMLNameError';\n    Object.setPrototypeOf(this, BMLNameError.prototype);\n  }\n}\n\nexport class UnknownModeError extends Error {\n  constructor(modeName: string, bmlDoc: string, errorIndex: number) {\n    let msg = 'Unknown mode \\'' + modeName + '\\' at '\n      + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(msg);\n    this.name = 'UnknownModeError';\n    Object.setPrototypeOf(this, UnknownModeError.prototype);\n  }\n}\n\nexport class ModeNameError extends Error {\n  constructor(modeName: string, message: string, bmlDoc: string, errorIndex: number) {\n    let msg = `Mode name '${modeName}' is not allowed. ${message} at `\n      + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(msg);\n    this.name = 'ModeNameError';\n    Object.setPrototypeOf(this, ModeNameError.prototype);\n  }\n}\n\nexport class UnknownTransformError extends Error {\n  constructor(bmlDoc: string, errorIndex: number) {\n    let msg = 'Unknown transform at '\n      + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(msg);\n    this.name = 'UnknownTransformError';\n    Object.setPrototypeOf(this, UnknownTransformError.prototype);\n  }\n}\n\nexport class FunctionNotFoundError extends Error {\n  constructor(functionName: string, bmlDoc: string, errorIndex: number) {\n    let msg = 'Attempted to call unknown function \"' + functionName + '\" at '\n      + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(msg);\n    this.name = 'FunctionNotFoundError';\n    Object.setPrototypeOf(this, FunctionNotFoundError.prototype);\n  }\n}\n\nexport class NotAFunctionError extends Error {\n  constructor(functionName: string, bmlDoc: string, errorIndex: number) {\n    let msg = 'Attempted to call non-function \"' + functionName + '\" at '\n      + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(msg);\n    this.name = 'NotAFunctionError';\n    Object.setPrototypeOf(this, NotAFunctionError.prototype);\n  }\n}\n\nexport class EvalProvidedSettingsError extends Error {\n  constructor(field: string, value: any) {\n    super(`Eval-provided field '${field}' of '${value}' is invalid`)\n    this.name = 'EvalProvidedSettingsError';\n    Object.setPrototypeOf(this, EvalProvidedSettingsError.prototype);\n  }\n}\n\nexport class EvalProvideError extends Error {\n  constructor(msg: string) {\n    super(msg)\n    this.name = 'EvalProvideError';\n    Object.setPrototypeOf(this, EvalProvideError.prototype);\n  }\n}\n","import { DocumentSettings } from './settings';\nimport { EvalProvidedSettingsError, EvalProvideError } from './errors';\n\nexport type UserDefs = {\n  settings?: DocumentSettings,\n  funcs: { [index: string]: Function }\n}\n\nexport function validateAndBuildUserDefs(rawUserDefs: RawUserDefs): UserDefs {\n  validateUserDefs(rawUserDefs);\n  let userDefs: UserDefs = { funcs: {} };\n  for (let [key, value] of Object.entries(rawUserDefs)) {\n    if (key === 'settings') {\n      userDefs.settings = <DocumentSettings>value;\n    } else {\n      userDefs.funcs[key] = <Function>value;\n    }\n  }\n  return userDefs;\n}\n\nfunction nullOrUndefined<T>(object: T | undefined | null): object is T {\n  return <T>object === undefined || <T>object === null;\n}\n\ntype RawUserDefs = { [index: string]: any };\n\nfunction validateSettingField(settings: RawUserDefs, field: string, expectedType: string) {\n  const value = settings[field];\n  if (!nullOrUndefined(value) && typeof value !== expectedType) {\n    throw new EvalProvidedSettingsError('setting.' + field, value);\n  }\n}\n\nfunction validateUserDefs(userDefs: RawUserDefs) {\n  let settings = userDefs['settings'];\n  if (settings) {\n    validateSettingField(settings, 'markdownSettings', 'object');\n    validateSettingField(settings, 'whitespaceCleanup', 'boolean');\n    validateSettingField(settings, 'punctuationCleanup', 'boolean');\n    validateSettingField(settings, 'capitalizationCleanup', 'boolean');\n    validateSettingField(settings, 'version', 'string');\n  }\n  for (let [key, value] of Object.entries(userDefs)) {\n    if (key !== 'settings' && typeof value !== 'function') {\n      throw new EvalProvideError(`eval-provided field '${key}' is not a function`);\n    }\n  }\n}\n","import * as evalApi from './evalApi';\nimport { UserDefs, validateAndBuildUserDefs } from './userDefs';\n\nconst evalFuncTemplate = `\n  const bml = this;\n  const __USER_DEFS = {};\n\n  function provide(obj) {\n    for (let key in obj) {\n      __USER_DEFS[key] = obj[key];\n    }\n  }\n\n  ////////// start user code\n\n  ***USER CODE SLOT***\n\n  ////////// end user code\n\n  return __USER_DEFS;\n`;\n\n\nexport class EvalBlock {\n  contents: string;\n\n  constructor(contents: string) {\n    this.contents = contents;\n  }\n\n  toString(): string {\n    return `EvalBlock('${this.contents}')`;\n  }\n\n  toFunc(): Function {\n    let funcSrc = evalFuncTemplate.replace('***USER CODE SLOT***', this.contents);\n    return new Function(funcSrc).bind(evalApi.api);\n  }\n\n  execute(): UserDefs {\n    return validateAndBuildUserDefs(this.toFunc()());\n  }\n}\n\n","import {\n  FunctionNotFoundError,\n  NotAFunctionError\n} from './errors';\nimport { UserDefs } from './userDefs';\n\n\nexport type InlineCall = {\n  input: string,\n  index: number\n};\n\n\nfunction isRegExpMatchArray(arg: RegExpMatchArray | InlineCall): arg is RegExpMatchArray {\n  return (arg as RegExpMatchArray)[0] !== undefined;\n}\n\nexport class FunctionCall {\n  functionName: string;\n\n  constructor(functionName: string) {\n    this.functionName = functionName;\n  }\n\n  toString(): string {\n    return `FunctionCall('${this.functionName}')`;\n  }\n\n  execute(userDefs: UserDefs, arg: RegExpMatchArray | InlineCall): string {\n    let func = userDefs.funcs[this.functionName];\n    let input, index;\n    let match = null;\n    let inlineCall = null;\n    if (isRegExpMatchArray(arg)) {\n      match = arg;\n      input = arg.input!;\n      index = arg.index!;\n    } else {\n      inlineCall = arg;\n      input = arg.input;\n      index = arg.index;\n    }\n    if (typeof func === 'undefined') {\n      throw new FunctionNotFoundError(this.functionName, input, index);\n    } else if (!(func instanceof Function)) {\n      throw new NotAFunctionError(this.functionName, input, index);\n    }\n    return func(match, inlineCall);\n  }\n}\n","import { prettyPrintArray } from './prettyPrinting';\nimport { Rule } from './rule';\n\n\nexport class Mode {\n  name: string;\n  rules: Rule[] = [];\n\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  toString() {\n    return `Mode{name: '${this.name}', `\n      + `rules: ${prettyPrintArray(this.rules)}}`;\n  }\n}\n\nexport type ModeMap = { [index: string]: Mode };\n","export function prettyPrintArray(array: any[]) {\n  if (array.length == 0) {\n    return '[]';\n  }\n  return `[${array.join(', ')}]`;\n}\n\n","import { TokenType } from './tokenType';\n\nexport class Token {\n\n  tokenType: TokenType;\n  /** Index of the first character of this token in the string */\n  index: number;\n  /** Index after the last character of this token in the string (exclusive bound) */\n  endIndex: number;\n  /**\n   * Output string for the token.\n   *\n   * This may not always be the same as the input text consumed by the token.\n   * For example, escape sequences like `\\{` will have `token.str === '{'`.\n   */\n  str: string;\n\n  constructor(tokenType: TokenType, index: number, endIndex: number, str: string) {\n    this.tokenType = tokenType;\n    this.index = index;\n    this.endIndex = endIndex;\n    this.str = str;\n  }\n\n  toString(): string {\n    return `Token{tokenType: ${this.tokenType}, index: ${this.index}, `\n      + `endIndex: ${this.endIndex}, string: '${this.str}'}`;\n  }\n}\n","export enum TokenType {\n  WHITESPACE = 'WHITESPACE',\n  NEW_LINE = 'NEW_LINE',\n  COMMENT = 'COMMENT',\n  OPEN_BLOCK_COMMENT = 'OPEN_BLOCK_COMMENT',\n  CLOSE_BLOCK_COMMENT = 'CLOSE_BLOCK_COMMENT',\n  SLASH = 'SLASH',\n  SINGLE_QUOTE = 'SINGLE_QUOTE',\n  DOUBLE_QUOTE = 'DOUBLE_QUOTE',\n  BACKTICK = 'BACKTICK',\n  OPEN_PAREN = 'OPEN_PAREN',\n  CLOSE_PAREN = 'CLOSE_PAREN',\n  OPEN_BRACE = 'OPEN_BRACE',\n  CLOSE_BRACE = 'CLOSE_BRACE',\n  OPEN_DOUBLE_BRACKET = 'OPEN_DOUBLE_BRACKET',\n  CLOSE_DOUBLE_BRACKET = 'CLOSE_DOUBLE_BRACKET',\n  COMMA = 'COMMA',\n  COLON = 'COLON',\n  AT = 'AT',\n  PIPE = 'PIPE',\n  ARROW = 'ARROW',\n  KW_CALL = 'KW_CALL',\n  KW_EVAL = 'KW_EVAL',\n  KW_MODE = 'KW_MODE',\n  KW_USE = 'KW_USE',\n  KW_MATCH = 'KW_MATCH',\n  NUMBER = 'NUMBER',\n  TEXT = 'TEXT',\n}\n","import { Token } from './token';\nimport { TokenType } from './tokenType';\n\nexport class Lexer {\n\n  str: string;\n  index: number;\n  private _cachedNext: Token | null = null;\n  private _newLineRe: RegExp = /\\r?\\n/y;\n  private _whitespaceRe: RegExp = /\\s+/y;\n  private _numberRe: RegExp = /(\\d+(\\.\\d+)?)|(\\.\\d+)/y;\n\n  constructor(str: string) {\n    this.str = str;\n    this.index = 0;\n  }\n\n  /**\n   * Set this.index and invalidate the next-token cache\n   */\n  overrideIndex(newIndex: number) {\n    this._cachedNext = null;\n    this.index = newIndex;\n  }\n\n  /**\n   * Determine the next item in the token stream\n   */\n  _determineNextRaw(): Token | null {\n    if (this.index >= this.str.length) {\n      return null;\n    }\n    let tokenType;\n    let tokenIndex = this.index;\n    let tokenEndIndex = null;\n    let tokenString;\n    this._newLineRe.lastIndex = this.index;\n    this._whitespaceRe.lastIndex = this.index;\n    this._numberRe.lastIndex = this.index;\n    let newLineMatch = this._newLineRe.exec(this.str);\n    let whitespaceMatch = this._whitespaceRe.exec(this.str);\n    let numberMatch = this._numberRe.exec(this.str);\n    if (newLineMatch !== null) {\n      tokenType = TokenType.NEW_LINE;\n      tokenString = newLineMatch[0];\n    } else if (whitespaceMatch !== null) {\n      tokenType = TokenType.WHITESPACE;\n      tokenString = whitespaceMatch[0];\n    } else if (numberMatch !== null) {\n      tokenType = TokenType.NUMBER;\n      tokenString = numberMatch[0];\n    } else if (this.str.slice(this.index, this.index + 2) === '//') {\n      tokenType = TokenType.COMMENT;\n      tokenString = '//';\n    } else if (this.str.slice(this.index, this.index + 2) === '/*') {\n      tokenType = TokenType.OPEN_BLOCK_COMMENT;\n      tokenString = '/*';\n    } else if (this.str.slice(this.index, this.index + 2) === '*/') {\n      tokenType = TokenType.CLOSE_BLOCK_COMMENT;\n      tokenString = '*/';\n    } else if (this.str[this.index] === '/') {\n      tokenType = TokenType.SLASH;\n      tokenString = '/';\n    } else if (this.str[this.index] === '\\'') {\n      tokenType = TokenType.SINGLE_QUOTE;\n      tokenString = '\\'';\n    } else if (this.str[this.index] === '\"') {\n      tokenType = TokenType.DOUBLE_QUOTE;\n      tokenString = '\"';\n    } else if (this.str[this.index] === '`') {\n      tokenType = TokenType.BACKTICK;\n      tokenString = '`';\n    } else if (this.str[this.index] === '(') {\n      tokenType = TokenType.OPEN_PAREN;\n      tokenString = '(';\n    } else if (this.str[this.index] === ')') {\n      tokenType = TokenType.CLOSE_PAREN;\n      tokenString = ')';\n    } else if (this.str[this.index] === '{') {\n      tokenType = TokenType.OPEN_BRACE;\n      tokenString = '{';\n    } else if (this.str[this.index] === '}') {\n      tokenType = TokenType.CLOSE_BRACE;\n      tokenString = '}';\n    } else if (this.str[this.index] === ',') {\n      tokenType = TokenType.COMMA;\n      tokenString = ',';\n    } else if (this.str[this.index] === ':') {\n      tokenType = TokenType.COLON;\n      tokenString = ':';\n    } else if (this.str[this.index] === '@') {\n      tokenType = TokenType.AT;\n      tokenString = '@';\n    } else if (this.str[this.index] === '|') {\n      tokenType = TokenType.PIPE;\n      tokenString = '|';\n    } else if (this.str.slice(this.index, this.index + 2) === '[[') {\n      tokenType = TokenType.OPEN_DOUBLE_BRACKET;\n      tokenString = '[[';\n    } else if (this.str.slice(this.index, this.index + 2) === ']]') {\n      tokenType = TokenType.CLOSE_DOUBLE_BRACKET;\n      tokenString = ']]';\n    } else if (this.str.slice(this.index, this.index + 2) === '->') {\n      tokenType = TokenType.ARROW;\n      tokenString = '->';\n    } else if (this.str.slice(this.index, this.index + 4) === 'call') {\n      tokenType = TokenType.KW_CALL;\n      tokenString = 'call';\n    } else if (this.str.slice(this.index, this.index + 4) === 'eval') {\n      tokenType = TokenType.KW_EVAL;\n      tokenString = 'eval';\n    } else if (this.str.slice(this.index, this.index + 4) === 'mode') {\n      tokenType = TokenType.KW_MODE;\n      tokenString = 'mode';\n    } else if (this.str.slice(this.index, this.index + 3) === 'use') {\n      tokenType = TokenType.KW_USE;\n      tokenString = 'use';\n    } else if (this.str.slice(this.index, this.index + 5) === 'match') {\n      tokenType = TokenType.KW_MATCH;\n      tokenString = 'match';\n    } else {\n      tokenType = TokenType.TEXT;\n      if (this.str[this.index] === '\\\\') {\n        let nextChar = this.str[this.index + 1];\n        if ('\\\\/[{'.includes(nextChar)) {\n          tokenEndIndex = this.index + 2;\n          tokenString = nextChar;\n        } else if (nextChar === 'n') {\n          tokenEndIndex = this.index + 2;\n          tokenString = '\\n';\n        } else if (nextChar === 't') {\n          tokenEndIndex = this.index + 2;\n          tokenString = '\\t';\n        } else if (nextChar === 'r') {\n          tokenEndIndex = this.index + 2;\n          tokenString = '\\r';\n        } else {\n          tokenString = '\\\\';\n        }\n      } else {\n        tokenString = this.str[this.index];\n      }\n    }\n\n    if (tokenEndIndex === null) {\n      tokenEndIndex = tokenIndex + tokenString.length;\n    }\n    let token = new Token(tokenType, tokenIndex, tokenEndIndex, tokenString);\n    return token;\n  }\n\n  _determineNextReal(): Token | null {\n    let inLineComment = false;\n    let inBlockComment = false;\n    let token;\n    let startIndex = this.index;\n    while ((token = this._determineNextRaw()) !== null) {\n      if (inLineComment) {\n        if (token.tokenType === TokenType.NEW_LINE) {\n          inLineComment = false;\n        }\n      } else if (inBlockComment) {\n        if (token.tokenType === TokenType.CLOSE_BLOCK_COMMENT) {\n          // Block comments output a single whitespace positioned at\n          // the closing slash of the `*/`\n          let virtualSpaceIdx = token.index + 1;\n          return new Token(TokenType.WHITESPACE, virtualSpaceIdx, virtualSpaceIdx + 1, ' ');\n        }\n      } else {\n        if (token.tokenType === TokenType.COMMENT) {\n          inLineComment = true;\n        } else if (token.tokenType === TokenType.OPEN_BLOCK_COMMENT) {\n          inBlockComment = true;\n        } else {\n          this.index = startIndex;\n          return token;\n        }\n      }\n      // Determining the next real token currently requires\n      // fake-consuming tokens until a real one is found.  It's a bad\n      // hack, but `this.index` should be reset to the initial\n      // position before this function exits.\n      this.index = token.endIndex;\n    }\n    this.index = startIndex;\n    return null;\n  }\n\n  next(): Token | null {\n    let token;\n    if (this._cachedNext !== null) {\n      token = this._cachedNext;\n      this._cachedNext = null;\n    } else {\n      token = this._determineNextReal();\n    }\n    if (token !== null) {\n      this.index = token.endIndex;\n    } else {\n      this.index = this.str.length;\n    }\n    return token;\n  }\n\n  peek(): Token | null {\n    if (this._cachedNext !== null) {\n      return this._cachedNext;\n    }\n    let token = this._determineNextReal();\n    this._cachedNext = token;\n    return token;\n  }\n\n  nextSatisfying(predicate: (a: Token) => boolean): Token | null {\n    let token;\n    while ((token = this.next()) !== null) {\n      if (predicate(token)) {\n        return token;\n      }\n    }\n    return null;\n  }\n\n  nextNonWhitespace(): Token | null {\n    return this.nextSatisfying((t) =>\n      (t.tokenType !== TokenType.WHITESPACE && t.tokenType !== TokenType.NEW_LINE));\n  }\n}\n","import { Replacer } from './replacer';\n\n\nexport class Rule {\n  matchers: RegExp[];\n  replacer: Replacer;\n\n  constructor(matchers: RegExp[], replacer: Replacer) {\n    this.matchers = matchers;\n    this.replacer = replacer;\n  }\n  toString() {\n    return `Rule{matchers: ${this.matchers}, replacer: ${this.replacer}}`;\n  }\n}\n","import { WeightedChoice, Choice } from './weightedChoice'\nimport {\n  normalizeWeights,\n  weightedChoose\n} from './rand';\n\nexport type ReplacerCallResult = {\n  replacement: Choice,\n  choiceIndex: number\n}\n\nexport class Replacer {\n  weights: WeightedChoice[];\n  identifier: string | null;\n  isSilent: boolean;\n\n  constructor(weights: WeightedChoice[], identifier: string | null, isSilent: boolean) {\n    this.weights = normalizeWeights(weights);\n    this.identifier = identifier;\n    this.isSilent = isSilent;\n  }\n\n  /**\n   * returns an object of the form {replacement: String, choiceIndex: Int}\n   */\n  call(): ReplacerCallResult {\n    let result = weightedChoose(this.weights);\n    return { replacement: result.choice, choiceIndex: result.choiceIndex };\n  }\n\n  toString(): string {\n    return `Replacer{weights: ${this.weights}, `\n      + `identifier: ${this.identifier}, isSilent: ${this.isSilent}}`;\n  }\n}\n","import { Choice } from './weightedChoice';\n\nexport type BackReferenceMap = Map<number, Choice>;\n\nexport class BackReference {\n\n  referredIdentifier: string;\n  choiceMap: BackReferenceMap;\n  fallback: Choice | null;\n\n  constructor(referredIdentifier: string, choiceMap: BackReferenceMap, fallback: Choice | null) {\n    this.referredIdentifier = referredIdentifier;\n    this.choiceMap = choiceMap;\n    this.fallback = fallback;\n  }\n}\n","import { EvalBlock } from './evalBlock';\nimport { FunctionCall } from './functionCall';\nimport { Mode, ModeMap } from './mode';\nimport { WeightedChoice, Choice } from './weightedChoice';\nimport { Lexer } from './lexer';\nimport { TokenType } from './tokenType';\nimport { Rule } from './rule';\nimport { Replacer } from './replacer';\nimport { BackReference } from './backReference';\nimport noOp from './noOp';\nimport {\n  IllegalStateError,\n  UnknownTransformError,\n  JavascriptSyntaxError,\n  BMLSyntaxError,\n  BMLDuplicatedRefIndexError,\n  ModeNameError,\n} from './errors';\nimport { escapeRegExp } from './stringUtils';\n\n\n/**\n * Parse an `eval` block\n *\n * @param lexer - A lexer whose next token is KW_EVAL. This will be\n *     mutated in place such that when the method returns, the lexer's\n *     next token will be after the closing brace of the block.\n *\n * @return The string of Javascript code extracted from the eval block\n *\n * @throws {BMLSyntaxError} If the lexer is not at an eval block\n *\n * @throws {JavascriptSyntaxError} If the javascript snippet inside the eval\n *     block contains a syntax error which makes parsing it impossible.\n */\nexport function parseEval(lexer: Lexer): string {\n  if (lexer.next()?.tokenType !== TokenType.KW_EVAL) {\n    throw new IllegalStateError('parseEval started with non-KW_EVAL');\n  }\n\n  if (lexer.nextNonWhitespace()?.tokenType !== TokenType.OPEN_BRACE) {\n    throw new BMLSyntaxError(\n      'eval blocks must be opened with a curly brace (\"{\")',\n      lexer.str, lexer.index);\n  }\n\n  let state = 'code';\n  let index = lexer.index;\n  let startIndex = index;\n  let openBraceCount = 1;\n  let token;\n  while ((token = lexer.next()) !== null) {\n    switch (state) {\n      case 'block comment':\n        if (token.tokenType === TokenType.CLOSE_BLOCK_COMMENT) {\n          state = 'code';\n        }\n        break;\n      case 'inline comment':\n        if (token.tokenType === TokenType.NEW_LINE) {\n          state = 'code';\n        }\n        break;\n      case 'template literal':\n        if (token.tokenType === TokenType.BACKTICK) {\n          state = 'code';\n        }\n        break;\n      case 'single-quote string':\n        if (token.tokenType === TokenType.SINGLE_QUOTE) {\n          state = 'code';\n        } else if (token.tokenType === TokenType.NEW_LINE) {\n          throw new JavascriptSyntaxError(lexer.str, lexer.index);\n        }\n        break;\n      case 'double-quote string':\n        if (token.tokenType === TokenType.DOUBLE_QUOTE) {\n          state = 'code';\n        } else if (token.tokenType === TokenType.NEW_LINE) {\n          throw new JavascriptSyntaxError(lexer.str, lexer.index);\n        }\n        break;\n      case 'regexp literal':\n        if (token.tokenType === TokenType.SLASH) {\n          state = 'code';\n        }\n        break;\n      case 'code':\n        switch (token.tokenType) {\n          case TokenType.OPEN_BRACE:\n            openBraceCount++;\n            break;\n          case TokenType.CLOSE_BRACE:\n            openBraceCount--;\n            if (openBraceCount < 1) {\n              return lexer.str.slice(startIndex, lexer.index - 1);\n            }\n            break;\n          case TokenType.COMMENT:\n            state = 'inline comment';\n            break;\n          case TokenType.OPEN_BLOCK_COMMENT:\n            state = 'block comment';\n            break;\n          case TokenType.BACKTICK:\n            state = 'template literal';\n            break;\n          case TokenType.SINGLE_QUOTE:\n            state = 'single-quote string';\n            break;\n          case TokenType.DOUBLE_QUOTE:\n            state = 'double-quote string';\n            break;\n          case TokenType.SLASH:\n            state = 'regexp literal';\n            break;\n          default:\n          // pass over..\n        }\n        break;\n      default:\n        throw new Error(`Invalid state: ${state}`);\n    }\n  }\n  throw new BMLSyntaxError('could not find end of `eval` block',\n    lexer.str, startIndex);\n}\n\nexport function parseMatchers(lexer: Lexer): RegExp[] {\n  let startIndex = lexer.index;\n  let token;\n  let acceptMatcher = true;\n  let matchers = [];\n  while ((token = lexer.peek()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.WHITESPACE:\n      case TokenType.NEW_LINE:\n        break;\n      case TokenType.ARROW:\n        return matchers;\n      case TokenType.SLASH:\n        if (acceptMatcher) {\n          matchers.push(parseRegexMatcher(lexer));\n          acceptMatcher = false;\n          // break out of loop since the string literal token\n          // stream has already been consumed.\n          continue;\n        } else {\n          throw new BMLSyntaxError('unexpected regex literal.',\n            lexer.str, token.index);\n        }\n      case TokenType.OPEN_PAREN:\n        if (acceptMatcher) {\n          let strMatcher = parseReplacementWithLexer(lexer);\n          let matcher = new RegExp(escapeRegExp(strMatcher), 'y');\n          matchers.push(matcher);\n          acceptMatcher = false;\n          // break out of loop since the string literal token\n          // stream has already been consumed.\n          continue;\n        } else {\n          throw new BMLSyntaxError('unexpected string literal.',\n            lexer.str, token.index);\n        }\n      case TokenType.COMMA:\n        acceptMatcher = true;\n        break;\n      default:\n        throw new BMLSyntaxError(`Unexpected token ${token}`,\n          lexer.str, token.index);\n    }\n    // If we haven't broken out or thrown an error by now, consume this token.\n    lexer.next();\n  }\n  throw new BMLSyntaxError('Could not find end of matcher.',\n    lexer.str, startIndex);\n}\n\nexport function parseCall(lexer: Lexer): FunctionCall {\n  let callRe = /call\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)/y;\n  callRe.lastIndex = lexer.index;\n  let callMatch = callRe.exec(lexer.str);\n  if (callMatch === null) {\n    throw new BMLSyntaxError('invalid call statement',\n      lexer.str, lexer.index);\n  }\n  lexer.overrideIndex(lexer.index + callMatch[0].length);\n  return new FunctionCall(callMatch[1]);\n}\n\n// Expects the lexer's current token immediately follows the\n// replacement list open braace.\nexport function parseReplacements(lexer: Lexer, forRule: boolean): Replacer {\n  let startIndex = lexer.index;\n  let token;\n  let choices = [];\n  let acceptReplacement = true;\n  let acceptWeight = false;\n  let acceptComma = false;\n  let acceptReplacerEnd = false;\n  let matchReplacementFound = false;\n\n  // I think this will fail if there is a linebreak or\n  // comments after open brace but before identifier\n  let identifier = null;\n  let isSilent = false;\n  let identifierRe = /\\s*(#?)(\\w+):/y;\n  identifierRe.lastIndex = lexer.index;\n  let identifierMatch = identifierRe.exec(lexer.str);\n  if (identifierMatch) {\n    if (forRule) {\n      throw new BMLSyntaxError('Choice identifiers are not allowed in rules',\n        lexer.str, lexer.index);\n    }\n    identifier = identifierMatch[2];\n    if (identifierMatch[1]) {\n      isSilent = true;\n    }\n    lexer.overrideIndex(lexer.index + identifierMatch[0].length);\n  }\n\n  while ((token = lexer.peek()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.WHITESPACE:\n      case TokenType.NEW_LINE:\n        break;\n      case TokenType.OPEN_PAREN:\n      case TokenType.KW_MATCH:\n        if (acceptReplacement) {\n          acceptReplacement = false;\n          acceptWeight = true;\n          acceptComma = true;\n          acceptReplacerEnd = true;\n          if (token.tokenType == TokenType.KW_MATCH) {\n            if (matchReplacementFound) {\n              throw new BMLSyntaxError('Rules may have at most one special `match` choice',\n                lexer.str, token.index);\n            }\n            matchReplacementFound = true;\n            choices.push(new WeightedChoice(noOp, null));\n          } else {\n            choices.push(new WeightedChoice(\n              parseReplacementWithLexer(lexer), null));\n            // Replacement parser consumes tokens, so skip that in\n            // this loop\n            continue;\n          }\n        } else {\n          throw new BMLSyntaxError('unexpected token',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.CLOSE_BRACE:\n        if (acceptReplacerEnd) {\n          lexer.next(); // Consume close brace\n          return new Replacer(choices, identifier, isSilent);\n        } else {\n          throw new BMLSyntaxError(\n            `unexpected end of replacer: ${token.tokenType}`,\n            lexer.str, token.index);\n        }\n      case TokenType.KW_CALL:\n        if (acceptReplacement) {\n          acceptReplacement = false;\n          acceptWeight = true;\n          acceptComma = true;\n          acceptReplacerEnd = true;\n          choices.push(new WeightedChoice(parseCall(lexer), null));\n        } else {\n          throw new BMLSyntaxError('unexpected call statement.',\n            lexer.str, token.index);\n        }\n        continue;\n      case TokenType.NUMBER:\n        if (acceptWeight) {\n          acceptWeight = false;\n          acceptComma = true;\n          acceptReplacerEnd = true;\n          choices[choices.length - 1].weight = Number(token.str);\n        } else {\n          throw new BMLSyntaxError('unexpected number literal.',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.COMMA:\n        if (acceptComma) {\n          acceptComma = false;\n          acceptReplacement = true;\n          acceptWeight = false;\n          acceptReplacerEnd = true;\n        } else {\n          throw new BMLSyntaxError('unexpected comma.',\n            lexer.str, token.index);\n        }\n        break;\n      default:\n        throw new BMLSyntaxError(`Unexpected token ${token}`,\n          lexer.str, token.index);\n    }\n\n    // If we haven't broken out or thrown an error by now, consume this token.\n    lexer.next();\n  }\n  throw new BMLSyntaxError('Could not find end of replacer.',\n    lexer.str, startIndex);\n}\n\n\nexport function parseRule(lexer: Lexer): Rule {\n  let matchers = parseMatchers(lexer);\n  if (lexer.nextNonWhitespace()?.tokenType !== TokenType.ARROW) {\n    throw new BMLSyntaxError('matchers must be followed by an arrow (->)',\n      lexer.str, lexer.index);\n  }\n  if (lexer.nextNonWhitespace()?.tokenType !== TokenType.OPEN_BRACE) {\n    throw new BMLSyntaxError('rule replacers must be surrounded by braces',\n      lexer.str, lexer.index);\n  }\n  let replacements = parseReplacements(lexer, true);\n  return new Rule(matchers, replacements);\n}\n\nexport function parseMode(lexer: Lexer): Mode {\n  let startIndex = lexer.index;\n  if (lexer.peek()?.tokenType !== TokenType.KW_MODE) {\n    throw new BMLSyntaxError('modes must begin with keyword \"mode\"',\n      lexer.str, lexer.index);\n  }\n  let token = lexer.next();  // consume KW_MODE\n  let modeNameRe = /(\\s*(\\w+)\\s*)/y;\n  modeNameRe.lastIndex = lexer.index;\n  let modeNameMatch = modeNameRe.exec(lexer.str);\n  if (!modeNameMatch) {\n    throw new BMLSyntaxError('mode name is absent or invalid',\n      lexer.str, lexer.index);\n  }\n  let modeName = modeNameMatch[2];\n  if (modeName === 'none') {\n    throw new ModeNameError('none', 'It shadows the built-in \"none\" pseudo-mode.',\n      lexer.str, lexer.index);\n  }\n  let mode = new Mode(modeName);\n  lexer.overrideIndex(lexer.index + modeNameMatch[1].length);\n\n  if (lexer.peek()?.tokenType !== TokenType.OPEN_BRACE) {\n    throw new BMLSyntaxError('modes must be opened with a curly brace (\"{\")',\n      lexer.str, lexer.index);\n  }\n  lexer.next();  // consume open brace\n\n  while ((token = lexer.peek()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.WHITESPACE:\n      case TokenType.NEW_LINE:\n        break;\n      case TokenType.OPEN_PAREN:\n      case TokenType.SLASH:\n        mode.rules.push(parseRule(lexer));\n        continue;\n      case TokenType.CLOSE_BRACE:\n        // consume closing brace\n        lexer.next();\n        return mode;\n      default:\n        throw new BMLSyntaxError(`Unexpected token ${token}`,\n          lexer.str, token.index);\n    }\n    // Accept and consume the token\n    lexer.next();\n  }\n  throw new BMLSyntaxError('Could not find end of mode',\n    lexer.str, startIndex);\n}\n\n/*\n    preludeEndIndex: lexer.index,\n    evalBlock: new EvalBlock(evalString),\n    modes: modes,\n\n*/\ntype ParsePreludeResult = {\n  preludeEndIndex: number, evalBlock: EvalBlock, modes: ModeMap\n};\n\nexport function parsePrelude(str: string): ParsePreludeResult {\n  let lexer = new Lexer(str);\n  let evalString = '';\n  let modes: ModeMap = {};\n  let token;\n  while ((token = lexer.peek()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.WHITESPACE:\n      case TokenType.NEW_LINE:\n        break;\n      case TokenType.KW_EVAL:\n        evalString += parseEval(lexer) + '\\n';\n        continue;\n      case TokenType.KW_MODE:\n        var newMode = parseMode(lexer);\n        modes[newMode.name] = newMode;\n        continue;\n      default:\n        return {\n          preludeEndIndex: lexer.index,\n          evalBlock: new EvalBlock(evalString),\n          modes: modes,\n        };\n    }\n    lexer.next();\n  }\n  // The prelude never ended in the document\n  return {\n    preludeEndIndex: lexer.index,\n    evalBlock: new EvalBlock(evalString),\n    modes: modes,\n  };\n}\n\ntype ParseUseResult = {\n  blockEndIndex: number,\n  modeName: string\n};\n\n/**\n * Parse a `use` block of the form `{use modeName}`\n *\n * @returns The returned index is the index immediately\n * after the closing brace.\n */\nexport function parseUse(str: string, openBraceIndex: number): ParseUseResult {\n  let useRe = /{use\\s+(\\w[\\w\\d]*)\\s*}/y;\n  useRe.lastIndex = openBraceIndex;\n  let match = useRe.exec(str);\n  if (match === null) {\n    throw new UnknownTransformError(str, openBraceIndex);\n  }\n  return {\n    blockEndIndex: useRe.lastIndex,\n    modeName: match[1]\n  };\n}\n\n/**\n * @param lexer a lexer whose next token is TokenType.OPEN_PAREN\n *\n * @return the parsed string literal replacement body\n */\nexport function parseReplacementWithLexer(lexer: Lexer): string {\n  lexer.next();\n  let startIndex = lexer.index;\n  let stringLiteral = '';\n  let token;\n  let openParenCount = 1;\n  while ((token = lexer.next()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.OPEN_PAREN:\n        openParenCount++;\n        break;\n      case TokenType.CLOSE_PAREN:\n        openParenCount--;\n        if (openParenCount < 1) {\n          return stringLiteral;\n        }\n        break;\n    }\n    stringLiteral += token.str;\n  }\n  throw new BMLSyntaxError('Could not find end of replacement.',\n    lexer.str, startIndex);\n}\n\n/**\n * @param lexer a lexer whose next token is TokenType.SLASH\n */\nexport function parseRegexMatcher(lexer: Lexer): RegExp {\n  lexer.next();\n  let startIndex = lexer.index;\n  let stringLiteral = '';\n  let token;\n  while ((token = lexer.next()) !== null) {\n    if (token.tokenType === TokenType.SLASH) {\n      return new RegExp(stringLiteral, 'y');\n    } else if (token.tokenType === TokenType.CLOSE_BLOCK_COMMENT) {\n      // A funny edge case where regexps ending with an asterisk are\n      // tokenized as close-block-comments.\n      return new RegExp(stringLiteral + '*', 'y');\n    }\n    stringLiteral += token.str;\n  }\n  throw new BMLSyntaxError('Could not find end of replacement.',\n    lexer.str, startIndex);\n}\n\ntype ParseInlineCommandResult = {\n  blockEndIndex: number,\n  backReference: BackReference | null,\n  replacer: Replacer | null\n}\n\n// TODO turns out actually this name doesnt fully make sense.\n// the renderer uses an ahead-of-time regex before going into parsing\n// since it will parse a 'use' command differently from replacers/backrefs.\n// maybe refactor to combine these into one brace-command parser here?\nexport function parseInlineCommand(str: string, openBraceIndex: number): ParseInlineCommandResult {\n  let lexer = new Lexer(str);\n  lexer.overrideIndex(openBraceIndex + 1);\n  let backReference = parseBackReference(lexer);\n  let replacer = null;\n  if (backReference == null) {\n    replacer = parseReplacements(lexer, false);\n  }\n  return {\n    blockEndIndex: lexer.index,\n    backReference: backReference,\n    replacer: replacer,\n  };\n}\n\n// Returns null if there is no backref slug at the beginning of the block\nexport function parseBackReference(lexer: Lexer): BackReference | null {\n  let startIndex = lexer.index;\n\n  // TODO I think this doesn't work if there's a comment or linebreak\n  // after the opening brace but before the identifier slug\n  let referredIdentifierRe = /\\s*@(\\w+)/y;\n  referredIdentifierRe.lastIndex = lexer.index;\n  let referredIdentifierMatch = referredIdentifierRe.exec(lexer.str);\n  if (!referredIdentifierMatch) {\n    return null;\n  }\n  let referredIdentifier = referredIdentifierMatch[1];\n  lexer.overrideIndex(lexer.index + referredIdentifierMatch[0].length);\n\n  let choiceMap = new Map();\n  let fallback: Choice | null = null;\n\n  let acceptColon = true;\n  let acceptChoiceIndex = false;\n  let acceptArrow = false;\n  let acceptReplacement = false;\n  let acceptComma = false;\n  let acceptBlockEnd = true;\n\n  let currentChoiceIndexes = [];\n  let currentReplacement = null;\n  let token;\n\n  while ((token = lexer.peek()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.WHITESPACE:\n      case TokenType.NEW_LINE:\n        break;\n      case TokenType.COLON:\n        if (acceptColon) {\n          acceptColon = false;\n          acceptChoiceIndex = true;\n          acceptBlockEnd = false;\n        } else {\n          throw new BMLSyntaxError('Unexpected colon in back reference block',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.NUMBER:\n        if (acceptChoiceIndex) {\n          acceptChoiceIndex = false;\n          acceptArrow = true;\n          acceptComma = true;\n          currentChoiceIndexes.push(Number(token.str));\n        } else {\n          throw new BMLSyntaxError('Unexpected number in back reference block',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.ARROW:\n        if (acceptArrow) {\n          acceptArrow = false;\n          acceptReplacement = true;\n          acceptComma = false;\n        } else {\n          throw new BMLSyntaxError('Unexpected arrow in back reference block',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.OPEN_PAREN:\n      case TokenType.KW_CALL:\n        if (acceptReplacement) {\n          if (token.tokenType === TokenType.OPEN_PAREN) {\n            currentReplacement = parseReplacementWithLexer(lexer);\n          } else {\n            currentReplacement = parseCall(lexer);\n          }\n          if (currentChoiceIndexes.length) {\n            for (let choiceIndex of currentChoiceIndexes) {\n              if (choiceMap.has(choiceIndex)) {\n                // it's not ideal to validate this here, but with the way it's currently\n                // built, if we don't it will just silently overwrite the key\n                throw new BMLDuplicatedRefIndexError(\n                  referredIdentifier, choiceIndex, lexer.str, token.index);\n              }\n              choiceMap.set(choiceIndex, currentReplacement);\n            }\n            // Reset state for next choice\n            acceptReplacement = false;\n            acceptComma = true;\n            acceptBlockEnd = true;\n            currentChoiceIndexes = [];\n            currentReplacement = null;\n          } else {\n            // Since there is no current choice index, this must be a fallback choice\n            fallback = currentReplacement;\n            // Set state so the block must end here.\n            acceptReplacement = false;\n            acceptComma = false;\n            acceptBlockEnd = true;\n          }\n        } else {\n          throw new BMLSyntaxError('Unexpected replacement in back reference block',\n            lexer.str, token.index);\n        }\n        continue;\n      case TokenType.COMMA:\n        if (acceptComma) {\n          acceptComma = false;\n          acceptChoiceIndex = true;\n          // Replacements can directly follow commas if they are fallbacks\n          acceptReplacement = true;\n        } else {\n          throw new BMLSyntaxError('Unexpected comma in back reference block',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.CLOSE_BRACE:\n        if (acceptBlockEnd) {\n          lexer.next();  // consume close brace\n          return new BackReference(referredIdentifier, choiceMap, fallback);\n        } else {\n          throw new BMLSyntaxError('Unexpected close brace in back reference block',\n            lexer.str, token.index);\n        }\n      default:\n        throw new BMLSyntaxError(`Unexpected token ${token}`,\n          lexer.str, token.index);\n    }\n    // If we haven't broken out or thrown an error by now, consume this token.\n    lexer.next();\n  }\n  throw new BMLSyntaxError('Could not find end of back reference block.',\n    lexer.str, startIndex);\n}\n\n","/**\n * A pseudo-replacement which instruct a Replacer to leave\n * the matched text as-is.\n *\n * This value should be used read-only.\n */\nexport = Symbol('noOp');\n","{\n  \"name\": \"bml\",\n  \"version\": \"0.0.33\",\n  \"description\": \"A stochastic markup language\",\n  \"author\": {\n    \"name\": \"Andrew Yoon\",\n    \"email\": \"andrew@nothing-to-say.org\",\n    \"url\": \"https://andrewyoon.art\"\n  },\n  \"man\": \"./man/bml.1\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/ajyoon/bml\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/ajyoon/bml/issues\"\n  },\n  \"source\": \"src/bml.ts\",\n  \"main\": \"dist/index.js\",\n  \"bundle\": \"dist/bml.bundle.js\",\n  \"cli\": \"dist/cli.js\",\n  \"targets\": {\n    \"main\": {\n      \"optimize\": true\n    },\n    \"bundle\": {\n      \"source\": \"src/browserIndex.js\",\n      \"optimize\": true,\n      \"outputFormat\": \"global\",\n      \"context\": \"browser\",\n      \"isLibrary\": false\n    },\n    \"cli\": {\n      \"source\": \"src/cli.ts\",\n      \"optimize\": true,\n      \"sourceMap\": false,\n      \"context\": \"node\",\n      \"isLibrary\": false\n    }\n  },\n  \"bin\": {\n    \"bml\": \"dist/cli.js\"\n  },\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"releaseTest\": \"node test/releaseTest.js\",\n    \"checkTypes\": \"./node_modules/.bin/tsc --noEmit\",\n    \"buildOnly\": \"./node_modules/.bin/parcel build\",\n    \"build\": \"npm run checkTypes && npm run buildOnly && npm run releaseTest\",\n    \"preversion\": \"npm test\",\n    \"version\": \"npm run build\"\n  },\n  \"devDependencies\": {\n    \"@parcel/transformer-typescript-types\": \"^2.0.1\",\n    \"@swc/core\": \"^1.2.119\",\n    \"@swc/jest\": \"^0.2.14\",\n    \"@types/jest\": \"^27.0.3\",\n    \"@types/sha.js\": \"^2.4.0\",\n    \"jest\": \"^27.4.4\",\n    \"parcel\": \"^2.0.1\",\n    \"sha.js\": \"2.4.11\",\n    \"typescript\": \"^4.5.4\"\n  },\n  \"dependencies\": {\n    \"marked\": \"0.3.19\",\n    \"seedrandom\": \"2.4.4\"\n  },\n  \"license\": \"BSD-3-Clause\"\n}\n","import * as rand from './rand';\nimport * as postprocessing from './postprocessing';\nimport { defaultBMLSettings, defaultRenderSettings, mergeSettings, RenderSettings } from './settings';\nimport { Mode, ModeMap } from './mode';\nimport { BackReference } from './backReference';\nimport { parsePrelude, parseUse, parseInlineCommand, } from './parsers';\nimport { UserDefs } from './userDefs';\nimport { FunctionCall } from './functionCall';\nimport { Lexer } from './lexer';\nimport { TokenType } from './tokenType';\nimport { UnknownModeError, BMLDuplicatedRefError, IllegalStateError, } from './errors';\nimport { Choice } from './weightedChoice';\nconst BML_VERSION = require('../package.json')['version'];\n\nexport type ChoiceResult = { choiceIndex: number, renderedOutput: string };\nexport type ChoiceResultMap = Map<string, ChoiceResult>;\n\n\n/**\n * Check if the running version of bml aligns with a specified one.\n *\n * If the versions do not align, log a warning to the console.\n * If no version is specified, do nothing.\n */\nfunction checkVersion(bmlVersion: string, specifiedInSettings: string) {\n  if (specifiedInSettings !== bmlVersion) {\n    console.warn('BML VERSION MISMATCH.' +\n      ' bml source file specifies version ' + specifiedInSettings +\n      ' but running version is ' + BML_VERSION + '.' +\n      ' unexpected behavior may occur.');\n  }\n}\n\nfunction resolveBackReference(choiceResultMap: ChoiceResultMap, backReference: BackReference): Choice {\n  let referredChoiceResult = choiceResultMap.get(backReference.referredIdentifier);\n  if (referredChoiceResult) {\n    if (backReference.choiceMap.size === 0 && backReference.fallback === null) {\n      // this is a special \"copy\" backref\n      return referredChoiceResult.renderedOutput;\n    }\n    let matchedBackReferenceResult = backReference.choiceMap.get(referredChoiceResult.choiceIndex);\n    if (matchedBackReferenceResult !== undefined) {\n      return matchedBackReferenceResult;\n    }\n  }\n  if (backReference.fallback === null) {\n    console.warn(`No matching reference or fallback found for ${backReference.referredIdentifier}`);\n    return '';\n  }\n  return backReference.fallback;\n}\n\ntype RenderTextResult = {\n  activeMode: Mode | null,\n  output: string\n}\n\n/**\n * The main loop which processes the text component of a bml document.\n *\n * Iterates through the body of the text exactly once, applying rules\n * whenever a matching string is encountered. Rules are processed in\n * the order they are listed in the active mode's declaration.\n */\nfunction renderText(str: string, startIndex: number, modes: ModeMap,\n  activeMode: Mode | null, userDefs: UserDefs,\n  choiceResultMap: ChoiceResultMap | null, stackDepth: number\n): RenderTextResult {\n  // TODO this function is way too complex and badly needs refactor\n  choiceResultMap = choiceResultMap || new Map();\n  let inVisualLineBreak = false;\n  let inLiteralBlock = false;\n  let out = '';\n  let currentRule = null;\n  let foundMatch = false;\n  let replacement = null;\n  let chooseRe = /\\s*(\\(|call|#?\\w+:|@\\w+)/y;\n  let useRe = /\\s*use/y;\n  let token;\n  let lexer = new Lexer(str);\n  lexer.overrideIndex(startIndex);\n\n  if (stackDepth > 1000) {\n    throw new Error(\n      'render stack depth exceeded 1000, aborting likely infinite recursion.');\n  }\n\n  while ((token = lexer.peek()) !== null) {\n    if (inLiteralBlock) {\n      if (token.tokenType === TokenType.CLOSE_DOUBLE_BRACKET) {\n        inLiteralBlock = false;\n      } else {\n        out += token.str;\n      }\n      lexer.next();\n      continue;\n    }\n\n    if (inVisualLineBreak) {\n      if (token.tokenType === TokenType.WHITESPACE) {\n        lexer.next();\n        continue;\n      } else {\n        inVisualLineBreak = false;\n      }\n    }\n\n    switch (token.tokenType) {\n      case TokenType.OPEN_DOUBLE_BRACKET:\n        inLiteralBlock = true;\n        break;\n      case TokenType.NEW_LINE:\n        if (out.endsWith('\\\\')) {\n          inVisualLineBreak = true;\n          // hackily overwrite the backslash to a space since it's for a\n          // visual line break.\n          out = out.substring(0, out.length - 1) + ' ';\n        } else {\n          out += token.str;\n        }\n        break;\n      case TokenType.OPEN_BRACE:\n        chooseRe.lastIndex = token.index + 1;\n        useRe.lastIndex = token.index + 1;\n        if (chooseRe.test(str)) {\n          let parseInlineCommandResult = parseInlineCommand(str, token.index);\n          let replacer = parseInlineCommandResult.replacer;\n          let backReference = parseInlineCommandResult.backReference;\n          let replacerCallResult;\n          if (replacer) {\n            replacerCallResult = replacer.call();\n            if (replacer.identifier) {\n              if (choiceResultMap.has(replacer.identifier)) {\n                throw new BMLDuplicatedRefError(replacer.identifier, str, token.index);\n              }\n            }\n            replacement = replacerCallResult.replacement;\n          } else {\n            // sanity check\n            if (!backReference) {\n              throw new IllegalStateError('No replacer or backref from inline choose');\n            }\n            replacement = resolveBackReference(choiceResultMap, backReference);\n          }\n          let renderedReplacement;\n          if (replacement instanceof FunctionCall) {\n            let inlineCall = { input: str, index: token.index };\n            renderedReplacement = replacement.execute(userDefs, inlineCall);\n          } else if (typeof replacement === 'symbol') {\n            throw new IllegalStateError('No-op replacers should never come from inline choices');\n          } else {\n            // To handle nested choices and to run rules over chosen text,\n            // we recursively render the chosen text.\n            let recursiveRenderResult = renderText(\n              replacement, 0, modes, activeMode, userDefs, choiceResultMap, stackDepth + 1);\n            renderedReplacement = recursiveRenderResult.output;\n            activeMode = recursiveRenderResult.activeMode;\n          }\n          if (!(replacer && replacer.isSilent)) {\n            out += renderedReplacement;\n          }\n          if (replacerCallResult && replacer?.identifier) {\n            choiceResultMap.set(\n              replacer.identifier,\n              { choiceIndex: replacerCallResult.choiceIndex, renderedOutput: renderedReplacement });\n          }\n          lexer.overrideIndex(parseInlineCommandResult.blockEndIndex);\n          continue;\n        } else if (useRe.test(str)) {\n          let parseUseResult = parseUse(str, token.index);\n          lexer.overrideIndex(parseUseResult.blockEndIndex);\n          if (modes.hasOwnProperty(parseUseResult.modeName)) {\n            activeMode = modes[parseUseResult.modeName];\n          } else if (parseUseResult.modeName === 'none') {\n            activeMode = null;\n          } else {\n            throw new UnknownModeError(parseUseResult.modeName, str, token.index);\n          }\n        }\n        break;\n      default:\n        if (activeMode !== null) {\n          ruleLoop:\n          for (let r = 0; r < activeMode.rules.length; r++) {\n            currentRule = activeMode.rules[r];\n            for (let m = 0; m < currentRule.matchers.length; m++) {\n              currentRule.matchers[m].lastIndex = token.index;\n              let currentMatch = currentRule.matchers[m].exec(str);\n              if (currentMatch !== null) {\n                replacement = currentRule.replacer.call().replacement;\n                if (replacement instanceof FunctionCall) {\n                  out += replacement.execute(userDefs, currentMatch);\n                } else if (typeof replacement === 'symbol') { // no-op\n                  out += currentMatch[0];\n                } else {\n                  // To handle nested choices and to run rules over replaced text,\n                  // we recursively render the chosen text.\n                  let recursiveRenderResult = renderText(\n                    replacement, 0, modes, activeMode, userDefs, choiceResultMap, stackDepth + 1);\n                  out += recursiveRenderResult.output;\n                  activeMode = recursiveRenderResult.activeMode;\n                }\n                lexer.overrideIndex(lexer.index + currentMatch[0].length);\n                foundMatch = true;\n                break ruleLoop;\n              }\n            }\n          }\n        }\n        if (foundMatch) {\n          foundMatch = false;\n          continue;\n        } else {\n          out += token.str;\n        }\n\n        break;  // Break from `switch (token.tokenType)`\n    }\n\n    lexer.next();  // Consume token\n  }\n\n  return { activeMode, output: out };\n}\n\nexport function render(bmlDocumentString: string, renderSettings?: RenderSettings): string {\n  // Resolve render settings\n  renderSettings = mergeSettings(defaultRenderSettings, renderSettings);\n  if (renderSettings.randomSeed) {\n    rand.setRandomSeed(renderSettings.randomSeed);\n  }\n\n  // Parse prelude\n  let {\n    preludeEndIndex,\n    evalBlock,\n    modes,\n  } = parsePrelude(bmlDocumentString);\n\n  let userDefs: UserDefs = { funcs: {} };\n  if (evalBlock && renderSettings.allowEval) {\n    userDefs = evalBlock.execute();\n    if (userDefs.settings?.version) {\n      checkVersion(BML_VERSION, userDefs.settings.version);\n    }\n  }\n  userDefs.settings = mergeSettings(defaultBMLSettings, userDefs.settings);\n\n  // Main render pass\n  let { output } = renderText(\n    bmlDocumentString, preludeEndIndex, modes, null, userDefs, null, 0);\n\n  // Post-processing\n  if (userDefs.settings.punctuationCleanup) {\n    output = postprocessing.punctuationCleanup(output);\n  }\n  if (userDefs.settings.capitalizationCleanup) {\n    output = postprocessing.capitalizationCleanup(output);\n  }\n  if (renderSettings.renderMarkdown) {\n    output = postprocessing.renderMarkdown(output, userDefs.settings!.markdownSettings!);\n  }\n  if (userDefs.settings.whitespaceCleanup) {\n    output = postprocessing.whitespaceCleanup(output);\n  }\n\n  return output;\n}\n","/* @license BML - BSD 3 Clause License - Source at github.com/ajyoon/bml - Docs at bml-lang.org */\nimport { render } from './renderer';\n\nwindow['bml'] = render;\n"],"names":["global","module","define","Alea","seed","n","me","this","mash","data","toString","i","length","h","charCodeAt","next","t","s0","c","s1","s2","copy","f","impl","opts","xg","state","prng","int32","double","quick","exports","amd","alea","XorGen","strseed","x","y","z","w","k","result","xor128","v","d","xorwow","seed1","me1","X","j","push","init","slice","Date","xorshift7","limit","Math","max","xor4096","b","a","floor","tychei","pool","math","nodecrypto","eval","width","startdenom","pow","significance","overflow","mask","seedrandom","options","callback","key","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","e","browser","navigator","plugins","screen","autoseed","arc4","ARC4","prng1","g","S","pass","is_math_call","t1","keylen","i1","j1","count","r","s","obj","depth","prop","typ","smear","stringseed","String","fromCharCode","apply","random","$de25f06528302ebd$exports","parcelRequire","ex","$aB8d8","$bvwaZ","$4N5rn","$duniz","$fozHI","$bOfxl","$0a5bb52c6d1eef19$var$rng","$parcel$interopDefault","$a48ab8efa38d2059$exports","$0a5bb52c6d1eef19$export$231d937d7748069","min","$0a5bb52c6d1eef19$export$3c5f89dae98e900b","ceil","$0a5bb52c6d1eef19$export$dfb0db305cae9fba","weights","sum","wc","weight","progress","pickedValue","choice","choiceIndex","console","warn","fallbackIndex","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","tokens","links","marked","defaults","rules","normal","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","merge","lex","src","prototype","token","top","loose","cap","bull","space","tag","l","isordered","exec","substring","type","pedantic","lang","header","split","align","cells","test","ordered","start","match","indexOf","RegExp","smartLists","join","charAt","sanitize","pre","sanitizer","toLowerCase","href","title","Error","inline1","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","encode","unescape","_","parseInt","regex","opt","name","val","resolveUrl","base","baseUrls","_scheme","_email","_inside","_href","_backpedal","output","mangle","inLink","outputLink","codespan","trim","smartypants","image","ch","escaped","highlight","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","baseUrl","originIndependentUrl","parse","inline","inlineText","reverse","tok","pop","peek","parseText","row","cell","target","arguments","Object","hasOwnProperty","call","pending","e1","done","err","message","silent","setOptions","parser","lexer","inlineLexer","$e17412b706c282a7$exports","window","$parcel$global","$3c8002124f0b28a7$var$BLANK_LINE_RE","$3c8002124f0b28a7$var$TRAILING_WHITESPACE_RE","$3c8002124f0b28a7$var$MISPLACED_WORD_ENDING_PUNC_RE","$3c8002124f0b28a7$var$INCORRECT_CAPS_RE","$3c8002124f0b28a7$var$correctCaps","_match","p1","p2","toUpperCase","$a1abfde96a1b0608$export$18e0fb7e055a6ffc","markdownSettings","whitespaceCleanup","punctuationCleanup","capitalizationCleanup","version","$a1abfde96a1b0608$export$129a826f9bfa0e84","randomSeed","allowEval","renderMarkdown","$a1abfde96a1b0608$export$953b8844777cd492","originalSettings","newSettings","assign","$d7a4a1fc06ece400$export$b363a0fb27031153","clone","$48c55f915096178d$export$644d8ea042df96a6","WeightedChoice","weightedChoose","randomInt","randomFloat","$f25694878da17ab2$export$faf796819bf7156f","str","index","lineAndColumn","line","column","newLine","$f25694878da17ab2$export$7762a5f1fbaa187f","$4eaaf5d13615fe5e$export$25b19446f82d7080","super","setPrototypeOf","$4eaaf5d13615fe5e$export$212344d213252f95","bmlDoc","errorIndex","$4eaaf5d13615fe5e$export$9bd8738e2696d815","message1","bmlDoc1","errorIndex1","$4eaaf5d13615fe5e$export$5f41361166083558","refIdentifier","bmlDoc2","errorIndex2","$4eaaf5d13615fe5e$export$5d36dfb58549021f","refIdentifier1","bmlDoc3","errorIndex3","$4eaaf5d13615fe5e$export$6c6c51f16f29431f","modeName","bmlDoc5","errorIndex5","$4eaaf5d13615fe5e$export$9ef72e94661c3220","modeName1","message2","bmlDoc6","errorIndex6","$4eaaf5d13615fe5e$export$24248a71bfa2fab5","bmlDoc7","errorIndex7","$4eaaf5d13615fe5e$export$6d57c32e6c6c0130","functionName","bmlDoc8","errorIndex8","$4eaaf5d13615fe5e$export$991f4d0fd19d17e","functionName1","bmlDoc9","errorIndex9","$4eaaf5d13615fe5e$export$2ada8c6f13595518","field","value","$4eaaf5d13615fe5e$export$b731e1a58a870ddc","msg","$0b1ebd0cd0e8c261$export$6c130788b012dde1","rawUserDefs","userDefs","settings","$0b1ebd0cd0e8c261$var$validateSettingField","entries","$0b1ebd0cd0e8c261$var$validateUserDefs","funcs","expectedType","object","$eb50eb5a55ccbe2f$var$evalFuncTemplate","$24e77ee80131e9b9$export$9a1bafc170b69ba1","execute","arg","input","func","inlineCall","undefined","$24e77ee80131e9b9$var$isRegExpMatchArray","Function","$7c874036a2c88ce4$export$9484bbecc3c49a2e","array","$a0898e5068760400$export$50792b0e93539fde","tokenType","endIndex","TokenType","$5ee56d1d412043f5$export$f435f793048e7a0f","$c77885fa6eb8beba$export$6168dc8908a6c652","_cachedNext","_newLineRe","_whitespaceRe","_numberRe","overrideIndex","newIndex","_determineNextRaw","tokenString","tokenIndex","tokenEndIndex","lastIndex","newLineMatch","whitespaceMatch","numberMatch","NEW_LINE","WHITESPACE","NUMBER","COMMENT","OPEN_BLOCK_COMMENT","CLOSE_BLOCK_COMMENT","SLASH","SINGLE_QUOTE","DOUBLE_QUOTE","BACKTICK","OPEN_PAREN","CLOSE_PAREN","OPEN_BRACE","CLOSE_BRACE","COMMA","COLON","AT","PIPE","OPEN_DOUBLE_BRACKET","CLOSE_DOUBLE_BRACKET","ARROW","KW_CALL","KW_EVAL","KW_MODE","KW_USE","KW_MATCH","TEXT","nextChar","includes","_determineNextReal","inLineComment","inBlockComment","startIndex","virtualSpaceIdx","nextSatisfying","predicate","nextNonWhitespace","$ad0518b6d3e4d6b1$export$f1ff2a90c38ff669","matchers","replacer","$dc53b4c3263ab0e2$export$2c385b67516de71a","identifier","isSilent","weightedChoices","normalized","nullWeightCount","weightedChoice","nullWeight","$0a5bb52c6d1eef19$export$a2691b3c66b90a97","replacement","$45d651019a8b7a9c$export$949d31b2afcebbfa","referredIdentifier","choiceMap","fallback","$4c4c14e18ca472bf$export$437922f793a69740","openBraceCount","$4c4c14e18ca472bf$export$bf5eeaec983d9d5c","callRe","callMatch","$4c4c14e18ca472bf$export$587d3aab031f1825","forRule","choices","acceptReplacement","acceptWeight","acceptComma","acceptReplacerEnd","matchReplacementFound","identifierRe","identifierMatch","$4c4c14e18ca472bf$export$b7109ba6fa51a553","$374ef612aeac1124$exports","Number","$4c4c14e18ca472bf$export$726deb39d943dc92","acceptMatcher","$4c4c14e18ca472bf$export$ce4b70811f5975c6","strMatcher","matcher","$4c4c14e18ca472bf$export$7b2c77e8475bb157","replacements","$4c4c14e18ca472bf$export$6b8114b908e5a4a","modeNameRe","modeNameMatch","mode","$4c4c14e18ca472bf$export$78332cb876194594","openBraceIndex","useRe","blockEndIndex","stringLiteral","openParenCount","$4c4c14e18ca472bf$export$18a629e1201c9f53","backReference","referredIdentifierRe","referredIdentifierMatch","Map","acceptColon","acceptChoiceIndex","acceptArrow","acceptBlockEnd","currentChoiceIndexes","currentReplacement","has","set","$4c4c14e18ca472bf$export$dc2893d54f1fa0ef","Symbol","JSON","$1ab5a1867bb1e647$var$resolveBackReference","choiceResultMap","referredChoiceResult","get","size","renderedOutput","matchedBackReferenceResult","$1ab5a1867bb1e647$var$renderText","modes","activeMode","stackDepth","inVisualLineBreak","inLiteralBlock","currentRule","foundMatch","chooseRe","endsWith","replacerCallResult","renderedReplacement","parseInlineCommandResult","recursiveRenderResult","parseUseResult","ruleLoop","m","currentMatch","bmlDocumentString","renderSettings","preludeEndIndex","evalBlock","evalString","newMode","$eb50eb5a55ccbe2f$export$c14d55ff8a781168","$4c4c14e18ca472bf$export$87752b97ff857521","bmlVersion","specifiedInSettings","$1ab5a1867bb1e647$require$BML_VERSION","$3c8002124f0b28a7$export$e44a900159787abc","markedSettings","$3c8002124f0b28a7$export$bd27f0c8b4b4eabc","atDocStart","lastLineWasBlank","isBlank","rewrittenLine","atLineStart","lastCharWasSpace","char","charIsSpace","$3c8002124f0b28a7$export$4d20fe649bca738b"],"version":3,"file":"bml.bundle.js.map"}