{"mappings":"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","sources":["<anon>","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/seedrandom/lib/alea.js","node_modules/seedrandom/lib/xor128.js","node_modules/seedrandom/lib/xorwow.js","node_modules/seedrandom/lib/xorshift7.js","node_modules/seedrandom/lib/xor4096.js","node_modules/seedrandom/lib/tychei.js","src/browserIndex.js","src/renderer.ts","node_modules/path-browserify/index.js","node_modules/process/browser.js","src/rand.ts","src/weightedChoice.ts","src/errors.ts","src/stringUtils.ts","node_modules/seedrandom/index.js","node_modules/seedrandom/seedrandom.js","src/postprocessing.ts","node_modules/indefinite/dist/indefinite.js","src/settings.ts","src/parsers.ts","src/evalBlock.ts","src/evalApi.ts","src/userDefs.ts","src/tokenType.ts","src/choiceFork.ts","src/reference.ts","src/lexer.ts","src/token.ts","src/analysis.ts"],"sourcesContent":["(() => {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequirec4c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequirec4c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"foUwZ\", function(module, exports) {\n\"use strict\";\n\n});\n\nparcelRegister(\"gj6Et\", function(module, exports) {\n// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n(function(global, module1, define1) {\n    function Alea(seed) {\n        var me = this, mash = Mash();\n        me.next = function() {\n            var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n            me.s0 = me.s1;\n            me.s1 = me.s2;\n            return me.s2 = t - (me.c = t | 0);\n        };\n        // Apply the seeding algorithm from Baagoe.\n        me.c = 1;\n        me.s0 = mash(' ');\n        me.s1 = mash(' ');\n        me.s2 = mash(' ');\n        me.s0 -= mash(seed);\n        if (me.s0 < 0) me.s0 += 1;\n        me.s1 -= mash(seed);\n        if (me.s1 < 0) me.s1 += 1;\n        me.s2 -= mash(seed);\n        if (me.s2 < 0) me.s2 += 1;\n        mash = null;\n    }\n    function copy(f, t) {\n        t.c = f.c;\n        t.s0 = f.s0;\n        t.s1 = f.s1;\n        t.s2 = f.s2;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new Alea(seed), state = opts && opts.state, prng = xg.next;\n        prng.int32 = function() {\n            return xg.next() * 0x100000000 | 0;\n        };\n        prng.double = function() {\n            return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n        };\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == 'object') copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    function Mash() {\n        var n = 0xefc8249d;\n        var mash = function(data) {\n            data = String(data);\n            for(var i = 0; i < data.length; i++){\n                n += data.charCodeAt(i);\n                var h = 0.02519603282416938 * n;\n                n = h >>> 0;\n                h -= n;\n                h *= n;\n                n = h >>> 0;\n                h -= n;\n                n += h * 0x100000000; // 2^32\n            }\n            return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n        };\n        return mash;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.alea = impl;\n})(this, module, typeof define == 'function' && define // present with an AMD loader\n);\n\n});\n\nparcelRegister(\"4gDjz\", function(module, exports) {\n// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = '';\n        me.x = 0;\n        me.y = 0;\n        me.z = 0;\n        me.w = 0;\n        // Set up generator function.\n        me.next = function() {\n            var t = me.x ^ me.x << 11;\n            me.x = me.y;\n            me.y = me.z;\n            me.z = me.w;\n            return me.w ^= me.w >>> 19 ^ t ^ t >>> 8;\n        };\n        if (seed === (seed | 0)) // Integer seed.\n        me.x = seed;\n        else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 64; k++){\n            me.x ^= strseed.charCodeAt(k) | 0;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.x = f.x;\n        t.y = f.y;\n        t.z = f.z;\n        t.w = f.w;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == 'object') copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xor128 = impl;\n})(this, module, typeof define == 'function' && define // present with an AMD loader\n);\n\n});\n\nparcelRegister(\"HLBv4\", function(module, exports) {\n// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = '';\n        // Set up generator function.\n        me.next = function() {\n            var t = me.x ^ me.x >>> 2;\n            me.x = me.y;\n            me.y = me.z;\n            me.z = me.w;\n            me.w = me.v;\n            return (me.d = me.d + 362437 | 0) + (me.v = me.v ^ me.v << 4 ^ (t ^ t << 1)) | 0;\n        };\n        me.x = 0;\n        me.y = 0;\n        me.z = 0;\n        me.w = 0;\n        me.v = 0;\n        if (seed === (seed | 0)) // Integer seed.\n        me.x = seed;\n        else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 64; k++){\n            me.x ^= strseed.charCodeAt(k) | 0;\n            if (k == strseed.length) me.d = me.x << 10 ^ me.x >>> 4;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.x = f.x;\n        t.y = f.y;\n        t.z = f.z;\n        t.w = f.w;\n        t.v = f.v;\n        t.d = f.d;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == 'object') copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xorwow = impl;\n})(this, module, typeof define == 'function' && define // present with an AMD loader\n);\n\n});\n\nparcelRegister(\"ktaoY\", function(module, exports) {\n// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this;\n        // Set up generator function.\n        me.next = function() {\n            // Update xor generator.\n            var X = me.x, i = me.i, t, v, w;\n            t = X[i];\n            t ^= t >>> 7;\n            v = t ^ t << 24;\n            t = X[i + 1 & 7];\n            v ^= t ^ t >>> 10;\n            t = X[i + 3 & 7];\n            v ^= t ^ t >>> 3;\n            t = X[i + 4 & 7];\n            v ^= t ^ t << 7;\n            t = X[i + 7 & 7];\n            t = t ^ t << 13;\n            v ^= t ^ t << 9;\n            X[i] = v;\n            me.i = i + 1 & 7;\n            return v;\n        };\n        function init(me, seed) {\n            var j, w, X = [];\n            if (seed === (seed | 0)) // Seed state array using a 32-bit integer.\n            w = X[0] = seed;\n            else {\n                // Seed state using a string.\n                seed = '' + seed;\n                for(j = 0; j < seed.length; ++j)X[j & 7] = X[j & 7] << 15 ^ seed.charCodeAt(j) + X[j + 1 & 7] << 13;\n            }\n            // Enforce an array length of 8, not all zeroes.\n            while(X.length < 8)X.push(0);\n            for(j = 0; j < 8 && X[j] === 0; ++j);\n            if (j == 8) w = X[7] = -1;\n            else w = X[j];\n            me.x = X;\n            me.i = 0;\n            // Discard an initial 256 values.\n            for(j = 256; j > 0; --j)me.next();\n        }\n        init(me, seed);\n    }\n    function copy(f, t) {\n        t.x = f.x.slice();\n        t.i = f.i;\n        return t;\n    }\n    function impl(seed, opts) {\n        if (seed == null) seed = +new Date;\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (state.x) copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xorshift7 = impl;\n})(this, module, typeof define == 'function' && define // present with an AMD loader\n);\n\n});\n\nparcelRegister(\"gBs5C\", function(module, exports) {\n// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this;\n        // Set up generator function.\n        me.next = function() {\n            var w = me.w, X = me.X, i = me.i, t, v;\n            // Update Weyl generator.\n            me.w = w = w + 0x61c88647 | 0;\n            // Update xor generator.\n            v = X[i + 34 & 127];\n            t = X[i = i + 1 & 127];\n            v ^= v << 13;\n            t ^= t << 17;\n            v ^= v >>> 15;\n            t ^= t >>> 12;\n            // Update Xor generator array state.\n            v = X[i] = v ^ t;\n            me.i = i;\n            // Result is the combination.\n            return v + (w ^ w >>> 16) | 0;\n        };\n        function init(me, seed) {\n            var t, v, i, j, w, X = [], limit = 128;\n            if (seed === (seed | 0)) {\n                // Numeric seeds initialize v, which is used to generates X.\n                v = seed;\n                seed = null;\n            } else {\n                // String seeds are mixed into v and X one character at a time.\n                seed = seed + '\\0';\n                v = 0;\n                limit = Math.max(limit, seed.length);\n            }\n            // Initialize circular array and weyl value.\n            for(i = 0, j = -32; j < limit; ++j){\n                // Put the unicode characters into the array, and shuffle them.\n                if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n                // After 32 shuffles, take v as the starting w value.\n                if (j === 0) w = v;\n                v ^= v << 10;\n                v ^= v >>> 15;\n                v ^= v << 4;\n                v ^= v >>> 13;\n                if (j >= 0) {\n                    w = w + 0x61c88647 | 0; // Weyl.\n                    t = X[j & 127] ^= v + w; // Combine xor and weyl to init array.\n                    i = 0 == t ? i + 1 : 0; // Count zeroes.\n                }\n            }\n            // We have detected all zeroes; make the key nonzero.\n            if (i >= 128) X[(seed && seed.length || 0) & 127] = -1;\n            // Run the generator 512 times to further mix the state before using it.\n            // Factoring this as a function slows the main generator, so it is just\n            // unrolled here.  The weyl generator is not advanced while warming up.\n            i = 127;\n            for(j = 512; j > 0; --j){\n                v = X[i + 34 & 127];\n                t = X[i = i + 1 & 127];\n                v ^= v << 13;\n                t ^= t << 17;\n                v ^= v >>> 15;\n                t ^= t >>> 12;\n                X[i] = v ^ t;\n            }\n            // Storing state as object members is faster than using closure variables.\n            me.w = w;\n            me.X = X;\n            me.i = i;\n        }\n        init(me, seed);\n    }\n    function copy(f, t) {\n        t.i = f.i;\n        t.w = f.w;\n        t.X = f.X.slice();\n        return t;\n    }\n    function impl(seed, opts) {\n        if (seed == null) seed = +new Date;\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (state.X) copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.xor4096 = impl;\n})(this, module, typeof define == 'function' && define // present with an AMD loader\n);\n\n});\n\nparcelRegister(\"ktLSh\", function(module, exports) {\n// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n(function(global, module1, define1) {\n    function XorGen(seed) {\n        var me = this, strseed = '';\n        // Set up generator function.\n        me.next = function() {\n            var b = me.b, c = me.c, d = me.d, a = me.a;\n            b = b << 25 ^ b >>> 7 ^ c;\n            c = c - d | 0;\n            d = d << 24 ^ d >>> 8 ^ a;\n            a = a - b | 0;\n            me.b = b = b << 20 ^ b >>> 12 ^ c;\n            me.c = c = c - d | 0;\n            me.d = d << 16 ^ c >>> 16 ^ a;\n            return me.a = a - b | 0;\n        };\n        /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */ me.a = 0;\n        me.b = 0;\n        me.c = -1640531527;\n        me.d = 1367130551;\n        if (seed === Math.floor(seed)) {\n            // Integer seed.\n            me.a = seed / 0x100000000 | 0;\n            me.b = seed | 0;\n        } else // String seed.\n        strseed += seed;\n        // Mix in string seed, then discard an initial batch of 64 values.\n        for(var k = 0; k < strseed.length + 20; k++){\n            me.b ^= strseed.charCodeAt(k) | 0;\n            me.next();\n        }\n    }\n    function copy(f, t) {\n        t.a = f.a;\n        t.b = f.b;\n        t.c = f.c;\n        t.d = f.d;\n        return t;\n    }\n    function impl(seed, opts) {\n        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {\n            return (xg.next() >>> 0) / 0x100000000;\n        };\n        prng.double = function() {\n            do var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 0x100000000, result = (top + bot) / 2097152;\n            while (result === 0);\n            return result;\n        };\n        prng.int32 = xg.next;\n        prng.quick = prng;\n        if (state) {\n            if (typeof state == 'object') copy(state, xg);\n            prng.state = function() {\n                return copy(xg, {});\n            };\n        }\n        return prng;\n    }\n    if (module1 && module1.exports) module1.exports = impl;\n    else if (define1 && define1.amd) define1(function() {\n        return impl;\n    });\n    else this.tychei = impl;\n})(this, module, typeof define == 'function' && define // present with an AMD loader\n);\n\n});\n\n/* @license BML - BSD 3 Clause License - Source at github.com/ajyoon/bml - Docs at bml-lang.org */ var $a7629ff39e921c85$exports = {};\n// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar $d3c1734dacb01657$exports = {};\n// shim for using process in browser\nvar $d3c1734dacb01657$var$process = $d3c1734dacb01657$exports = {};\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar $d3c1734dacb01657$var$cachedSetTimeout;\nvar $d3c1734dacb01657$var$cachedClearTimeout;\nfunction $d3c1734dacb01657$var$defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction $d3c1734dacb01657$var$defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function() {\n    try {\n        if (typeof setTimeout === 'function') $d3c1734dacb01657$var$cachedSetTimeout = setTimeout;\n        else $d3c1734dacb01657$var$cachedSetTimeout = $d3c1734dacb01657$var$defaultSetTimout;\n    } catch (e) {\n        $d3c1734dacb01657$var$cachedSetTimeout = $d3c1734dacb01657$var$defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') $d3c1734dacb01657$var$cachedClearTimeout = clearTimeout;\n        else $d3c1734dacb01657$var$cachedClearTimeout = $d3c1734dacb01657$var$defaultClearTimeout;\n    } catch (e) {\n        $d3c1734dacb01657$var$cachedClearTimeout = $d3c1734dacb01657$var$defaultClearTimeout;\n    }\n})();\nfunction $d3c1734dacb01657$var$runTimeout(fun) {\n    if ($d3c1734dacb01657$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n    // if setTimeout wasn't available but was latter defined\n    if (($d3c1734dacb01657$var$cachedSetTimeout === $d3c1734dacb01657$var$defaultSetTimout || !$d3c1734dacb01657$var$cachedSetTimeout) && setTimeout) {\n        $d3c1734dacb01657$var$cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $d3c1734dacb01657$var$cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return $d3c1734dacb01657$var$cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return $d3c1734dacb01657$var$cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction $d3c1734dacb01657$var$runClearTimeout(marker) {\n    if ($d3c1734dacb01657$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations\n    return clearTimeout(marker);\n    // if clearTimeout wasn't available but was latter defined\n    if (($d3c1734dacb01657$var$cachedClearTimeout === $d3c1734dacb01657$var$defaultClearTimeout || !$d3c1734dacb01657$var$cachedClearTimeout) && clearTimeout) {\n        $d3c1734dacb01657$var$cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return $d3c1734dacb01657$var$cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return $d3c1734dacb01657$var$cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return $d3c1734dacb01657$var$cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar $d3c1734dacb01657$var$queue = [];\nvar $d3c1734dacb01657$var$draining = false;\nvar $d3c1734dacb01657$var$currentQueue;\nvar $d3c1734dacb01657$var$queueIndex = -1;\nfunction $d3c1734dacb01657$var$cleanUpNextTick() {\n    if (!$d3c1734dacb01657$var$draining || !$d3c1734dacb01657$var$currentQueue) return;\n    $d3c1734dacb01657$var$draining = false;\n    if ($d3c1734dacb01657$var$currentQueue.length) $d3c1734dacb01657$var$queue = $d3c1734dacb01657$var$currentQueue.concat($d3c1734dacb01657$var$queue);\n    else $d3c1734dacb01657$var$queueIndex = -1;\n    if ($d3c1734dacb01657$var$queue.length) $d3c1734dacb01657$var$drainQueue();\n}\nfunction $d3c1734dacb01657$var$drainQueue() {\n    if ($d3c1734dacb01657$var$draining) return;\n    var timeout = $d3c1734dacb01657$var$runTimeout($d3c1734dacb01657$var$cleanUpNextTick);\n    $d3c1734dacb01657$var$draining = true;\n    var len = $d3c1734dacb01657$var$queue.length;\n    while(len){\n        $d3c1734dacb01657$var$currentQueue = $d3c1734dacb01657$var$queue;\n        $d3c1734dacb01657$var$queue = [];\n        while(++$d3c1734dacb01657$var$queueIndex < len)if ($d3c1734dacb01657$var$currentQueue) $d3c1734dacb01657$var$currentQueue[$d3c1734dacb01657$var$queueIndex].run();\n        $d3c1734dacb01657$var$queueIndex = -1;\n        len = $d3c1734dacb01657$var$queue.length;\n    }\n    $d3c1734dacb01657$var$currentQueue = null;\n    $d3c1734dacb01657$var$draining = false;\n    $d3c1734dacb01657$var$runClearTimeout(timeout);\n}\n$d3c1734dacb01657$var$process.nextTick = function(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    $d3c1734dacb01657$var$queue.push(new $d3c1734dacb01657$var$Item(fun, args));\n    if ($d3c1734dacb01657$var$queue.length === 1 && !$d3c1734dacb01657$var$draining) $d3c1734dacb01657$var$runTimeout($d3c1734dacb01657$var$drainQueue);\n};\n// v8 likes predictible objects\nfunction $d3c1734dacb01657$var$Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\n$d3c1734dacb01657$var$Item.prototype.run = function() {\n    this.fun.apply(null, this.array);\n};\n$d3c1734dacb01657$var$process.title = 'browser';\n$d3c1734dacb01657$var$process.browser = true;\n$d3c1734dacb01657$var$process.env = {};\n$d3c1734dacb01657$var$process.argv = [];\n$d3c1734dacb01657$var$process.version = ''; // empty string to avoid regexp issues\n$d3c1734dacb01657$var$process.versions = {};\nfunction $d3c1734dacb01657$var$noop() {}\n$d3c1734dacb01657$var$process.on = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.addListener = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.once = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.off = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.removeListener = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.removeAllListeners = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.emit = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.prependListener = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.prependOnceListener = $d3c1734dacb01657$var$noop;\n$d3c1734dacb01657$var$process.listeners = function(name) {\n    return [];\n};\n$d3c1734dacb01657$var$process.binding = function(name) {\n    throw new Error('process.binding is not supported');\n};\n$d3c1734dacb01657$var$process.cwd = function() {\n    return '/';\n};\n$d3c1734dacb01657$var$process.chdir = function(dir) {\n    throw new Error('process.chdir is not supported');\n};\n$d3c1734dacb01657$var$process.umask = function() {\n    return 0;\n};\n\n\n'use strict';\nfunction $a7629ff39e921c85$var$assertPath(path) {\n    if (typeof path !== 'string') throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n}\n// Resolves . and .. elements in a path with directory names\nfunction $a7629ff39e921c85$var$normalizeStringPosix(path, allowAboveRoot) {\n    var res = '';\n    var lastSegmentLength = 0;\n    var lastSlash = -1;\n    var dots = 0;\n    var code;\n    for(var i = 0; i <= path.length; ++i){\n        if (i < path.length) code = path.charCodeAt(i);\n        else if (code === 47 /*/*/ ) break;\n        else code = 47 /*/*/ ;\n        if (code === 47 /*/*/ ) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (lastSlash !== i - 1 && dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/  || res.charCodeAt(res.length - 2) !== 46 /*.*/ ) {\n                    if (res.length > 2) {\n                        var lastSlashIndex = res.lastIndexOf('/');\n                        if (lastSlashIndex !== res.length - 1) {\n                            if (lastSlashIndex === -1) {\n                                res = '';\n                                lastSegmentLength = 0;\n                            } else {\n                                res = res.slice(0, lastSlashIndex);\n                                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n                            }\n                            lastSlash = i;\n                            dots = 0;\n                            continue;\n                        }\n                    } else if (res.length === 2 || res.length === 1) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    if (res.length > 0) res += '/..';\n                    else res = '..';\n                    lastSegmentLength = 2;\n                }\n            } else {\n                if (res.length > 0) res += '/' + path.slice(lastSlash + 1, i);\n                else res = path.slice(lastSlash + 1, i);\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        } else if (code === 46 /*.*/  && dots !== -1) ++dots;\n        else dots = -1;\n    }\n    return res;\n}\nfunction $a7629ff39e921c85$var$_format(sep, pathObject) {\n    var dir = pathObject.dir || pathObject.root;\n    var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n    if (!dir) return base;\n    if (dir === pathObject.root) return dir + base;\n    return dir + sep + base;\n}\nvar $a7629ff39e921c85$var$posix = {\n    // path.resolve([from ...], to)\n    resolve: function resolve() {\n        var resolvedPath = '';\n        var resolvedAbsolute = false;\n        var cwd;\n        for(var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--){\n            var path;\n            if (i >= 0) path = arguments[i];\n            else {\n                if (cwd === undefined) cwd = $d3c1734dacb01657$exports.cwd();\n                path = cwd;\n            }\n            $a7629ff39e921c85$var$assertPath(path);\n            // Skip empty entries\n            if (path.length === 0) continue;\n            resolvedPath = path + '/' + resolvedPath;\n            resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/ ;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = $a7629ff39e921c85$var$normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n        if (resolvedAbsolute) {\n            if (resolvedPath.length > 0) return '/' + resolvedPath;\n            else return '/';\n        } else if (resolvedPath.length > 0) return resolvedPath;\n        else return '.';\n    },\n    normalize: function normalize(path) {\n        $a7629ff39e921c85$var$assertPath(path);\n        if (path.length === 0) return '.';\n        var isAbsolute = path.charCodeAt(0) === 47 /*/*/ ;\n        var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/ ;\n        // Normalize the path\n        path = $a7629ff39e921c85$var$normalizeStringPosix(path, !isAbsolute);\n        if (path.length === 0 && !isAbsolute) path = '.';\n        if (path.length > 0 && trailingSeparator) path += '/';\n        if (isAbsolute) return '/' + path;\n        return path;\n    },\n    isAbsolute: function isAbsolute(path) {\n        $a7629ff39e921c85$var$assertPath(path);\n        return path.length > 0 && path.charCodeAt(0) === 47 /*/*/ ;\n    },\n    join: function join() {\n        if (arguments.length === 0) return '.';\n        var joined;\n        for(var i = 0; i < arguments.length; ++i){\n            var arg = arguments[i];\n            $a7629ff39e921c85$var$assertPath(arg);\n            if (arg.length > 0) {\n                if (joined === undefined) joined = arg;\n                else joined += '/' + arg;\n            }\n        }\n        if (joined === undefined) return '.';\n        return $a7629ff39e921c85$var$posix.normalize(joined);\n    },\n    relative: function relative(from, to) {\n        $a7629ff39e921c85$var$assertPath(from);\n        $a7629ff39e921c85$var$assertPath(to);\n        if (from === to) return '';\n        from = $a7629ff39e921c85$var$posix.resolve(from);\n        to = $a7629ff39e921c85$var$posix.resolve(to);\n        if (from === to) return '';\n        // Trim any leading backslashes\n        var fromStart = 1;\n        for(; fromStart < from.length; ++fromStart){\n            if (from.charCodeAt(fromStart) !== 47 /*/*/ ) break;\n        }\n        var fromEnd = from.length;\n        var fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        var toStart = 1;\n        for(; toStart < to.length; ++toStart){\n            if (to.charCodeAt(toStart) !== 47 /*/*/ ) break;\n        }\n        var toEnd = to.length;\n        var toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        var length = fromLen < toLen ? fromLen : toLen;\n        var lastCommonSep = -1;\n        var i = 0;\n        for(; i <= length; ++i){\n            if (i === length) {\n                if (toLen > length) {\n                    if (to.charCodeAt(toStart + i) === 47 /*/*/ ) // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                    else if (i === 0) // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                } else if (fromLen > length) {\n                    if (from.charCodeAt(fromStart + i) === 47 /*/*/ ) // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                    else if (i === 0) // We get here if `to` is the root.\n                    // For example: from='/foo'; to='/'\n                    lastCommonSep = 0;\n                }\n                break;\n            }\n            var fromCode = from.charCodeAt(fromStart + i);\n            var toCode = to.charCodeAt(toStart + i);\n            if (fromCode !== toCode) break;\n            else if (fromCode === 47 /*/*/ ) lastCommonSep = i;\n        }\n        var out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`\n        for(i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i)if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/ ) {\n            if (out.length === 0) out += '..';\n            else out += '/..';\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) return out + to.slice(toStart + lastCommonSep);\n        else {\n            toStart += lastCommonSep;\n            if (to.charCodeAt(toStart) === 47 /*/*/ ) ++toStart;\n            return to.slice(toStart);\n        }\n    },\n    _makeLong: function _makeLong(path) {\n        return path;\n    },\n    dirname: function dirname(path) {\n        $a7629ff39e921c85$var$assertPath(path);\n        if (path.length === 0) return '.';\n        var code = path.charCodeAt(0);\n        var hasRoot = code === 47 /*/*/ ;\n        var end = -1;\n        var matchedSlash = true;\n        for(var i = path.length - 1; i >= 1; --i){\n            code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            } else // We saw the first non-path separator\n            matchedSlash = false;\n        }\n        if (end === -1) return hasRoot ? '/' : '.';\n        if (hasRoot && end === 1) return '//';\n        return path.slice(0, end);\n    },\n    basename: function basename(path, ext) {\n        if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n        $a7629ff39e921c85$var$assertPath(path);\n        var start = 0;\n        var end = -1;\n        var matchedSlash = true;\n        var i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext.length === path.length && ext === path) return '';\n            var extIdx = ext.length - 1;\n            var firstNonSlashEnd = -1;\n            for(i = path.length - 1; i >= 0; --i){\n                var code = path.charCodeAt(i);\n                if (code === 47 /*/*/ ) // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                } else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) // We matched the extension, so mark this as the end of our path\n                            // component\n                            end = i;\n                        } else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) end = firstNonSlashEnd;\n            else if (end === -1) end = path.length;\n            return path.slice(start, end);\n        } else {\n            for(i = path.length - 1; i >= 0; --i){\n                if (path.charCodeAt(i) === 47 /*/*/ ) // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                } else if (end === -1) {\n                    // We saw the first non-path separator, mark this as the end of our\n                    // path component\n                    matchedSlash = false;\n                    end = i + 1;\n                }\n            }\n            if (end === -1) return '';\n            return path.slice(start, end);\n        }\n    },\n    extname: function extname(path) {\n        $a7629ff39e921c85$var$assertPath(path);\n        var startDot = -1;\n        var startPart = 0;\n        var end = -1;\n        var matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        var preDotState = 0;\n        for(var i = path.length - 1; i >= 0; --i){\n            var code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46 /*.*/ ) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            } else if (startDot !== -1) // We saw a non-dot and non-path separator before our dot, so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n        if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n        preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) return '';\n        return path.slice(startDot, end);\n    },\n    format: function format(pathObject) {\n        if (pathObject === null || typeof pathObject !== 'object') throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n        return $a7629ff39e921c85$var$_format('/', pathObject);\n    },\n    parse: function parse(path) {\n        $a7629ff39e921c85$var$assertPath(path);\n        var ret = {\n            root: '',\n            dir: '',\n            base: '',\n            ext: '',\n            name: ''\n        };\n        if (path.length === 0) return ret;\n        var code = path.charCodeAt(0);\n        var isAbsolute = code === 47 /*/*/ ;\n        var start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        } else start = 0;\n        var startDot = -1;\n        var startPart = 0;\n        var end = -1;\n        var matchedSlash = true;\n        var i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        var preDotState = 0;\n        // Get non-dir info\n        for(; i >= start; --i){\n            code = path.charCodeAt(i);\n            if (code === 47 /*/*/ ) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === 46 /*.*/ ) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) startDot = i;\n                else if (preDotState !== 1) preDotState = 1;\n            } else if (startDot !== -1) // We saw a non-dot and non-path separator before our dot, so we should\n            // have a good chance at having a non-empty extension\n            preDotState = -1;\n        }\n        if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n        preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n            if (end !== -1) {\n                if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);\n                else ret.base = ret.name = path.slice(startPart, end);\n            }\n        } else {\n            if (startPart === 0 && isAbsolute) {\n                ret.name = path.slice(1, startDot);\n                ret.base = path.slice(1, end);\n            } else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n            }\n            ret.ext = path.slice(startDot, end);\n        }\n        if (startPart > 0) ret.dir = path.slice(0, startPart - 1);\n        else if (isAbsolute) ret.dir = '/';\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\n$a7629ff39e921c85$var$posix.posix = $a7629ff39e921c85$var$posix;\n$a7629ff39e921c85$exports = $a7629ff39e921c85$var$posix;\n\n\n\n\nvar $foUwZ = parcelRequire(\"foUwZ\");\nclass $78d9e39c826e6bbd$export$b363a0fb27031153 {\n    constructor(choice, weight){\n        this.choice = choice;\n        this.weight = weight;\n    }\n    toString() {\n        return `WeightedChoice{choice: ${String(this.choice)}, weight: ${this.weight}}`;\n    }\n    /* Create a new WeightedChoice object with the same properties as this one. */ clone() {\n        return new $78d9e39c826e6bbd$export$b363a0fb27031153(this.choice, this.weight);\n    }\n}\nfunction $78d9e39c826e6bbd$export$e3ec5db62775bb4(weights) {\n    // Note that if weights have been normalized, as they are in `ChoiceFork`s,\n    // `wc.weight` will always be non-null here so the default should never occur.\n    return weights.reduce((acc, val)=>acc + (val.weight ?? 0), 0);\n}\n\n\nfunction $2173e3b55588bdf3$export$7762a5f1fbaa187f(str, index) {\n    if (index > str.length) throw new Error('charIndex > string.length');\n    let line = 1;\n    let column = -1;\n    let newLine = false;\n    for(let i = 0; i <= index; i++){\n        if (newLine) {\n            line++;\n            column = 0;\n            newLine = false;\n        } else column++;\n        if (str[i] === '\\n') newLine = true;\n    }\n    return {\n        line: line,\n        column: column\n    };\n}\nfunction $2173e3b55588bdf3$export$faf796819bf7156f(str, index) {\n    let lineAndColumn = $2173e3b55588bdf3$export$7762a5f1fbaa187f(str, index);\n    return 'line: ' + lineAndColumn.line + ', column: ' + lineAndColumn.column;\n}\nfunction $2173e3b55588bdf3$export$a1ed01a3e6d5a08c(str) {\n    return str.trim() === '';\n}\nfunction $2173e3b55588bdf3$export$63cc9d6c11a5a382(obj) {\n    return obj instanceof String || typeof obj === \"string\";\n}\n\n\nclass $be52afd1406121c4$export$25b19446f82d7080 extends Error {\n    constructor(message){\n        super(message + ' This is a bug. Please report at https://github.com/ajyoon/bml/issues');\n        this.name = 'IllegalStateError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$25b19446f82d7080.prototype);\n    }\n}\nclass $be52afd1406121c4$export$212344d213252f95 extends Error {\n    constructor(bmlDoc, errorIndex){\n        let message = 'Syntax error found while parsing bml javascript at ' + $2173e3b55588bdf3$export$faf796819bf7156f(bmlDoc, errorIndex);\n        super(message);\n        this.name = 'JavascriptSyntaxError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$212344d213252f95.prototype);\n    }\n}\nclass $be52afd1406121c4$export$9bd8738e2696d815 extends Error {\n    constructor(message, bmlDoc, errorIndex, hint){\n        let resolvedMsg = (message || 'Syntax error found while parsing bml') + ' at ' + $2173e3b55588bdf3$export$faf796819bf7156f(bmlDoc, errorIndex);\n        if (hint) resolvedMsg += '\\n' + hint;\n        super(resolvedMsg);\n        this.name = 'BMLSyntaxError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$9bd8738e2696d815.prototype);\n    }\n}\nclass $be52afd1406121c4$export$5f41361166083558 extends Error {\n    constructor(refIdentifier, choiceIndex, bmlDoc, errorIndex){\n        let msg = `Duplicated reference index ${choiceIndex} for reference ${refIdentifier} ` + `at ${$2173e3b55588bdf3$export$faf796819bf7156f(bmlDoc, errorIndex)}`;\n        super(msg);\n        this.name = 'BMLDuplicatedRefIndexError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$5f41361166083558.prototype);\n    }\n}\nclass $be52afd1406121c4$export$5d36dfb58549021f extends Error {\n    constructor(refIdentifier, bmlDoc, errorIndex){\n        let msg = `Duplicated reference ${refIdentifier} ` + `at ${$2173e3b55588bdf3$export$faf796819bf7156f(bmlDoc, errorIndex)}`;\n        super(msg);\n        this.name = 'BMLDuplicatedRefError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$5d36dfb58549021f.prototype);\n    }\n}\nclass $be52afd1406121c4$export$b00eb0c7b5e7384f extends Error {\n    constructor(field, value){\n        super(`Eval binding of settings field '${field}' of '${value}' is invalid`);\n        this.name = 'EvalBoundSettingsError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$b00eb0c7b5e7384f.prototype);\n    }\n}\nclass $be52afd1406121c4$export$2b8f184bbdc74d8a extends Error {\n    constructor(key){\n        super(`Eval binding ${key} was bound multiple times.`);\n        this.name = 'EvalBindingError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$2b8f184bbdc74d8a.prototype);\n    }\n}\nclass $be52afd1406121c4$export$e84e68f1a3f7e062 extends Error {\n    constructor(){\n        super(`This document includes eval blocks and cannot be rendered with allowEval=false.`);\n        this.name = 'EvalDisabledError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$e84e68f1a3f7e062.prototype);\n    }\n}\nclass $be52afd1406121c4$export$2a10791adb5497e6 extends Error {\n    constructor(includePath, message){\n        super(`Include failed for '${includePath}': ${message}`);\n        this.name = 'IncludeError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$2a10791adb5497e6.prototype);\n    }\n}\nclass $be52afd1406121c4$export$beede8335535d955 extends Error {\n    constructor(){\n        super('Fork has invalid weights');\n        this.name = 'InvalidForkWeightsError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$beede8335535d955.prototype);\n    }\n}\nclass $be52afd1406121c4$export$fbbbb9948ee25133 extends Error {\n    constructor(){\n        super('Cannot perform weighted choice where the given weights have a sum of zero');\n        this.name = 'NoPossibleWeightsError';\n        Object.setPrototypeOf(this, $be52afd1406121c4$export$fbbbb9948ee25133.prototype);\n    }\n}\n\n\nvar $f2dae5dda642a89f$exports = {};\n// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\n\nvar $gj6Et = parcelRequire(\"gj6Et\");\n\nvar $4gDjz = parcelRequire(\"4gDjz\");\n\nvar $HLBv4 = parcelRequire(\"HLBv4\");\n\nvar $ktaoY = parcelRequire(\"ktaoY\");\n\nvar $gBs5C = parcelRequire(\"gBs5C\");\n\nvar $ktLSh = parcelRequire(\"ktLSh\");\nvar $fa5d8df011db7ec0$exports = {};\n\n/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/ (function(global, pool, math) {\n    //\n    // The following constants are related to IEEE 754 limits.\n    //\n    var width = 256, chunks = 6, digits = 52, rngname = 'random', startdenom = math.pow(width, chunks), significance = math.pow(2, digits), overflow = significance * 2, mask = width - 1, nodecrypto; // node.js crypto module, initialized at the bottom.\n    //\n    // seedrandom()\n    // This is the seedrandom function described above.\n    //\n    function seedrandom(seed, options, callback) {\n        var key = [];\n        options = options == true ? {\n            entropy: true\n        } : options || {};\n        // Flatten the seed string or build one from local entropy if needed.\n        var shortseed = mixkey(flatten(options.entropy ? [\n            seed,\n            tostring(pool)\n        ] : seed == null ? autoseed() : seed, 3), key);\n        // Use the seed to initialize an ARC4 generator.\n        var arc4 = new ARC4(key);\n        // This function returns a random double in [0, 1) that contains\n        // randomness in every bit of the mantissa of the IEEE 754 value.\n        var prng = function() {\n            var n = arc4.g(chunks), d = startdenom, x = 0; //   and no 'extra last byte'.\n            while(n < significance){\n                n = (n + x) * width; //   shifting numerator and\n                d *= width; //   denominator and generating a\n                x = arc4.g(1); //   new least-significant-byte.\n            }\n            while(n >= overflow){\n                n /= 2; //   last byte, shift everything\n                d /= 2; //   right using integer math until\n                x >>>= 1; //   we have exactly the desired bits.\n            }\n            return (n + x) / d; // Form the number within [0, 1).\n        };\n        prng.int32 = function() {\n            return arc4.g(4) | 0;\n        };\n        prng.quick = function() {\n            return arc4.g(4) / 0x100000000;\n        };\n        prng.double = prng;\n        // Mix the randomness into accumulated entropy.\n        mixkey(tostring(arc4.S), pool);\n        // Calling convention: what to return as a function of prng, seed, is_math.\n        return (options.pass || callback || function(prng, seed, is_math_call, state) {\n            if (state) {\n                // Load the arc4 state from the given state if it has an S array.\n                if (state.S) copy(state, arc4);\n                // Only provide the .state method if requested via options.state.\n                prng.state = function() {\n                    return copy(arc4, {});\n                };\n            }\n            // If called as a method of Math (Math.seedrandom()), mutate\n            // Math.random because that is how seedrandom.js has worked since v1.0.\n            if (is_math_call) {\n                math[rngname] = prng;\n                return seed;\n            } else return prng;\n        })(prng, shortseed, 'global' in options ? options.global : this == math, options.state);\n    }\n    //\n    // ARC4\n    //\n    // An ARC4 implementation.  The constructor takes a key in the form of\n    // an array of at most (width) integers that should be 0 <= x < (width).\n    //\n    // The g(count) method returns a pseudorandom integer that concatenates\n    // the next (count) outputs from ARC4.  Its return value is a number x\n    // that is in the range 0 <= x < (width ^ count).\n    //\n    function ARC4(key) {\n        var t, keylen = key.length, me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n        // The empty key [] is treated as [0].\n        if (!keylen) key = [\n            keylen++\n        ];\n        // Set up S using the standard key scheduling algorithm.\n        while(i < width)s[i] = i++;\n        for(i = 0; i < width; i++){\n            s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n            s[j] = t;\n        }\n        // The \"g\" method returns the next (count) outputs as one number.\n        (me.g = function(count) {\n            // Using instance members instead of closure state nearly doubles speed.\n            var t, r = 0, i = me.i, j = me.j, s = me.S;\n            while(count--){\n                t = s[i = mask & i + 1];\n                r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n            }\n            me.i = i;\n            me.j = j;\n            return r;\n        // For robust unpredictability, the function call below automatically\n        // discards an initial batch of values.  This is called RC4-drop[256].\n        // See http://google.com/search?q=rsa+fluhrer+response&btnI\n        })(width);\n    }\n    //\n    // copy()\n    // Copies internal state of ARC4 to or from a plain object.\n    //\n    function copy(f, t) {\n        t.i = f.i;\n        t.j = f.j;\n        t.S = f.S.slice();\n        return t;\n    }\n    //\n    // flatten()\n    // Converts an object tree to nested arrays of strings.\n    //\n    function flatten(obj, depth) {\n        var result = [], typ = typeof obj, prop;\n        if (depth && typ == 'object') {\n            for(prop in obj)try {\n                result.push(flatten(obj[prop], depth - 1));\n            } catch (e) {}\n        }\n        return result.length ? result : typ == 'string' ? obj : obj + '\\0';\n    }\n    //\n    // mixkey()\n    // Mixes a string seed into a key that is an array of integers, and\n    // returns a shortened string seed that is equivalent to the result key.\n    //\n    function mixkey(seed, key) {\n        var stringseed = seed + '', smear, j = 0;\n        while(j < stringseed.length)key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n        return tostring(key);\n    }\n    //\n    // autoseed()\n    // Returns an object for autoseeding, using window.crypto and Node crypto\n    // module if available.\n    //\n    function autoseed() {\n        try {\n            var out;\n            if (nodecrypto && (out = nodecrypto.randomBytes)) // The use of 'out' to remember randomBytes makes tight minified code.\n            out = out(width);\n            else {\n                out = new Uint8Array(width);\n                (global.crypto || global.msCrypto).getRandomValues(out);\n            }\n            return tostring(out);\n        } catch (e) {\n            var browser = global.navigator, plugins = browser && browser.plugins;\n            return [\n                +new Date,\n                global,\n                plugins,\n                global.screen,\n                tostring(pool)\n            ];\n        }\n    }\n    //\n    // tostring()\n    // Converts an array of charcodes to a string\n    //\n    function tostring(a) {\n        return String.fromCharCode.apply(0, a);\n    }\n    //\n    // When seedrandom.js is loaded, we immediately mix a few bits\n    // from the built-in RNG into the entropy pool.  Because we do\n    // not want to interfere with deterministic PRNG state later,\n    // seedrandom will not call math.random on its own again after\n    // initialization.\n    //\n    mixkey(math.random(), pool);\n    //\n    // Nodejs and AMD support: export the implementation as a module using\n    // either convention.\n    //\n    if ($fa5d8df011db7ec0$exports) {\n        $fa5d8df011db7ec0$exports = seedrandom;\n        // When in node.js, try using crypto package for autoseeding.\n        try {\n            nodecrypto = (parcelRequire(\"foUwZ\"));\n        } catch (ex) {}\n    } else if (typeof define == 'function' && define.amd) define(function() {\n        return seedrandom;\n    });\n    else // When included as a plain script, set up Math.seedrandom global.\n    math['seed' + rngname] = seedrandom;\n// End anonymous scope, and pass initial values.\n})(// global: `self` in browsers (including strict mode and web workers),\n// otherwise `this` in Node and other environments\ntypeof self !== 'undefined' ? self : $fa5d8df011db7ec0$exports, [], Math // math: package containing random, pow, and seedrandom\n);\n\n\n$fa5d8df011db7ec0$exports.alea = $gj6Et;\n$fa5d8df011db7ec0$exports.xor128 = $4gDjz;\n$fa5d8df011db7ec0$exports.xorwow = $HLBv4;\n$fa5d8df011db7ec0$exports.xorshift7 = $ktaoY;\n$fa5d8df011db7ec0$exports.xor4096 = $gBs5C;\n$fa5d8df011db7ec0$exports.tychei = $ktLSh;\n$f2dae5dda642a89f$exports = $fa5d8df011db7ec0$exports;\n\n\n// A module-local seedable random number generator\n// The selected seed will be random unless `setRandomSeed()` is called.\n// @ts-ignore\nlet $23dd371fa0105bbf$var$rng = (0, (/*@__PURE__*/$parcel$interopDefault($f2dae5dda642a89f$exports))).xor4096(null, {\n    state: true\n});\nfunction $23dd371fa0105bbf$export$387e42d58b404997() {\n    // @ts-ignore\n    return $23dd371fa0105bbf$var$rng.state();\n}\nfunction $23dd371fa0105bbf$export$8f8ba6256b8c9477(state) {\n    // @ts-ignore\n    $23dd371fa0105bbf$var$rng = (0, (/*@__PURE__*/$parcel$interopDefault($f2dae5dda642a89f$exports))).xor4096(null, {\n        state: state\n    });\n}\nfunction $23dd371fa0105bbf$export$74d4fed657706d5a(seed) {\n    // @ts-ignore\n    $23dd371fa0105bbf$var$rng = (0, (/*@__PURE__*/$parcel$interopDefault($f2dae5dda642a89f$exports))).xor4096(seed, {\n        state: true\n    });\n}\nfunction $23dd371fa0105bbf$export$a2691b3c66b90a97(weightedChoices) {\n    let normalized = [];\n    let sum = 0;\n    let nullWeightCount = 0;\n    for(let w = 0; w < weightedChoices.length; w++){\n        let weightedChoice = weightedChoices[w];\n        normalized.push(weightedChoice.clone());\n        if (weightedChoice.weight === null) nullWeightCount++;\n        else sum += weightedChoice.weight;\n    }\n    let nullWeight = (100 - sum) / nullWeightCount;\n    for(let n = 0; n < normalized.length; n++)if (normalized[n].weight === null) normalized[n].weight = nullWeight;\n    return normalized;\n}\nfunction $23dd371fa0105bbf$export$231d937d7748069(min, max) {\n    return $23dd371fa0105bbf$var$rng() * (max - min) + min;\n}\nfunction $23dd371fa0105bbf$export$3c5f89dae98e900b(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor($23dd371fa0105bbf$var$rng() * (max - min)) + min;\n}\nfunction $23dd371fa0105bbf$export$dfb0db305cae9fba(weights) {\n    let sum = (0, $78d9e39c826e6bbd$export$e3ec5db62775bb4)(weights);\n    if (sum === 0) throw new (0, $be52afd1406121c4$export$fbbbb9948ee25133)();\n    let progress = 0;\n    let pickedValue = $23dd371fa0105bbf$export$231d937d7748069(0, sum);\n    for(let i = 0; i < weights.length; i++){\n        let wc = weights[i];\n        progress += wc.weight ?? 0;\n        if (progress >= pickedValue) return {\n            choice: wc.choice,\n            choiceIndex: i\n        };\n    }\n    // If we're still here, something went wrong.\n    // Log a warning but try to return a random value anyways.\n    console.warn(\"Unable to pick weighted choice for weights: \" + weights);\n    let fallbackIndex = $23dd371fa0105bbf$export$3c5f89dae98e900b(0, weights.length);\n    return {\n        choice: weights[fallbackIndex].choice,\n        choiceIndex: fallbackIndex\n    };\n}\n\n\nvar $159889a114a1acb2$exports = {};\n(function webpackUniversalModuleDefinition(root, factory) {\n    $159889a114a1acb2$exports = factory();\n})(window, function() {\n    return /******/ function(modules) {\n        /******/ // The module cache\n        /******/ var installedModules = {};\n        /******/ /******/ // The require function\n        /******/ function __webpack_require__(moduleId) {\n            /******/ /******/ // Check if module is in cache\n            /******/ if (installedModules[moduleId]) /******/ return installedModules[moduleId].exports;\n            /******/ // Create a new module (and put it into the cache)\n            /******/ var module1 = installedModules[moduleId] = {\n                /******/ i: moduleId,\n                /******/ l: false,\n                /******/ exports: {}\n            };\n            /******/ /******/ // Execute the module function\n            /******/ modules[moduleId].call(module1.exports, module1, module1.exports, __webpack_require__);\n            /******/ /******/ // Flag the module as loaded\n            /******/ module1.l = true;\n            /******/ /******/ // Return the exports of the module\n            /******/ return module1.exports;\n        /******/ }\n        /******/ /******/ /******/ // expose the modules object (__webpack_modules__)\n        /******/ __webpack_require__.m = modules;\n        /******/ /******/ // expose the module cache\n        /******/ __webpack_require__.c = installedModules;\n        /******/ /******/ // define getter function for harmony exports\n        /******/ __webpack_require__.d = function(exports, name, getter) {\n            /******/ if (!__webpack_require__.o(exports, name)) /******/ Object.defineProperty(exports, name, {\n                enumerable: true,\n                get: getter\n            });\n        /******/ };\n        /******/ /******/ // define __esModule on exports\n        /******/ __webpack_require__.r = function(exports) {\n            /******/ if (typeof Symbol !== 'undefined' && Symbol.toStringTag) /******/ Object.defineProperty(exports, Symbol.toStringTag, {\n                value: 'Module'\n            });\n            /******/ Object.defineProperty(exports, '__esModule', {\n                value: true\n            });\n        /******/ };\n        /******/ /******/ // create a fake namespace object\n        /******/ // mode & 1: value is a module id, require it\n        /******/ // mode & 2: merge all properties of value into the ns\n        /******/ // mode & 4: return value when already ns object\n        /******/ // mode & 8|1: behave like require\n        /******/ __webpack_require__.t = function(value, mode) {\n            /******/ if (mode & 1) value = __webpack_require__(value);\n            /******/ if (mode & 8) return value;\n            /******/ if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n            /******/ var ns = Object.create(null);\n            /******/ __webpack_require__.r(ns);\n            /******/ Object.defineProperty(ns, 'default', {\n                enumerable: true,\n                value: value\n            });\n            /******/ if (mode & 2 && typeof value != 'string') for(var key in value)__webpack_require__.d(ns, key, (function(key) {\n                return value[key];\n            }).bind(null, key));\n            /******/ return ns;\n        /******/ };\n        /******/ /******/ // getDefaultExport function for compatibility with non-harmony modules\n        /******/ __webpack_require__.n = function(module1) {\n            /******/ var getter = module1 && module1.__esModule ? /******/ function getDefault() {\n                return module1['default'];\n            } : /******/ function getModuleExports() {\n                return module1;\n            };\n            /******/ __webpack_require__.d(getter, 'a', getter);\n            /******/ return getter;\n        /******/ };\n        /******/ /******/ // Object.prototype.hasOwnProperty.call\n        /******/ __webpack_require__.o = function(object, property) {\n            return Object.prototype.hasOwnProperty.call(object, property);\n        };\n        /******/ /******/ // __webpack_public_path__\n        /******/ __webpack_require__.p = \"\";\n        /******/ /******/ /******/ // Load entry module and return exports\n        /******/ return __webpack_require__(__webpack_require__.s = 2);\n    /******/ }([\n        /* 0 */ /***/ function(module1, exports) {\n            var STARTS_WITH_VOWEL = /^[aeiouAEIOU]/;\n            /**\n * Array#indexOf is faster IF the word starts with \"a\" (for example),\n * but negligibly faster when you have to .toLowerCase() the word, and\n * slower if the word happens to start with (e.g.) \"u.\"\n */ exports.startsWithVowel = function(word) {\n                return STARTS_WITH_VOWEL.test(word);\n            };\n            exports.capitalize = function(article, opts) {\n                if (opts.capitalize) article = \"\".concat(article.charAt(0).toUpperCase()).concat(article.slice(1));\n                return article;\n            };\n        /***/ },\n        /* 1 */ /***/ function(module1, exports) {\n            exports.check = function(word, ending) {\n                if (ending) {\n                    // If the word ends in the ending, remove it.\n                    var regex = new RegExp(\"\".concat(ending, \"$\"));\n                    word = word.replace(regex, '');\n                    if (word.length <= 1) return false;\n                }\n                return exports.list.indexOf(word) > -1;\n            };\n            /**\n * Here follows a List of words that take irregular articles because their\n * first letter is either a consonant pronounced like a vowel (hour) or a\n * vowel proncounced like a consonant (ukelele). Note that this is not only\n * nouns because adjectives and adverbs that start with these letters could\n * also follow an article when they identify a later noun, as in \"a useless\n * tool.\"\n *\n * This is not an attempt at a complete list, but rather a collection of\n * words used in at least moderate frequency. A list of ALL irregular words\n * would be too exhaustive to compile without some sort of tool.\n * http://www.thefreedictionary.com/words-that-start-with-eu says there are\n * over 1800 words starting with \"eu\" alone.\n *\n * At least for now, this list omits proper names, as they aren't USUALLY\n * used in such a way as to require an _indefinite_ article. I can't think,\n * for example, of a case where you'd want to say \"a Eustace.\"\n */ exports.list = [\n                'eunuch',\n                'eucalyptus',\n                'eugenics',\n                'eulogy',\n                'euphemism',\n                'euphony',\n                'euphoria',\n                'eureka',\n                'euro',\n                'european',\n                'euphemistic',\n                'euphonic',\n                'euphoric',\n                'euphemistically',\n                'euphonically',\n                'euphorically',\n                'heir',\n                'heiress',\n                'herb',\n                'homage',\n                'honesty',\n                'honor',\n                'honour',\n                'hour',\n                'honest',\n                'honorous',\n                'honestly',\n                'hourly',\n                'one',\n                'ouija',\n                'once',\n                // Nouns: u like y\n                'ubiquity',\n                'udometer',\n                'ufo',\n                'uke',\n                'ukelele',\n                'ululate',\n                'unicorn',\n                'unicycle',\n                'uniform',\n                'unify',\n                'union',\n                'unison',\n                'unit',\n                'unity',\n                'universe',\n                'university',\n                'upas',\n                'ural',\n                'uranium',\n                'urea',\n                'ureter',\n                'urethra',\n                'urine',\n                'urologist',\n                'urology',\n                'urus',\n                'usage',\n                'use',\n                'user',\n                'usual',\n                'usurp',\n                'usurper',\n                'usury',\n                'utensil',\n                'uterus',\n                'utility',\n                'utopia',\n                'utricle',\n                'uvarovite',\n                'uvea',\n                'uvula',\n                'utah',\n                'utahn',\n                'ubiquitous',\n                'ugandan',\n                'ukrainian',\n                'unanimous',\n                'unicameral',\n                'unified',\n                'unique',\n                'unisex',\n                'universal',\n                'urinal',\n                'urological',\n                'useful',\n                'useless',\n                'usurious',\n                'utilitarian',\n                'utopic',\n                'ubiquitously',\n                'unanimously',\n                'unicamerally',\n                'uniquely',\n                'universally',\n                'urologically',\n                'usefully',\n                'uselessly',\n                'usuriously',\n                'yttria',\n                'yggdrasil',\n                'ylem',\n                'yperite',\n                'ytterbia',\n                'ytterbium',\n                'yttrium',\n                'ytterbous',\n                'ytterbic',\n                'yttric',\n                'f',\n                'h',\n                'l',\n                'm',\n                'n',\n                'r',\n                's',\n                'u',\n                'x'\n            ];\n        /***/ },\n        /* 2 */ /***/ function(module1, exports, __webpack_require__) {\n            var _require = __webpack_require__(0), capitalize = _require.capitalize;\n            var irregulars = __webpack_require__(1);\n            var rules = __webpack_require__(3);\n            var indefinite = function indefinite(word) {\n                var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                var article;\n                /**\n   * I'd really prefer to use for of here, but babel converts that\n   * to something using Symbol.iterator, which PhantomJS chokes on.\n   */ rules.some(function(rule) {\n                    if (rule.check(word, opts)) {\n                        article = rule.run(word, opts);\n                        return true;\n                    }\n                });\n                return handleOptions(article, opts, word);\n            };\n            var handleOptions = function handleOptions(article, opts, word) {\n                article = capitalize(article, opts);\n                if (opts.articleOnly) return article;\n                return \"\".concat(article, \" \").concat(word);\n            };\n            indefinite.irregularWords = irregulars.list;\n            module1.exports = indefinite;\n        /***/ },\n        /* 3 */ /***/ function(module1, exports, __webpack_require__) {\n            module1.exports = [\n                __webpack_require__(4),\n                __webpack_require__(5),\n                __webpack_require__(6)\n            ];\n        /***/ },\n        /* 4 */ /***/ function(module1, exports) {\n            var NUMBERS = /^([0-9,]+)/;\n            var EIGHT_ELEVEN_EIGHTEEN = /^(11|8|18)/;\n            var ELEVEN_EIGHTEEN = /^(11|18)/;\n            exports.check = function(word) {\n                return NUMBERS.test(word);\n            };\n            exports.run = function(word, opts) {\n                var number = word.toString().match(NUMBERS)[1].replace(/,/g, '');\n                var article = 'a';\n                if (EIGHT_ELEVEN_EIGHTEEN.test(number)) {\n                    var startsWith11Or18 = ELEVEN_EIGHTEEN.test(number); // If the number starts with 11 or 18 and is of length 4,\n                    // the pronunciation is ambiguous so check opts.numbers to see\n                    // how to render it. Otherwise, if it starts with 11 or 18\n                    // and has 2, 5, 8, 11, etc. digits, use 'an.' Finally, if it\n                    // starts with an 8, use 'an.' For everything else, use 'a.'\n                    if (startsWith11Or18 && number.length === 4) article = opts.numbers === 'colloquial' ? 'an' : 'a';\n                    else if (startsWith11Or18 && (number.length - 2) % 3 === 0) article = 'an';\n                    else article = number.startsWith('8') ? 'an' : 'a';\n                }\n                return article;\n            };\n        /***/ },\n        /* 5 */ /***/ function(module1, exports, __webpack_require__) {\n            var _require = __webpack_require__(0), startsWithVowel = _require.startsWithVowel;\n            var ACRONYM = /^[A-Z]+$/;\n            var IRREGULAR_ACRONYM = /^[UFHLMNRSX]/;\n            var isIrregularAcronym = function isIrregularAcronym(word) {\n                return IRREGULAR_ACRONYM.test(word.charAt(0));\n            };\n            /**\n * Both = a && b\n * Neither = !a && !b\n * In the case of Booleans, this means\n * either both true or both false, so\n * we can just compare the equality of\n * a and b.\n */ var bothOrNeither = function bothOrNeither(a, b) {\n                return a === b;\n            };\n            /**\n * If the entirety of the first word is capital letters\n * and case insensitivity is off, it's an acronym.\n */ exports.check = function(word, _ref) {\n                var caseInsensitive = _ref.caseInsensitive;\n                return caseInsensitive ? false : ACRONYM.test(word.split(' ')[0]);\n            };\n            exports.run = function(word) {\n                var isIrregular = isIrregularAcronym(word);\n                var initialVowel = startsWithVowel(word);\n                /*\n   * If it starts with U: \"a\"\n   * If it starts with any other vowel: \"an\"\n   * If it starts with F, H, L, M, N, R, S, or X: \"an\"\n   * If it starts with any other consonant: \"a\"\n   */ var article = bothOrNeither(initialVowel, isIrregular) ? 'a' : 'an';\n                return article;\n            };\n        /***/ },\n        /* 6 */ /***/ function(module1, exports, __webpack_require__) {\n            var _require = __webpack_require__(0), startsWithVowel = _require.startsWithVowel;\n            var irregulars = __webpack_require__(1);\n            var EXTRAS = /[\\s'-]/;\n            var getFirst = function getFirst(word) {\n                return word.split(EXTRAS)[0].toLowerCase();\n            };\n            var xor = function xor(a, b) {\n                return (a || b) && !(a && b);\n            };\n            /**\n * Try some variations on the word to determine whether it's irregular.\n * Specifically, try trimming s, then es, then ed because those are common\n * forms of plurals and past tense verbs (which can be used like adjectives).\n */ var checkForIrregulars = function checkForIrregulars(part) {\n                return [\n                    null,\n                    's',\n                    'es',\n                    'ed'\n                ].reduce(function(memo, ending) {\n                    return memo || irregulars.check(part, ending);\n                }, false);\n            };\n            exports.check = function() {\n                return true;\n            };\n            exports.run = function(word, opts) {\n                // Only check the first word. Also, if it's hyphenated, only\n                // check the first part. Finally, if it's possessive, ignore\n                // the possessive part.\n                var first = getFirst(word);\n                var isIrregular = checkForIrregulars(first);\n                /**\n  * If it starts with a vowel and isn't irregular: \"an\"\n  * If it starts with a vowel and IS irregular: \"a\"\n  * If it starts with a consonant and isn't irregular: \"a\"\n  * If it starts with a consonant and IS irregular: \"an\"\n  */ var article = xor(startsWithVowel(word), isIrregular) ? 'an' : 'a';\n                return article;\n            };\n        /***/ }\n    ]);\n});\n\n\nconst $31958278014cc1d0$var$BLANK_LINE_RE = /^\\s*$/;\nconst $31958278014cc1d0$var$TRAILING_WHITESPACE_RE = /\\s+$/;\nfunction $31958278014cc1d0$export$4d20fe649bca738b(text) {\n    let out = '';\n    let atDocStart = true;\n    let lastLineWasBlank = false;\n    for (let line of text.split('\\n')){\n        let isBlank = $31958278014cc1d0$var$BLANK_LINE_RE.test(line);\n        if (atDocStart) {\n            if (isBlank) continue;\n            else atDocStart = false;\n        }\n        if (isBlank) {\n            if (lastLineWasBlank) continue;\n            // Lines consisting of only whitespace should\n            // become simply blank lines\n            line = '';\n        } else {\n            // intra-line cleanups\n            line = line.replace($31958278014cc1d0$var$TRAILING_WHITESPACE_RE, '');\n            let rewrittenLine = '';\n            let atLineStart = true;\n            let lastCharWasSpace = false;\n            for (let char of line){\n                let charIsSpace = char === ' ';\n                if (!atLineStart && lastCharWasSpace && charIsSpace) continue;\n                else {\n                    if (!charIsSpace) atLineStart = false;\n                    rewrittenLine += char;\n                    lastCharWasSpace = charIsSpace;\n                }\n            }\n            line = rewrittenLine;\n        }\n        lastLineWasBlank = isBlank;\n        out += line + '\\n';\n    }\n    // Edge case: if input ended with a line break already, above code\n    // will result in \\n\\n ending the output. Correct this so output\n    // always terminates with a single \\n\n    if (out.endsWith('\\n\\n')) out = out.substring(0, out.length - 1);\n    return out;\n}\n// Note the 3 dashes here are the different kinds, not the same character\nconst $31958278014cc1d0$var$MISPLACED_WORD_ENDING_PUNC_RE = /([a-zA-Z0-9\\xA0-\\uFFFF\"'_])(\\s+)([.,:;!?\\-\\–\\—]+)/g;\nfunction $31958278014cc1d0$export$1a868e5eb4cad577(text) {\n    return text.replace($31958278014cc1d0$var$MISPLACED_WORD_ENDING_PUNC_RE, '$1$3$2');\n}\n// \\p{Ll} matches unicode lowercase letters which have uppercase variants.\nconst $31958278014cc1d0$var$INCORRECT_CAPS_RE = /([.!?][\"'_\\]\\)\\}\\s]*?\\s+|^\\s*)(\\p{Ll})/gu;\nfunction $31958278014cc1d0$export$e44a900159787abc(text) {\n    // Conforms to `text.replace` replacer function interface\n    function correctCaps(_match, p1, p2) {\n        return p1 + p2.toUpperCase();\n    }\n    return text.replace($31958278014cc1d0$var$INCORRECT_CAPS_RE, correctCaps);\n}\nconst $31958278014cc1d0$var$VISUAL_LINE_BREAK_RE = /\\\\ *(\\r?\\n|\\r)[ \\t]*/g;\nfunction $31958278014cc1d0$export$e67922e441e2a8bc(text) {\n    return text.replace($31958278014cc1d0$var$VISUAL_LINE_BREAK_RE, ' ');\n}\nconst $31958278014cc1d0$var$INDEFINITE_ARTICLE_RE = /\\b(a|an) ([\\p{L}0-9]+)\\b/igu;\nfunction $31958278014cc1d0$export$3c80aba8a12a34d4(text) {\n    function upcaseFirstLetter(s) {\n        if (s.length === 0) return s;\n        else if (s.length === 1) return s.toUpperCase();\n        else return s[0].toUpperCase() + s.slice(1);\n    }\n    // Conforms to `text.replace` replacer function interface\n    function correctArticle(_match, originalArticle, word) {\n        let article = $159889a114a1acb2$exports(word, {\n            articleOnly: true\n        });\n        if (originalArticle === 'a' || originalArticle === 'an') return article + ' ' + word;\n        else if (originalArticle === 'A' || originalArticle === 'An') return upcaseFirstLetter(article) + ' ' + word;\n        else // All caps\n        return article.toUpperCase() + ' ' + word;\n    }\n    return text.replace($31958278014cc1d0$var$INDEFINITE_ARTICLE_RE, correctArticle);\n}\n\n\nconst $a3cd9ccef2b1fd6c$export$18e0fb7e055a6ffc = {\n    whitespaceCleanup: true,\n    punctuationCleanup: true,\n    capitalizationCleanup: true,\n    indefiniteArticleCleanup: true\n};\nconst $a3cd9ccef2b1fd6c$export$129a826f9bfa0e84 = {\n    randomSeed: null,\n    allowEval: true,\n    workingDir: null\n};\nfunction $a3cd9ccef2b1fd6c$export$953b8844777cd492(originalSettings, newSettings) {\n    return Object.assign({}, originalSettings, newSettings);\n}\n\n\n\n\nconst $c2835ee42eb40a49$export$644d8ea042df96a6 = {\n    WeightedChoice: (0, $78d9e39c826e6bbd$export$b363a0fb27031153),\n    weightedChoose: $23dd371fa0105bbf$export$dfb0db305cae9fba,\n    randomInt: $23dd371fa0105bbf$export$3c5f89dae98e900b,\n    randomFloat: $23dd371fa0105bbf$export$231d937d7748069\n};\n\n\n\nfunction $67b5769a2e5b6e40$var$nullOrUndefined(object) {\n    return object === undefined || object === null;\n}\nfunction $67b5769a2e5b6e40$var$validateSettingField(settings, field, expectedType) {\n    const value = settings[field];\n    if (!$67b5769a2e5b6e40$var$nullOrUndefined(value) && typeof value !== expectedType) throw new (0, $be52afd1406121c4$export$b00eb0c7b5e7384f)('setting.' + field, value);\n}\nfunction $67b5769a2e5b6e40$export$a443a792f3423450(userDefs) {\n    let settings = userDefs['settings'];\n    if (settings) {\n        $67b5769a2e5b6e40$var$validateSettingField(settings, 'whitespaceCleanup', 'boolean');\n        $67b5769a2e5b6e40$var$validateSettingField(settings, 'punctuationCleanup', 'boolean');\n        $67b5769a2e5b6e40$var$validateSettingField(settings, 'capitalizationCleanup', 'boolean');\n    }\n}\n\n\n\nconst $0bc74b15410ab9b7$var$evalFuncTemplate = `\n  const bml = this;\n\n  const __new_bindings = {};\n\n  function bind(obj) {\n    for (let key in obj) {\n      __new_bindings[key] = obj[key];\n    }\n  }\n\n  // Note ref lookups are currently unstable\n  bml.ref = function(id) {\n    let lookupResult = __context.renderer.executedForkMap.get(id);\n    if (lookupResult === undefined) {\n      throw new Error('Ref lookup inside eval failed for: ' + id);\n    }\n    return lookupResult.renderedOutput;\n  }\n  bml.refDetail = function(id) {\n    let lookupResult = __context.renderer.executedForkMap.get(id);\n    if (lookupResult === undefined) {\n      throw new Error('Ref lookup inside eval failed for: ' + id);\n    }\n    return lookupResult;\n  }\n\n  ***USER DEFS BINDING SLOT***\n\n\n  function insert(str) {\n    __context.output += str;\n  }\n\n  function include(includePath) {\n    let result = __context.renderer.renderInclude(includePath);\n    insert(result);\n  }\n\n  ////////// start user code\n\n  ***USER CODE SLOT***\n\n  ////////// end user code\n\n  ***SAVE USER MUTATIONS SLOT***\n\n  return __new_bindings;\n`;\nclass $0bc74b15410ab9b7$export$c14d55ff8a781168 {\n    constructor(contents){\n        this.contents = contents;\n    }\n    toString() {\n        return `EvalBlock('${this.contents}')`;\n    }\n    generateBindingCode(userDefs) {\n        let lines = [];\n        if (userDefs.settings) lines.push('let settings = __context.bindings.settings;');\n        for(let key in userDefs)lines.push(`let ${key} = __context.bindings.${key}`);\n        return lines.join('\\n');\n    }\n    generateSaveUserMutationsCode(userDefs) {\n        let lines = [];\n        if (userDefs.settings) lines.push('__context.bindings.settings = settings;');\n        for(let key in userDefs)lines.push(`__context.bindings.${key} = ${key};`);\n        return lines.join('\\n');\n    }\n    toFunc(userDefs) {\n        let funcSrc = $0bc74b15410ab9b7$var$evalFuncTemplate.replace('***USER CODE SLOT***', this.contents);\n        funcSrc = funcSrc.replace('***USER DEFS BINDING SLOT***', this.generateBindingCode(userDefs));\n        funcSrc = funcSrc.replace('***SAVE USER MUTATIONS SLOT***', this.generateSaveUserMutationsCode(userDefs));\n        let funcContext = Object.assign({}, $c2835ee42eb40a49$export$644d8ea042df96a6);\n        return new Function('__context', funcSrc).bind(funcContext);\n    }\n    /*\n   * Execution results are stored in the passed-in context\n   */ execute(context) {\n        let newBindings = this.toFunc(context.bindings)(context);\n        (0, $67b5769a2e5b6e40$export$a443a792f3423450)(newBindings);\n        for (let [key, value] of Object.entries(newBindings)){\n            if (context.bindings.hasOwnProperty(key)) throw new (0, $be52afd1406121c4$export$2b8f184bbdc74d8a)(key);\n            context.bindings[key] = value;\n        }\n    }\n}\n\n\n\nvar $c53c14e71ec8b103$export$f435f793048e7a0f = /*#__PURE__*/ function(TokenType) {\n    TokenType[\"WHITESPACE\"] = \"WHITESPACE\";\n    TokenType[\"NEW_LINE\"] = \"NEW_LINE\";\n    TokenType[\"VISUAL_NEW_LINE\"] = \"VISUAL_NEW_LINE\";\n    TokenType[\"COMMENT\"] = \"COMMENT\";\n    TokenType[\"OPEN_BLOCK_COMMENT\"] = \"OPEN_BLOCK_COMMENT\";\n    TokenType[\"CLOSE_BLOCK_COMMENT\"] = \"CLOSE_BLOCK_COMMENT\";\n    TokenType[\"SLASH\"] = \"SLASH\";\n    TokenType[\"SINGLE_QUOTE\"] = \"SINGLE_QUOTE\";\n    TokenType[\"DOUBLE_QUOTE\"] = \"DOUBLE_QUOTE\";\n    TokenType[\"BACKTICK\"] = \"BACKTICK\";\n    TokenType[\"OPEN_PAREN\"] = \"OPEN_PAREN\";\n    TokenType[\"CLOSE_PAREN\"] = \"CLOSE_PAREN\";\n    TokenType[\"OPEN_BRACE\"] = \"OPEN_BRACE\";\n    TokenType[\"CLOSE_BRACE\"] = \"CLOSE_BRACE\";\n    TokenType[\"OPEN_BRACKET\"] = \"OPEN_BRACKET\";\n    TokenType[\"CLOSE_BRACKET\"] = \"CLOSE_BRACKET\";\n    TokenType[\"COMMA\"] = \"COMMA\";\n    TokenType[\"COLON\"] = \"COLON\";\n    TokenType[\"AT\"] = \"AT\";\n    TokenType[\"HASH\"] = \"HASH\";\n    TokenType[\"BANG\"] = \"BANG\";\n    TokenType[\"DOLLAR\"] = \"DOLLAR\";\n    TokenType[\"ARROW\"] = \"ARROW\";\n    TokenType[\"NUMBER\"] = \"NUMBER\";\n    TokenType[\"TEXT\"] = \"TEXT\";\n    return TokenType;\n}({});\n\n\n\n\n\nclass $68840703e4e8e9f0$export$d27702c2be747f09 {\n    constructor(weights, identifier, isSilent, isSet){\n        this.weights = (0, $23dd371fa0105bbf$export$a2691b3c66b90a97)(weights);\n        this.validateWeights();\n        this.initWeights = this.weights.map((w)=>w.weight);\n        this.identifier = identifier;\n        this.isSilent = isSilent;\n        this.isSet = isSet;\n    }\n    /**\n   * returns an object of the form {replacement: String, choiceIndex: Int}\n   */ call() {\n        let result;\n        try {\n            result = (0, $23dd371fa0105bbf$export$dfb0db305cae9fba)(this.weights);\n        } catch (error) {\n            if (error instanceof (0, $be52afd1406121c4$export$fbbbb9948ee25133) && this.isSet) {\n                console.warn(`Set '${this.identifier}' is exhausted; resetting weights.`);\n                this.resetWeights();\n                return this.call();\n            } else throw error;\n        }\n        if (this.isSet) this.weights[result.choiceIndex].weight = 0;\n        return {\n            replacement: result.choice,\n            choiceIndex: result.choiceIndex\n        };\n    }\n    resetWeights() {\n        for (let [idx, val] of this.weights.entries())val.weight = this.initWeights[idx];\n    }\n    validateWeights() {\n        if ((0, $78d9e39c826e6bbd$export$e3ec5db62775bb4)(this.weights) === 0) throw new (0, $be52afd1406121c4$export$beede8335535d955)();\n    }\n    toString() {\n        return `ChoiceFork{weights: ${this.weights}, ` + `identifier: ${this.identifier}, isSilent: ${this.isSilent}, isSet: ${this.isSet}}`;\n    }\n}\n\n\n\nclass $e85e0028c85965d9$export$e0be378c32fb70a7 {\n    constructor(id, choiceMap, fallbackChocies, reExecute){\n        this.id = id;\n        this.referenceMap = choiceMap;\n        if (fallbackChocies.length) this.fallbackChoiceFork = new (0, $68840703e4e8e9f0$export$d27702c2be747f09)(fallbackChocies, null, false, false);\n        else this.fallbackChoiceFork = null;\n        this.reExecute = reExecute;\n        if (reExecute) {\n            if (choiceMap.size || fallbackChocies.length) throw new Error(\"Got reExecute=true but mappings were provided. This error should be caught earlier in the parser.\");\n        }\n    }\n}\n\n\n\n\nfunction $8a47c715e80dd7cc$export$437922f793a69740(lexer) {\n    if (lexer.next()?.tokenType !== (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACKET) throw new (0, $be52afd1406121c4$export$25b19446f82d7080)('parseEval started with non-OPEN_BRACKET');\n    let state = 'code';\n    let index = lexer.index;\n    let startIndex = index;\n    let openBracketCount = 1;\n    let token;\n    while((token = lexer.next()) !== null)switch(state){\n        case 'block comment':\n            if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BLOCK_COMMENT) state = 'code';\n            break;\n        case 'inline comment':\n            if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NEW_LINE) state = 'code';\n            break;\n        case 'template literal':\n            if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).BACKTICK) state = 'code';\n            break;\n        case 'single-quote string':\n            if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).SINGLE_QUOTE) state = 'code';\n            else if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NEW_LINE) throw new (0, $be52afd1406121c4$export$212344d213252f95)(lexer.str, lexer.index);\n            break;\n        case 'double-quote string':\n            if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).DOUBLE_QUOTE) state = 'code';\n            else if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NEW_LINE) throw new (0, $be52afd1406121c4$export$212344d213252f95)(lexer.str, lexer.index);\n            break;\n        case 'regexp literal':\n            if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).SLASH) state = 'code';\n            break;\n        case 'code':\n            switch(token.tokenType){\n                case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACKET:\n                    openBracketCount++;\n                    break;\n                case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BRACKET:\n                    openBracketCount--;\n                    if (openBracketCount < 1) {\n                        let source = lexer.str.slice(startIndex, lexer.index - 1);\n                        return new (0, $0bc74b15410ab9b7$export$c14d55ff8a781168)(source);\n                    }\n                    break;\n                case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).COMMENT:\n                    state = 'inline comment';\n                    break;\n                case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BLOCK_COMMENT:\n                    state = 'block comment';\n                    break;\n                case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).BACKTICK:\n                    state = 'template literal';\n                    break;\n                case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).SINGLE_QUOTE:\n                    state = 'single-quote string';\n                    break;\n                case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).DOUBLE_QUOTE:\n                    state = 'double-quote string';\n                    break;\n                case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).SLASH:\n                    state = 'regexp literal';\n                    break;\n                default:\n            }\n            break;\n        default:\n            throw new Error(`Invalid state: ${state}`);\n    }\n    throw new (0, $be52afd1406121c4$export$212344d213252f95)('could not find end of javascript code block', startIndex);\n}\nfunction $8a47c715e80dd7cc$export$47ca0410daecad03(lexer) {\n    let startIndex = lexer.index;\n    let mappedChoices = new Map();\n    let unmappedChoices = [];\n    // Big blob in 2nd capture is for identifiers inclusive of non-ascii chars\n    // It's an approximation of JS identifiers.\n    let idRe = /(@|#|@!|\\$|#\\$|)([_a-zA-Z\\xA0-\\uFFFF][_a-zA-Z0-9\\xA0-\\uFFFF]*)(:?)/y;\n    let id = null;\n    let isReference = false;\n    let isSilent = false;\n    let isReExecuting = false;\n    let isSet = false;\n    let acceptId = true;\n    let acceptWeight = false;\n    let acceptChoiceIndex = false;\n    let acceptArrow = false;\n    let acceptReplacement = true;\n    let acceptComma = false;\n    let acceptBlockEnd = false;\n    let currentChoiceIndexes = [];\n    let currentReplacement = null;\n    let token;\n    while((token = lexer.peek()) !== null){\n        switch(token.tokenType){\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).WHITESPACE:\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NEW_LINE:\n                break;\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NUMBER:\n                if (acceptChoiceIndex) {\n                    acceptChoiceIndex = false;\n                    acceptArrow = true;\n                    acceptComma = true;\n                    acceptBlockEnd = false;\n                    currentChoiceIndexes.push(Number(token.str));\n                } else if (acceptWeight) {\n                    acceptWeight = false;\n                    acceptComma = true;\n                    acceptBlockEnd = true;\n                    unmappedChoices[unmappedChoices.length - 1].weight = Number(token.str);\n                } else throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)('Unexpected number in fork', lexer.str, token.index);\n                break;\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).ARROW:\n                if (acceptArrow) {\n                    acceptArrow = false;\n                    acceptReplacement = true;\n                    acceptComma = false;\n                } else throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)('Unexpected arrow in fork', lexer.str, token.index);\n                break;\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_PAREN:\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACKET:\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACE:\n                if (acceptReplacement) {\n                    acceptChoiceIndex = false;\n                    if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_PAREN) {\n                        lexer.next();\n                        currentReplacement = $8a47c715e80dd7cc$export$b6a9369736b19f4d(lexer, false);\n                    } else if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACKET) currentReplacement = $8a47c715e80dd7cc$export$437922f793a69740(lexer);\n                    else {\n                        lexer.next();\n                        currentReplacement = [\n                            $8a47c715e80dd7cc$export$47ca0410daecad03(lexer)\n                        ];\n                    }\n                    if (currentChoiceIndexes.length) {\n                        for (let choiceIndex of currentChoiceIndexes){\n                            if (mappedChoices.has(choiceIndex)) // it's not ideal to validate this here, but with the way it's currently\n                            // built, if we don't it will just silently overwrite the key\n                            throw new (0, $be52afd1406121c4$export$5f41361166083558)(id, choiceIndex, lexer.str, token.index);\n                            mappedChoices.set(choiceIndex, currentReplacement);\n                        }\n                        // Reset state for next choice\n                        acceptReplacement = false;\n                        acceptComma = true;\n                        acceptBlockEnd = true;\n                        currentChoiceIndexes = [];\n                        currentReplacement = null;\n                    } else {\n                        // Since there is no current choice index, this must be an unmapped choice\n                        unmappedChoices.push(new (0, $78d9e39c826e6bbd$export$b363a0fb27031153)(currentReplacement, null));\n                        acceptReplacement = false;\n                        acceptComma = true;\n                        acceptWeight = true;\n                        acceptBlockEnd = true;\n                    }\n                } else throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)('Unexpected replacement in fork', lexer.str, token.index);\n                continue;\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).COMMA:\n                if (acceptComma) {\n                    acceptComma = false;\n                    acceptChoiceIndex = true;\n                    if (!acceptArrow) acceptReplacement = true;\n                } else throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)('Unexpected comma in fork', lexer.str, token.index);\n                break;\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BRACE:\n                if (acceptBlockEnd) {\n                    lexer.next(); // consume close brace\n                    if (isReference) return new (0, $e85e0028c85965d9$export$e0be378c32fb70a7)(id, mappedChoices, unmappedChoices, isReExecuting);\n                    else return new (0, $68840703e4e8e9f0$export$d27702c2be747f09)(unmappedChoices, id, isSilent, isSet);\n                } else {\n                    if (!mappedChoices.size && !unmappedChoices.length) {\n                        // Special case for a common mistake\n                        if (id) throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)(`Fork '${id}' has no branches`, lexer.str, token.index, `Did you mean '{@${id}}'?`);\n                        else throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)('Fork has no branches', lexer.str, token.index);\n                    }\n                    throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)('Unexpected close brace in fork', lexer.str, token.index);\n                }\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).AT:\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).HASH:\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).DOLLAR:\n            case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).TEXT:\n                if (acceptId) {\n                    idRe.lastIndex = lexer.index;\n                    let idMatch = idRe.exec(lexer.str);\n                    if (!idMatch) throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)(`Unexpected token ${token}`, lexer.str, token.index);\n                    let typeSlug = idMatch[1];\n                    id = idMatch[2];\n                    let includesColon = !!idMatch[3];\n                    if (typeSlug == '@') {\n                        isReference = true;\n                        if (includesColon) acceptChoiceIndex = true;\n                        else acceptBlockEnd = true;\n                    } else if (typeSlug == '#') isSilent = true;\n                    else if (typeSlug == '@!') {\n                        isReference = true;\n                        isReExecuting = true;\n                        if (includesColon) throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)(`Re-executing reference '${id}' should not have a colon, ` + 'since re-executing references cannot have mappings.', lexer.str, token.index, `Did you mean '{@!${id}}'?`);\n                        else acceptBlockEnd = true;\n                    } else if (typeSlug == '$') isSet = true;\n                    else if (typeSlug == '#$') {\n                        isSet = true;\n                        isSilent = true;\n                    }\n                    lexer.overrideIndex(lexer.index + idMatch[0].length);\n                    acceptId = false;\n                    continue;\n                } else throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)(`Unexpected token ${token}`, lexer.str, token.index);\n            default:\n                throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)(`Unexpected token ${token}`, lexer.str, token.index);\n        }\n        // If we haven't broken out or thrown an error by now, consume this token.\n        lexer.next();\n    }\n    throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)('Could not find end of fork.', lexer.str, startIndex);\n}\nfunction $8a47c715e80dd7cc$export$94bf5b6a291876d6(lexer) {\n    let blockStartIndex = lexer.index - 1;\n    if (lexer.next()?.tokenType !== (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACKET) throw new (0, $be52afd1406121c4$export$25b19446f82d7080)('parseLiteralBlock started with non-OPEN_BRACKET');\n    let token;\n    let result = '';\n    while((token = lexer.next()) !== null)switch(token.tokenType){\n        case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BRACKET:\n            if (lexer.peek()?.tokenType == (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BRACKET) {\n                lexer.next();\n                return result;\n            }\n        default:\n            result += token.str;\n    }\n    throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)('Could not find end of literal block', lexer.str, blockStartIndex);\n}\nfunction $8a47c715e80dd7cc$export$b6a9369736b19f4d(lexer, isTopLevel) {\n    let startIndex = lexer.index;\n    let token;\n    let openParenCount = 1;\n    let astNodes = [];\n    function pushString(str) {\n        // To keep the AST more compact, sequential string nodes are joined together.\n        if (!astNodes.length) {\n            astNodes.push(str);\n            return;\n        }\n        let lastNode = astNodes[astNodes.length - 1];\n        if ((0, $2173e3b55588bdf3$export$63cc9d6c11a5a382)(lastNode)) astNodes[astNodes.length - 1] = lastNode.concat(str);\n        else astNodes.push(str);\n    }\n    while((token = lexer.next()) !== null)switch(token.tokenType){\n        case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_PAREN:\n            openParenCount++;\n            pushString(token.str);\n            break;\n        case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_PAREN:\n            openParenCount--;\n            if (openParenCount < 1) return astNodes;\n            else pushString(token.str);\n            break;\n        case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACKET:\n            if (lexer.peek()?.tokenType == (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACKET) pushString($8a47c715e80dd7cc$export$94bf5b6a291876d6(lexer));\n            else pushString(token.str);\n            break;\n        case (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACE:\n            let fork = $8a47c715e80dd7cc$export$47ca0410daecad03(lexer);\n            astNodes = astNodes.concat(fork);\n            break;\n        default:\n            // Any other input is treated as a string\n            pushString(token.str);\n    }\n    if (!isTopLevel) throw new (0, $be52afd1406121c4$export$9bd8738e2696d815)(`Reached end of document while parsing string.`, lexer.str, startIndex);\n    return astNodes;\n}\n\n\nclass $8b64b6441bb0a3f3$export$50792b0e93539fde {\n    constructor(tokenType, index, endIndex, str){\n        this.tokenType = tokenType;\n        this.index = index;\n        this.endIndex = endIndex;\n        this.str = str;\n    }\n    toString() {\n        return `Token{tokenType: ${this.tokenType}, index: ${this.index}, ` + `endIndex: ${this.endIndex}, string: '${this.str}'}`;\n    }\n}\n\n\n\nconst $a7fe260e13656a6f$var$ANY_WHITESPACE_RE = /\\s/;\nclass $a7fe260e13656a6f$export$6168dc8908a6c652 {\n    constructor(str){\n        this._cachedNext = null;\n        this._newLineRe = /\\r?\\n/y;\n        this._whitespaceRe = /[^\\S\\r\\n]+/y // non-newline whitespace\n        ;\n        this._numberRe = /(\\d+(\\.\\d+)?)|(\\.\\d+)/y;\n        this.str = str;\n        this.index = 0;\n    }\n    /**\n   * Set this.index and invalidate the next-token cache\n   */ overrideIndex(newIndex) {\n        this._cachedNext = null;\n        this.index = newIndex;\n    }\n    /**\n   * Determine the next item in the token stream\n   */ _determineNextRaw() {\n        if (this.index >= this.str.length) return null;\n        let tokenType;\n        let tokenIndex = this.index;\n        let tokenEndIndex = null;\n        let tokenString;\n        this._newLineRe.lastIndex = this.index;\n        this._whitespaceRe.lastIndex = this.index;\n        this._numberRe.lastIndex = this.index;\n        let newLineMatch = this._newLineRe.exec(this.str);\n        let whitespaceMatch = this._whitespaceRe.exec(this.str);\n        let numberMatch = this._numberRe.exec(this.str);\n        if (newLineMatch !== null) {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NEW_LINE;\n            tokenString = newLineMatch[0];\n        } else if (whitespaceMatch !== null) {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).WHITESPACE;\n            tokenString = whitespaceMatch[0];\n        } else if (numberMatch !== null) {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NUMBER;\n            tokenString = numberMatch[0];\n        } else if (this.str.slice(this.index, this.index + 2) === '//') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).COMMENT;\n            tokenString = '//';\n        } else if (this.str.slice(this.index, this.index + 2) === '/*') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BLOCK_COMMENT;\n            tokenString = '/*';\n        } else if (this.str.slice(this.index, this.index + 2) === '*/') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BLOCK_COMMENT;\n            tokenString = '*/';\n        } else if (this.str[this.index] === '/') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).SLASH;\n            tokenString = '/';\n        } else if (this.str[this.index] === '\\'') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).SINGLE_QUOTE;\n            tokenString = '\\'';\n        } else if (this.str[this.index] === '\"') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).DOUBLE_QUOTE;\n            tokenString = '\"';\n        } else if (this.str[this.index] === '`') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).BACKTICK;\n            tokenString = '`';\n        } else if (this.str[this.index] === '(') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_PAREN;\n            tokenString = '(';\n        } else if (this.str[this.index] === ')') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_PAREN;\n            tokenString = ')';\n        } else if (this.str[this.index] === '{') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACE;\n            tokenString = '{';\n        } else if (this.str[this.index] === '}') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BRACE;\n            tokenString = '}';\n        } else if (this.str[this.index] === ',') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).COMMA;\n            tokenString = ',';\n        } else if (this.str[this.index] === ':') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).COLON;\n            tokenString = ':';\n        } else if (this.str[this.index] === '@') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).AT;\n            tokenString = '@';\n        } else if (this.str[this.index] === '#') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).HASH;\n            tokenString = '#';\n        } else if (this.str[this.index] === '!') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).BANG;\n            tokenString = '!';\n        } else if (this.str[this.index] === '$') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).DOLLAR;\n            tokenString = '$';\n        } else if (this.str[this.index] === '[') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BRACKET;\n            tokenString = '[';\n        } else if (this.str[this.index] === ']') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BRACKET;\n            tokenString = ']';\n        } else if (this.str.slice(this.index, this.index + 2) === '->') {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).ARROW;\n            tokenString = '->';\n        } else {\n            tokenType = (0, $c53c14e71ec8b103$export$f435f793048e7a0f).TEXT;\n            if (this.str[this.index] === '\\\\') {\n                let nextChar = this.str[this.index + 1];\n                if ('\\\\/[{])'.includes(nextChar)) {\n                    tokenEndIndex = this.index + 2;\n                    tokenString = nextChar;\n                } else if (nextChar === 'n') {\n                    tokenEndIndex = this.index + 2;\n                    tokenString = '\\n';\n                } else if (nextChar === 't') {\n                    tokenEndIndex = this.index + 2;\n                    tokenString = '\\t';\n                } else if (nextChar === 'r') {\n                    tokenEndIndex = this.index + 2;\n                    tokenString = '\\r';\n                } else tokenString = '\\\\';\n            } else tokenString = this.str[this.index];\n        }\n        if (tokenEndIndex === null) tokenEndIndex = tokenIndex + tokenString.length;\n        let token = new (0, $8b64b6441bb0a3f3$export$50792b0e93539fde)(tokenType, tokenIndex, tokenEndIndex, tokenString);\n        return token;\n    }\n    _determineNextReal() {\n        let inLineComment = false;\n        let inBlockComment = false;\n        let token;\n        let startIndex = this.index;\n        while((token = this._determineNextRaw()) !== null){\n            if (inLineComment) {\n                if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NEW_LINE) {\n                    inLineComment = false;\n                    return new (0, $8b64b6441bb0a3f3$export$50792b0e93539fde)((0, $c53c14e71ec8b103$export$f435f793048e7a0f).NEW_LINE, token.index, token.endIndex, token.str);\n                }\n            } else if (inBlockComment) {\n                if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).CLOSE_BLOCK_COMMENT) {\n                    // Block comments output a single whitespace positioned at\n                    // the closing slash of the `*/`\n                    // TODO why???? isn't it more intuitive that they should emit nothing???\n                    let virtualSpaceIdx = token.index + 1;\n                    return new (0, $8b64b6441bb0a3f3$export$50792b0e93539fde)((0, $c53c14e71ec8b103$export$f435f793048e7a0f).WHITESPACE, virtualSpaceIdx, virtualSpaceIdx + 1, ' ');\n                }\n            } else {\n                if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).COMMENT) {\n                    // Use some hacky checks to work around lack of lookbehind\n                    // and elegant lookahead.\n                    let commentFollowedByWhitespace = token.index >= this.str.length || $a7fe260e13656a6f$var$ANY_WHITESPACE_RE.test(this.str[token.endIndex]);\n                    let commentPrecededByWhitespace = token.index === 0 || $a7fe260e13656a6f$var$ANY_WHITESPACE_RE.test(this.str[token.index - 1]);\n                    if (commentPrecededByWhitespace || commentFollowedByWhitespace) inLineComment = true;\n                    else // If line comment isn't preceded or followed by whitespace,\n                    // emit a TEXT token for it instead.\n                    return new (0, $8b64b6441bb0a3f3$export$50792b0e93539fde)((0, $c53c14e71ec8b103$export$f435f793048e7a0f).TEXT, token.index, token.endIndex, token.str);\n                } else if (token.tokenType === (0, $c53c14e71ec8b103$export$f435f793048e7a0f).OPEN_BLOCK_COMMENT) inBlockComment = true;\n                else {\n                    this.index = startIndex;\n                    return token;\n                }\n            }\n            // Determining the next real token currently requires\n            // fake-consuming tokens until a real one is found.  It's a bad\n            // hack, but `this.index` should be reset to the initial\n            // position before this function exits.\n            this.index = token.endIndex;\n        }\n        this.index = startIndex;\n        return null;\n    }\n    next() {\n        let token;\n        if (this._cachedNext !== null) {\n            token = this._cachedNext;\n            this._cachedNext = null;\n        } else token = this._determineNextReal();\n        if (token !== null) this.index = token.endIndex;\n        else this.index = this.str.length;\n        return token;\n    }\n    peek() {\n        if (this._cachedNext !== null) return this._cachedNext;\n        let token = this._determineNextReal();\n        this._cachedNext = token;\n        return token;\n    }\n    nextSatisfying(predicate) {\n        let token;\n        while((token = this.next()) !== null){\n            if (predicate(token)) return token;\n        }\n        return null;\n    }\n    nextNonWhitespace() {\n        return this.nextSatisfying((t)=>t.tokenType !== (0, $c53c14e71ec8b103$export$f435f793048e7a0f).WHITESPACE && t.tokenType !== (0, $c53c14e71ec8b103$export$f435f793048e7a0f).NEW_LINE);\n    }\n}\n\n\n\n\n\nclass $60ec6aaa2f66c1da$export$88530751e3977073 {\n    constructor(settings){\n        this.settings = settings;\n        this.executedForkMap = new Map();\n        this.evalContext = {\n            bindings: {},\n            output: '',\n            renderer: this\n        };\n    }\n    resolveReference(reference) {\n        let referredExecutedFork = this.executedForkMap.get(reference.id);\n        if (referredExecutedFork) {\n            if (reference.reExecute) {\n                // this is a special \"re-execute\" reference\n                let { replacement: replacement, choiceIndex: choiceIndex } = referredExecutedFork.choiceFork.call();\n                let renderedOutput = this.renderChoice(replacement);\n                referredExecutedFork.choiceIndex = choiceIndex;\n                referredExecutedFork.renderedOutput = renderedOutput;\n                return renderedOutput;\n            }\n            if (!reference.referenceMap.size && !reference.fallbackChoiceFork) // this is a special \"copy\" reference\n            return this.renderChoice([\n                referredExecutedFork.renderedOutput\n            ]);\n            let matchedReferenceResult = reference.referenceMap.get(referredExecutedFork.choiceIndex);\n            if (matchedReferenceResult !== undefined) return this.renderChoice(matchedReferenceResult);\n        }\n        if (!reference.fallbackChoiceFork) {\n            console.warn(`No matching reference or fallback found for ${reference.id}`);\n            return this.renderChoice([\n                ''\n            ]);\n        }\n        return this.renderChoice(reference.fallbackChoiceFork.call().replacement);\n    }\n    renderChoice(choice) {\n        if (choice instanceof Array) return this.renderAst(choice);\n        else {\n            if (!this.settings.allowEval) throw new (0, $be52afd1406121c4$export$e84e68f1a3f7e062)();\n            choice.execute(this.evalContext);\n            let output = this.evalContext.output;\n            this.evalContext.output = '';\n            return output;\n        }\n    }\n    renderAst(ast) {\n        let output = '';\n        for(let i = 0; i < ast.length; i++){\n            let node = ast[i];\n            if ((0, $2173e3b55588bdf3$export$63cc9d6c11a5a382)(node)) output += node;\n            else if (node instanceof (0, $68840703e4e8e9f0$export$d27702c2be747f09)) {\n                if (node.isSet && node.isSilent) {\n                    // Silent set declarations are *not* immediately executed.\n                    this.executedForkMap.set(node.identifier, {\n                        choiceFork: node,\n                        choiceIndex: -1,\n                        renderedOutput: ''\n                    });\n                    continue;\n                }\n                let { replacement: replacement, choiceIndex: choiceIndex } = node.call();\n                let renderedOutput = this.renderChoice(replacement);\n                if (node.isSilent) {\n                    if (output.length && output[output.length - 1] == '\\n') {\n                        // This silent fork started a new line.\n                        // If the next character is also a newline, skip it.\n                        let nextNode = i < ast.length - 1 ? ast[i + 1] : null;\n                        if ((0, $2173e3b55588bdf3$export$63cc9d6c11a5a382)(nextNode)) {\n                            if (nextNode.startsWith('\\n')) ast[i + 1] = nextNode.slice(1);\n                            else if (nextNode.startsWith('\\r\\n')) ast[i + 1] = nextNode.slice(2);\n                        }\n                    }\n                } else output += renderedOutput;\n                if (node.identifier) this.executedForkMap.set(node.identifier, {\n                    choiceFork: node,\n                    choiceIndex: choiceIndex,\n                    renderedOutput: renderedOutput\n                });\n            } else output += this.resolveReference(node);\n        }\n        return output;\n    }\n    postprocess(text) {\n        let documentSettings = (0, $a3cd9ccef2b1fd6c$export$953b8844777cd492)((0, $a3cd9ccef2b1fd6c$export$18e0fb7e055a6ffc), this.evalContext.bindings.settings);\n        let output = text;\n        output = $31958278014cc1d0$export$e67922e441e2a8bc(output);\n        if (documentSettings.punctuationCleanup) output = $31958278014cc1d0$export$1a868e5eb4cad577(output);\n        if (documentSettings.capitalizationCleanup) output = $31958278014cc1d0$export$e44a900159787abc(output);\n        if (documentSettings.whitespaceCleanup) output = $31958278014cc1d0$export$4d20fe649bca738b(output);\n        if (documentSettings.indefiniteArticleCleanup) output = $31958278014cc1d0$export$3c80aba8a12a34d4(output);\n        return output;\n    }\n    renderWithoutPostProcess(ast) {\n        if (this.settings.randomSeed) $23dd371fa0105bbf$export$74d4fed657706d5a(this.settings.randomSeed);\n        return this.renderAst(ast);\n    }\n    renderAndPostProcess(ast) {\n        return this.postprocess(this.renderWithoutPostProcess(ast));\n    }\n    /* Load and render a given BML file path,\n   * merging its eval context and fork map this renderer's.\n   */ renderInclude(includePath) {\n        let rngState = $23dd371fa0105bbf$export$387e42d58b404997();\n        let bmlDocumentString;\n        let resolvedWorkingDir = this.settings.workingDir || (0, (/*@__PURE__*/$parcel$interopDefault($d3c1734dacb01657$exports))).cwd();\n        let resolvedIncludePath = (0, (/*@__PURE__*/$parcel$interopDefault($a7629ff39e921c85$exports))).resolve(resolvedWorkingDir, includePath);\n        try {\n            bmlDocumentString = '' + (0, (/*@__PURE__*/$parcel$interopDefault($foUwZ))).readFileSync(resolvedIncludePath);\n        } catch (e) {\n            if (typeof window !== 'undefined') throw new (0, $be52afd1406121c4$export$2a10791adb5497e6)(includePath, `Includes can't be used in browsers`);\n            if (e instanceof Error && e.message && e.message.includes('no such file or directory')) throw new (0, $be52afd1406121c4$export$2a10791adb5497e6)(includePath, `File not found`);\n            throw e;\n        }\n        let lexer = new (0, $a7fe260e13656a6f$export$6168dc8908a6c652)(bmlDocumentString);\n        let ast = (0, $8a47c715e80dd7cc$export$b6a9369736b19f4d)(lexer, true);\n        let subWorkingDir = (0, (/*@__PURE__*/$parcel$interopDefault($a7629ff39e921c85$exports))).dirname(resolvedIncludePath);\n        let subSettings = {\n            ...this.settings,\n            workingDir: subWorkingDir\n        };\n        let subRenderer = new $60ec6aaa2f66c1da$export$88530751e3977073(subSettings);\n        let result = subRenderer.renderWithoutPostProcess(ast);\n        // Merge state from subrenderer into this renderer\n        // Any redefined references are silently overwritten; this is needed to support\n        // repeated includes (caused by diamond-like include graphs) without using namespacing.\n        for (let [key, value] of Object.entries(subRenderer.evalContext.bindings))this.evalContext.bindings[key] = value;\n        for (let [key, value] of subRenderer.executedForkMap)this.executedForkMap.set(key, value);\n        $23dd371fa0105bbf$export$8f8ba6256b8c9477(rngState);\n        return result;\n    }\n}\nfunction $60ec6aaa2f66c1da$export$b3890eb0ae9dca99(bmlDocumentString, renderSettings) {\n    renderSettings = (0, $a3cd9ccef2b1fd6c$export$953b8844777cd492)((0, $a3cd9ccef2b1fd6c$export$129a826f9bfa0e84), renderSettings);\n    let lexer = new (0, $a7fe260e13656a6f$export$6168dc8908a6c652)(bmlDocumentString);\n    let ast = (0, $8a47c715e80dd7cc$export$b6a9369736b19f4d)(lexer, true);\n    return new $60ec6aaa2f66c1da$export$88530751e3977073(renderSettings).renderAndPostProcess(ast);\n}\n\n\n\n\n\n\n\nclass $ffe99070104eb57b$var$AnalysisNode {\n}\nclass $ffe99070104eb57b$var$ForkNode extends $ffe99070104eb57b$var$AnalysisNode {\n    constructor(id = null, branches = []){\n        super(), this.referencedBy = [];\n        this.id = id;\n        this.branches = branches;\n    }\n    countOutcomes() {\n        let outcomes = BigInt(0);\n        for (let branch of this.branches)outcomes += $ffe99070104eb57b$var$countOutcomesForAnalysisTree(branch);\n        for (let ref of this.referencedBy)outcomes += ref.countOutcomesAddedToReferredNode();\n        return outcomes;\n    }\n}\nclass $ffe99070104eb57b$var$RefNode extends $ffe99070104eb57b$var$AnalysisNode {\n    constructor(forkNodeReferredTo, referenceMap){\n        super();\n        this.forkNodeReferredTo = forkNodeReferredTo;\n        this.referenceMap = referenceMap;\n    }\n    countOutcomesAddedToReferredNode() {\n        let outcomes = BigInt(0);\n        for (let [_, value] of this.referenceMap.entries())// Mapped choices contribute 1 less than plain choices\n        // because 1 has already been accounted for in the referenced fork\n        outcomes += $ffe99070104eb57b$var$countOutcomesForAnalysisTree(value) - BigInt(1);\n        return outcomes;\n    }\n}\nfunction $ffe99070104eb57b$var$countOutcomesForAnalysisTree(tree) {\n    let outcomes = BigInt(1); // Base case is 1 for an empty tree\n    for (let node of tree)if (node instanceof $ffe99070104eb57b$var$ForkNode) outcomes *= node.countOutcomes();\n    return outcomes;\n}\nfunction $ffe99070104eb57b$var$deriveForkNode(choiceFork, forkIdMap) {\n    let forkNode = new $ffe99070104eb57b$var$ForkNode(choiceFork.identifier, []);\n    if (forkNode.id) forkIdMap.set(forkNode.id, [\n        forkNode,\n        choiceFork\n    ]);\n    for (let weight of choiceFork.weights){\n        let choice = weight.choice;\n        if (choice instanceof (0, $0bc74b15410ab9b7$export$c14d55ff8a781168)) forkNode.branches.push([]);\n        else {\n            let subTree = $ffe99070104eb57b$var$deriveAnalysisTree(choice, forkIdMap);\n            forkNode.branches.push(subTree);\n        }\n    }\n    return forkNode;\n}\nfunction $ffe99070104eb57b$var$deriveRefNode(ref, forkIdMap) {\n    // TODO handle re-executing refs\n    let forkMapLookupResult = forkIdMap.get(ref.id);\n    if (!forkMapLookupResult) // Handle unmapped refs gracefully - this is expected\n    // for refs pointing to declarations in included files\n    return new $ffe99070104eb57b$var$RefNode(new $ffe99070104eb57b$var$ForkNode(), new Map());\n    let forkNodeReferredTo = forkIdMap.get(ref.id)[0];\n    let refNode = new $ffe99070104eb57b$var$RefNode(forkNodeReferredTo, new Map());\n    forkNodeReferredTo.referencedBy.push(refNode);\n    for (let [key, value] of ref.referenceMap.entries()){\n        let mappedValue;\n        if (value instanceof (0, $0bc74b15410ab9b7$export$c14d55ff8a781168)) mappedValue = [];\n        else {\n            let subTree = $ffe99070104eb57b$var$deriveAnalysisTree(value, forkIdMap);\n            mappedValue = subTree;\n        }\n        refNode.referenceMap.set(key, mappedValue);\n    }\n    // To make later analysis simple, create the implied mappings for the fallback fork\n    if (ref.fallbackChoiceFork) {\n        let fallbackForkNode = $ffe99070104eb57b$var$deriveForkNode(ref.fallbackChoiceFork, forkIdMap);\n        let referredFork = forkIdMap.get(ref.id)[1];\n        for(let i = 0; i < referredFork.weights.length; i++)if (!refNode.referenceMap.has(i)) refNode.referenceMap.set(i, [\n            fallbackForkNode\n        ]);\n    }\n    return refNode;\n}\nfunction $ffe99070104eb57b$var$deriveAnalysisTree(ast, forkIdMap) {\n    let analysisTree = [];\n    for (let node of ast){\n        if (node instanceof (0, $68840703e4e8e9f0$export$d27702c2be747f09)) analysisTree.push($ffe99070104eb57b$var$deriveForkNode(node, forkIdMap));\n        else if (node instanceof (0, $e85e0028c85965d9$export$e0be378c32fb70a7)) analysisTree.push($ffe99070104eb57b$var$deriveRefNode(node, forkIdMap));\n    // string nodes add no branches, so they are removed from the analysis tree\n    }\n    return analysisTree;\n}\nfunction $ffe99070104eb57b$export$7cbcccfbecde6416(bmlDocument) {\n    let lexer = new (0, $a7fe260e13656a6f$export$6168dc8908a6c652)(bmlDocument);\n    let ast = (0, $8a47c715e80dd7cc$export$b6a9369736b19f4d)(lexer, true);\n    let analysisTree = $ffe99070104eb57b$var$deriveAnalysisTree(ast, new Map());\n    let possibleOutcomes = $ffe99070104eb57b$var$countOutcomesForAnalysisTree(analysisTree);\n    return {\n        possibleOutcomes: possibleOutcomes\n    };\n}\n\n\nwindow['bml'] = (0, $60ec6aaa2f66c1da$export$b3890eb0ae9dca99);\nwindow.bml.analyze = (0, $ffe99070104eb57b$export$7cbcccfbecde6416);\n\n})();\n//# sourceMappingURL=bml.bundle.js.map\n","\"use strict\";","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/* @license BML - BSD 3 Clause License - Source at github.com/ajyoon/bml - Docs at bml-lang.org */\nimport { render } from './renderer';\nimport { analyze } from './analysis';\n\nwindow['bml'] = render;\nwindow.bml.analyze = analyze;\n","import path from 'path';\nimport process from 'process';\nimport fs from 'fs';\nimport * as rand from './rand';\nimport * as postprocessing from './postprocessing';\nimport { defaultBMLSettings, defaultRenderSettings, mergeSettings, RenderSettings } from './settings';\nimport { Reference } from './reference';\nimport { parseDocument } from './parsers';\nimport { AstNode } from './ast';\nimport { Lexer } from './lexer';\nimport { ChoiceFork } from './choiceFork';\nimport { Choice } from './weightedChoice';\nimport { isStr } from './stringUtils';\nimport { EvalDisabledError, IncludeError } from './errors';\nimport { EvalContext } from './evalBlock';\n\n\n// If the referred fork is a silent set fork that has not yet been executed,\n// choiceIndex will be -1 and renderedOutput will be ''.\nexport type ExecutedFork = { choiceFork: ChoiceFork, choiceIndex: number, renderedOutput: string }\nexport type ExecutedForkMap = Map<string, ExecutedFork>\n\n/**\n * A helper class for rendering an AST.\n *\n * This is meant to be used only once per render.\n */\nexport class Renderer {\n\n  settings: RenderSettings;\n  executedForkMap: ExecutedForkMap;\n  evalContext: EvalContext;\n\n  constructor(settings: RenderSettings) {\n    this.settings = settings;\n    this.executedForkMap = new Map();\n    this.evalContext = { bindings: {}, output: '', renderer: this };\n  }\n\n  resolveReference(reference: Reference): string {\n    let referredExecutedFork = this.executedForkMap.get(reference.id);\n    if (referredExecutedFork) {\n      if (reference.reExecute) {\n        // this is a special \"re-execute\" reference\n        let { replacement, choiceIndex } = referredExecutedFork.choiceFork.call();\n        let renderedOutput = this.renderChoice(replacement);\n        referredExecutedFork.choiceIndex = choiceIndex;\n        referredExecutedFork.renderedOutput = renderedOutput;\n        return renderedOutput;\n      }\n      if (!reference.referenceMap.size && !reference.fallbackChoiceFork) {\n        // this is a special \"copy\" reference\n        return this.renderChoice([referredExecutedFork.renderedOutput]);\n      }\n      let matchedReferenceResult = reference.referenceMap.get(referredExecutedFork.choiceIndex);\n      if (matchedReferenceResult !== undefined) {\n        return this.renderChoice(matchedReferenceResult);\n      }\n    }\n    if (!reference.fallbackChoiceFork) {\n      console.warn(`No matching reference or fallback found for ${reference.id}`);\n      return this.renderChoice(['']);\n    }\n    return this.renderChoice(reference.fallbackChoiceFork.call().replacement);\n  }\n\n  renderChoice(choice: Choice): string {\n    if (choice instanceof Array) {\n      return this.renderAst(choice);\n    } else {\n      if (!this.settings.allowEval) {\n        throw new EvalDisabledError();\n      }\n      choice.execute(this.evalContext);\n      let output = this.evalContext.output;\n      this.evalContext.output = '';\n      return output;\n    }\n  }\n\n  renderAst(ast: AstNode[]): string {\n    let output = '';\n    for (let i = 0; i < ast.length; i++) {\n      let node = ast[i];\n      if (isStr(node)) {\n        output += node;\n      } else if (node instanceof ChoiceFork) {\n        if (node.isSet && node.isSilent) {\n          // Silent set declarations are *not* immediately executed.\n          this.executedForkMap.set(node.identifier!,\n            { choiceFork: node, choiceIndex: -1, renderedOutput: '' });\n          continue;\n        }\n        let { replacement, choiceIndex } = node.call();\n        let renderedOutput = this.renderChoice(replacement);\n        if (node.isSilent) {\n          if (output.length && output[output.length - 1] == '\\n') {\n            // This silent fork started a new line.\n            // If the next character is also a newline, skip it.\n            let nextNode = i < ast.length - 1 ? (ast[i + 1]) : null;\n            if (isStr(nextNode)) {\n              if (nextNode.startsWith('\\n')) {\n                ast[i + 1] = nextNode.slice(1);\n              } else if (nextNode.startsWith('\\r\\n')) {\n                ast[i + 1] = nextNode.slice(2);\n              }\n            }\n          }\n        } else {\n          output += renderedOutput;\n        }\n        if (node.identifier) {\n          this.executedForkMap.set(node.identifier,\n            { choiceFork: node, choiceIndex, renderedOutput })\n        }\n      } else {\n        output += this.resolveReference(node)\n      }\n    }\n    return output;\n  }\n\n  postprocess(text: string): string {\n    let documentSettings = mergeSettings(\n      defaultBMLSettings, this.evalContext.bindings.settings);\n    let output = text;\n    output = postprocessing.replaceVisualLineBreaks(output);\n    if (documentSettings.punctuationCleanup) {\n      output = postprocessing.punctuationCleanup(output);\n    }\n    if (documentSettings.capitalizationCleanup) {\n      output = postprocessing.capitalizationCleanup(output);\n    }\n    if (documentSettings.whitespaceCleanup) {\n      output = postprocessing.whitespaceCleanup(output);\n    }\n    if (documentSettings.indefiniteArticleCleanup) {\n      output = postprocessing.correctIndefiniteArticles(output);\n    }\n    return output;\n  }\n\n  renderWithoutPostProcess(ast: AstNode[]): string {\n    if (this.settings.randomSeed) {\n      rand.setRandomSeed(this.settings.randomSeed);\n    }\n    return this.renderAst(ast);\n  }\n\n  renderAndPostProcess(ast: AstNode[]): string {\n    return this.postprocess(this.renderWithoutPostProcess(ast));\n  }\n\n  /* Load and render a given BML file path,\n   * merging its eval context and fork map this renderer's.\n   */\n  renderInclude(includePath: string): string {\n    let rngState = rand.saveRngState();\n    let bmlDocumentString;\n    let resolvedWorkingDir = this.settings.workingDir || process.cwd();\n    let resolvedIncludePath = path.resolve(resolvedWorkingDir, includePath);\n    try {\n      bmlDocumentString = '' + fs.readFileSync(resolvedIncludePath);\n    } catch (e) {\n      if (typeof window !== 'undefined') {\n        throw new IncludeError(includePath, `Includes can't be used in browsers`);\n      }\n      if (e instanceof Error && e.message && e.message.includes('no such file or directory')) {\n        throw new IncludeError(includePath, `File not found`);\n      }\n      throw e;\n    }\n\n    let lexer = new Lexer(bmlDocumentString);\n    let ast = parseDocument(lexer, true);\n    let subWorkingDir = path.dirname(resolvedIncludePath)\n    let subSettings = {\n      ...this.settings,\n      workingDir: subWorkingDir,\n    }\n    let subRenderer = new Renderer(subSettings);\n    let result = subRenderer.renderWithoutPostProcess(ast);\n    // Merge state from subrenderer into this renderer\n    // Any redefined references are silently overwritten; this is needed to support\n    // repeated includes (caused by diamond-like include graphs) without using namespacing.\n    for (let [key, value] of Object.entries(subRenderer.evalContext.bindings)) {\n      this.evalContext.bindings[key] = value;\n    }\n    for (let [key, value] of subRenderer.executedForkMap) {\n      this.executedForkMap.set(key, value);\n    }\n    rand.restoreRngState(rngState);\n    return result;\n  }\n}\n\nexport function render(bmlDocumentString: string,\n  renderSettings: RenderSettings | null): string {\n  renderSettings = mergeSettings(defaultRenderSettings, renderSettings);\n  let lexer = new Lexer(bmlDocumentString);\n  let ast = parseDocument(lexer, true);\n  return new Renderer(renderSettings).renderAndPostProcess(ast);\n}\n\n","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { WeightedChoice, Choice, sumWeights } from \"./weightedChoice\";\nimport { NoPossibleChoiceError } from \"./errors\";\nimport seedrandom from \"seedrandom\";\n\n// A module-local seedable random number generator\n// The selected seed will be random unless `setRandomSeed()` is called.\n// @ts-ignore\nlet rng = seedrandom.xor4096(null, { state: true });\n\nexport function saveRngState(): Object {\n  // @ts-ignore\n  return rng.state();\n}\n\nexport function restoreRngState(state: Object) {\n  // @ts-ignore\n  rng = seedrandom.xor4096(null, { state: state });\n}\n\nexport function setRandomSeed(seed: number) {\n  // @ts-ignore\n  rng = seedrandom.xor4096(seed, { state: true });\n}\n\nexport function normalizeWeights(\n  weightedChoices: WeightedChoice[]\n): WeightedChoice[] {\n  let normalized = [];\n  let sum = 0;\n  let nullWeightCount = 0;\n  for (let w = 0; w < weightedChoices.length; w++) {\n    let weightedChoice = weightedChoices[w];\n    normalized.push(weightedChoice.clone());\n    if (weightedChoice.weight === null) {\n      nullWeightCount++;\n    } else {\n      sum += weightedChoice.weight;\n    }\n  }\n  let nullWeight = (100 - sum) / nullWeightCount;\n  for (let n = 0; n < normalized.length; n++) {\n    if (normalized[n].weight === null) {\n      normalized[n].weight = nullWeight;\n    }\n  }\n  return normalized;\n}\n\nexport function randomFloat(min: number, max: number): number {\n  return rng() * (max - min) + min;\n}\n\nexport function randomInt(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(rng() * (max - min)) + min;\n}\n\n/**\n * Randomly choose from an array of weighted choices.\n *\n * The probability of any given `WeightedChoice` being\n * chosen is its weight divided by the sum of all given\n * choices.\n *\n * Returns an object of the form {choice, choiceIndex}\n */\nexport function weightedChoose(weights: WeightedChoice[]): {\n  choice: Choice;\n  choiceIndex: number;\n} {\n  let sum = sumWeights(weights);\n  if (sum === 0) {\n    throw new NoPossibleChoiceError();\n  }\n  let progress = 0;\n  let pickedValue = randomFloat(0, sum);\n  for (let i = 0; i < weights.length; i++) {\n    let wc = weights[i];\n    progress += wc.weight ?? 0;\n    if (progress >= pickedValue) {\n      return { choice: wc.choice, choiceIndex: i };\n    }\n  }\n  // If we're still here, something went wrong.\n  // Log a warning but try to return a random value anyways.\n  console.warn(\"Unable to pick weighted choice for weights: \" + weights);\n  let fallbackIndex = randomInt(0, weights.length);\n  return { choice: weights[fallbackIndex].choice, choiceIndex: fallbackIndex };\n}\n","import { EvalBlock } from './evalBlock';\nimport { AstNode } from './ast';\n\n\nexport type Choice = EvalBlock | AstNode[];\n\n/**\n * An outcome with a weight.\n */\nexport class WeightedChoice {\n  choice: Choice;\n  weight: number | null;\n\n  constructor(choice: Choice, weight: number | null) {\n    this.choice = choice;\n    this.weight = weight;\n  }\n\n  toString(): string {\n    return `WeightedChoice{choice: ${String(this.choice)}, weight: ${this.weight}}`;\n  }\n\n  /* Create a new WeightedChoice object with the same properties as this one. */\n  clone(): WeightedChoice {\n    return new WeightedChoice(this.choice, this.weight);\n  }\n}\n\nexport function sumWeights(weights: WeightedChoice[]) {\n  // Note that if weights have been normalized, as they are in `ChoiceFork`s,\n  // `wc.weight` will always be non-null here so the default should never occur.\n  return weights.reduce((acc, val) => acc + (val.weight ?? 0), 0);\n}\n","import * as stringUtils from './stringUtils';\n\nexport class IllegalStateError extends Error {\n  constructor(message: string) {\n    super(message + ' This is a bug. Please report at https://github.com/ajyoon/bml/issues');\n    this.name = 'IllegalStateError';\n    Object.setPrototypeOf(this, IllegalStateError.prototype);\n  }\n}\n\nexport class JavascriptSyntaxError extends Error {\n  constructor(bmlDoc: string, errorIndex: number) {\n    let message = 'Syntax error found while parsing bml javascript at '\n      + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    super(message);\n    this.name = 'JavascriptSyntaxError';\n    Object.setPrototypeOf(this, JavascriptSyntaxError.prototype);\n  }\n}\n\nexport class BMLSyntaxError extends Error {\n  constructor(message: string | null, bmlDoc: string, errorIndex: number, hint?: string) {\n    let resolvedMsg = (message || 'Syntax error found while parsing bml') +\n      ' at ' + stringUtils.lineColumnString(bmlDoc, errorIndex);\n    if (hint) {\n      resolvedMsg += '\\n' + hint;\n    }\n    super(resolvedMsg);\n    this.name = 'BMLSyntaxError';\n    Object.setPrototypeOf(this, BMLSyntaxError.prototype);\n  }\n}\n\nexport class BMLDuplicatedRefIndexError extends Error {\n  constructor(refIdentifier: string, choiceIndex: number, bmlDoc: string, errorIndex: number) {\n    let msg = `Duplicated reference index ${choiceIndex} for reference ${refIdentifier} `\n      + `at ${stringUtils.lineColumnString(bmlDoc, errorIndex)}`;\n    super(msg);\n    this.name = 'BMLDuplicatedRefIndexError';\n    Object.setPrototypeOf(this, BMLDuplicatedRefIndexError.prototype);\n  }\n}\n\nexport class BMLDuplicatedRefError extends Error {\n  constructor(refIdentifier: string, bmlDoc: string, errorIndex: number) {\n    let msg = `Duplicated reference ${refIdentifier} `\n      + `at ${stringUtils.lineColumnString(bmlDoc, errorIndex)}`;\n    super(msg);\n    this.name = 'BMLDuplicatedRefError';\n    Object.setPrototypeOf(this, BMLDuplicatedRefError.prototype);\n  }\n}\n\nexport class EvalBoundSettingsError extends Error {\n  constructor(field: string, value: any) {\n    super(`Eval binding of settings field '${field}' of '${value}' is invalid`);\n    this.name = 'EvalBoundSettingsError';\n    Object.setPrototypeOf(this, EvalBoundSettingsError.prototype);\n  }\n}\n\nexport class EvalBindingError extends Error {\n  constructor(key: string) {\n    super(`Eval binding ${key} was bound multiple times.`);\n    this.name = 'EvalBindingError';\n    Object.setPrototypeOf(this, EvalBindingError.prototype);\n  }\n}\n\nexport class EvalDisabledError extends Error {\n  constructor() {\n    super(`This document includes eval blocks and cannot be rendered with allowEval=false.`);\n    this.name = 'EvalDisabledError';\n    Object.setPrototypeOf(this, EvalDisabledError.prototype);\n  }\n}\n\nexport class IncludeError extends Error {\n  constructor(includePath: string, message: string) {\n    super(`Include failed for '${includePath}': ${message}`)\n    this.name = 'IncludeError';\n    Object.setPrototypeOf(this, IncludeError.prototype);\n  }\n}\n\nexport class InvalidForkWeightsError extends Error {\n  constructor() {\n    super('Fork has invalid weights');\n    this.name = 'InvalidForkWeightsError';\n    Object.setPrototypeOf(this, InvalidForkWeightsError.prototype);\n  }\n}\n\nexport class NoPossibleChoiceError extends Error {\n  constructor() {\n    super('Cannot perform weighted choice where the given weights have a sum of zero');\n    this.name = 'NoPossibleWeightsError';\n    Object.setPrototypeOf(this, NoPossibleChoiceError.prototype);\n  }\n}\n\n\n","export function lineAndColumnOf(str: string, index: number): { line: number, column: number } {\n  if (index > str.length) {\n    throw new Error('charIndex > string.length');\n  }\n  let line = 1;\n  let column = -1;\n  let newLine = false;\n  for (let i = 0; i <= index; i++) {\n    if (newLine) {\n      line++;\n      column = 0;\n      newLine = false;\n    } else {\n      column++;\n    }\n    if (str[i] === '\\n') {\n      newLine = true;\n    }\n  }\n  return { line: line, column: column };\n}\n\nexport function lineColumnString(str: string, index: number): string {\n  let lineAndColumn = lineAndColumnOf(str, index);\n  return 'line: ' + lineAndColumn.line + ', column: ' + lineAndColumn.column;\n}\n\nexport function isWhitespace(str: string): boolean {\n  return str.trim() === '';\n}\n\nexport function isStr(obj: any): obj is string {\n  return obj instanceof String || typeof obj === \"string\";\n}\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","const indefinite = require('indefinite');\n\nconst BLANK_LINE_RE = /^\\s*$/;\nconst TRAILING_WHITESPACE_RE = /\\s+$/;\n\n/**\n * Cleans whitespace in the given text by:\n * 1. Removing all trailing whitespace in every line\n * 2. Collapsing any runs of over 1 blank line\n * 3. Collapsing any runs of over 1 space in the middle of a line.\n * 4. Removing blank lines at the start of the text\n * 5. Ensuring the text ends with a single line break\n */\nexport function whitespaceCleanup(text: string): string {\n  let out = '';\n  let atDocStart = true;\n  let lastLineWasBlank = false;\n  for (let line of text.split('\\n')) {\n    let isBlank = BLANK_LINE_RE.test(line);\n\n    if (atDocStart) {\n      if (isBlank) {\n        // Skip blank lines at start of document\n        continue;\n      } else {\n        atDocStart = false;\n      }\n    }\n\n    if (isBlank) {\n      if (lastLineWasBlank) {\n        // Skip runs of blank lines\n        continue;\n      }\n      // Lines consisting of only whitespace should\n      // become simply blank lines\n      line = '';\n    } else {\n      // intra-line cleanups\n      line = line.replace(TRAILING_WHITESPACE_RE, '');\n      let rewrittenLine = '';\n      let atLineStart = true;\n      let lastCharWasSpace = false;\n      for (let char of line) {\n        let charIsSpace = char === ' ';\n        if (!atLineStart && lastCharWasSpace && charIsSpace) {\n          continue;\n        } else {\n          if (!charIsSpace) {\n            atLineStart = false;\n          }\n          rewrittenLine += char;\n          lastCharWasSpace = charIsSpace;\n        }\n      }\n      line = rewrittenLine;\n    }\n\n    lastLineWasBlank = isBlank;\n\n    out += line + '\\n';\n  }\n\n  // Edge case: if input ended with a line break already, above code\n  // will result in \\n\\n ending the output. Correct this so output\n  // always terminates with a single \\n\n  if (out.endsWith('\\n\\n')) {\n    out = out.substring(0, out.length - 1);\n  }\n\n  return out;\n}\n\n// Note the 3 dashes here are the different kinds, not the same character\nconst MISPLACED_WORD_ENDING_PUNC_RE = /([a-zA-Z0-9\\xA0-\\uFFFF\"'_])(\\s+)([.,:;!?\\-\\–\\—]+)/g;\n\n/**\n * Performs simple English-like correction of whitespace around\n * punctuation marks.\n *\n * Snap [, . : ; ! ?] to the end of preceding words, quotes, or underscores,\n * when separated by whitespace (including line breaks.)\n *\n * Note that this will shift punctuation to the *right* of quotes ([\" ' _]),\n * but will not shift punctuation to the inside of quotes, as this is often\n * dependent on style and context.\n */\nexport function punctuationCleanup(text: string): string {\n  return text.replace(MISPLACED_WORD_ENDING_PUNC_RE, '$1$3$2');\n}\n\n\n// \\p{Ll} matches unicode lowercase letters which have uppercase variants.\nconst INCORRECT_CAPS_RE = /([.!?][\"'_\\]\\)\\}\\s]*?\\s+|^\\s*)(\\p{Ll})/gu;\n\n\n/**\n * Tries to correct capitalization of the first words of sentences.\n *\n * This automatically capitalizes the first letter of the first word\n * following a sentence-ending punctuation mark.\n */\nexport function capitalizationCleanup(text: string): string {\n  // Conforms to `text.replace` replacer function interface\n  function correctCaps(_match: string, p1: string, p2: string) {\n    return p1 + p2.toUpperCase();\n  }\n\n  return text.replace(INCORRECT_CAPS_RE, correctCaps);\n}\n\nconst VISUAL_LINE_BREAK_RE = /\\\\ *(\\r?\\n|\\r)[ \\t]*/g\n\nexport function replaceVisualLineBreaks(text: string): string {\n  return text.replace(VISUAL_LINE_BREAK_RE, ' ');\n}\n\nconst INDEFINITE_ARTICLE_RE = /\\b(a|an) ([\\p{L}0-9]+)\\b/igu\n\n/**\n * Attempt to correct English indefinite articles (a / an)\n */\nexport function correctIndefiniteArticles(text: string) {\n  function upcaseFirstLetter(s: string): string {\n    if (s.length === 0) {\n      return s;\n    } else if (s.length === 1) {\n      return s.toUpperCase();\n    } else {\n      return s[0].toUpperCase() + s.slice(1);\n    }\n  }\n  // Conforms to `text.replace` replacer function interface\n  function correctArticle(_match: string, originalArticle: string, word: string) {\n    let article = indefinite(word, { articleOnly: true });\n    if (originalArticle === 'a' || originalArticle === 'an') {\n      return article + ' ' + word;\n    } else if (originalArticle === 'A' || originalArticle === 'An') {\n      return upcaseFirstLetter(article) + ' ' + word;\n    } else {\n      // All caps\n      return article.toUpperCase() + ' ' + word;\n    }\n  }\n\n  return text.replace(INDEFINITE_ARTICLE_RE, correctArticle);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"indefinite\"] = factory();\n\telse\n\t\troot[\"indefinite\"] = factory();\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar STARTS_WITH_VOWEL = /^[aeiouAEIOU]/;\n/**\n * Array#indexOf is faster IF the word starts with \"a\" (for example),\n * but negligibly faster when you have to .toLowerCase() the word, and\n * slower if the word happens to start with (e.g.) \"u.\"\n */\n\nexports.startsWithVowel = function (word) {\n  return STARTS_WITH_VOWEL.test(word);\n};\n\nexports.capitalize = function (article, opts) {\n  if (opts.capitalize) {\n    article = \"\".concat(article.charAt(0).toUpperCase()).concat(article.slice(1));\n  }\n\n  return article;\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nexports.check = function (word, ending) {\n  if (ending) {\n    // If the word ends in the ending, remove it.\n    var regex = new RegExp(\"\".concat(ending, \"$\"));\n    word = word.replace(regex, '');\n\n    if (word.length <= 1) {\n      return false;\n    }\n  }\n\n  return exports.list.indexOf(word) > -1;\n};\n/**\n * Here follows a List of words that take irregular articles because their\n * first letter is either a consonant pronounced like a vowel (hour) or a\n * vowel proncounced like a consonant (ukelele). Note that this is not only\n * nouns because adjectives and adverbs that start with these letters could\n * also follow an article when they identify a later noun, as in \"a useless\n * tool.\"\n *\n * This is not an attempt at a complete list, but rather a collection of\n * words used in at least moderate frequency. A list of ALL irregular words\n * would be too exhaustive to compile without some sort of tool.\n * http://www.thefreedictionary.com/words-that-start-with-eu says there are\n * over 1800 words starting with \"eu\" alone.\n *\n * At least for now, this list omits proper names, as they aren't USUALLY\n * used in such a way as to require an _indefinite_ article. I can't think,\n * for example, of a case where you'd want to say \"a Eustace.\"\n */\n\n\nexports.list = [// Nouns: eu like y\n'eunuch', 'eucalyptus', 'eugenics', 'eulogy', 'euphemism', 'euphony', 'euphoria', 'eureka', // Adjectives: eu like y\n'euro', 'european', 'euphemistic', 'euphonic', 'euphoric', // Adverbs: eu like y\n'euphemistically', 'euphonically', 'euphorically', // Nouns: silent h\n'heir', 'heiress', 'herb', 'homage', 'honesty', 'honor', 'honour', 'hour', // Adjectives: silent h\n'honest', 'honorous', // Adverbs: silent h\n'honestly', 'hourly', // Nouns: o like w\n'one', 'ouija', // Adjectives: o like w\n'once', // Adverbs: o like w\n// Nouns: u like y\n'ubiquity', 'udometer', 'ufo', 'uke', 'ukelele', 'ululate', 'unicorn', 'unicycle', 'uniform', 'unify', 'union', 'unison', 'unit', 'unity', 'universe', 'university', 'upas', 'ural', 'uranium', 'urea', 'ureter', 'urethra', 'urine', 'urologist', 'urology', 'urus', 'usage', 'use', 'user', 'usual', 'usurp', 'usurper', 'usury', 'utensil', 'uterus', 'utility', 'utopia', 'utricle', 'uvarovite', 'uvea', 'uvula', 'utah', 'utahn', // Adjectives: u like y\n'ubiquitous', 'ugandan', 'ukrainian', 'unanimous', 'unicameral', 'unified', 'unique', 'unisex', 'universal', 'urinal', 'urological', 'useful', 'useless', 'usurious', 'utilitarian', 'utopic', // Adverbs: u like y\n'ubiquitously', 'unanimously', 'unicamerally', 'uniquely', 'universally', 'urologically', 'usefully', 'uselessly', 'usuriously', // Nouns: y like i\n'yttria', 'yggdrasil', 'ylem', 'yperite', 'ytterbia', 'ytterbium', 'yttrium', // Adjectives: y like i\n'ytterbous', 'ytterbic', 'yttric', // Single letters\n'f', 'h', 'l', 'm', 'n', 'r', 's', 'u', 'x'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _require = __webpack_require__(0),\n    capitalize = _require.capitalize;\n\nvar irregulars = __webpack_require__(1);\n\nvar rules = __webpack_require__(3);\n\nvar indefinite = function indefinite(word) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var article;\n  /**\n   * I'd really prefer to use for of here, but babel converts that\n   * to something using Symbol.iterator, which PhantomJS chokes on.\n   */\n\n  rules.some(function (rule) {\n    if (rule.check(word, opts)) {\n      article = rule.run(word, opts);\n      return true;\n    }\n  });\n  return handleOptions(article, opts, word);\n};\n\nvar handleOptions = function handleOptions(article, opts, word) {\n  article = capitalize(article, opts);\n\n  if (opts.articleOnly) {\n    return article;\n  }\n\n  return \"\".concat(article, \" \").concat(word);\n};\n\nindefinite.irregularWords = irregulars.list;\nmodule.exports = indefinite;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = [__webpack_require__(4), __webpack_require__(5), __webpack_require__(6)];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nvar NUMBERS = /^([0-9,]+)/;\nvar EIGHT_ELEVEN_EIGHTEEN = /^(11|8|18)/;\nvar ELEVEN_EIGHTEEN = /^(11|18)/;\n\nexports.check = function (word) {\n  return NUMBERS.test(word);\n};\n\nexports.run = function (word, opts) {\n  var number = word.toString().match(NUMBERS)[1].replace(/,/g, '');\n  var article = 'a';\n\n  if (EIGHT_ELEVEN_EIGHTEEN.test(number)) {\n    var startsWith11Or18 = ELEVEN_EIGHTEEN.test(number); // If the number starts with 11 or 18 and is of length 4,\n    // the pronunciation is ambiguous so check opts.numbers to see\n    // how to render it. Otherwise, if it starts with 11 or 18\n    // and has 2, 5, 8, 11, etc. digits, use 'an.' Finally, if it\n    // starts with an 8, use 'an.' For everything else, use 'a.'\n\n    if (startsWith11Or18 && number.length === 4) {\n      article = opts.numbers === 'colloquial' ? 'an' : 'a';\n    } else if (startsWith11Or18 && (number.length - 2) % 3 === 0) {\n      article = 'an';\n    } else {\n      article = number.startsWith('8') ? 'an' : 'a';\n    }\n  }\n\n  return article;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _require = __webpack_require__(0),\n    startsWithVowel = _require.startsWithVowel;\n\nvar ACRONYM = /^[A-Z]+$/;\nvar IRREGULAR_ACRONYM = /^[UFHLMNRSX]/;\n\nvar isIrregularAcronym = function isIrregularAcronym(word) {\n  return IRREGULAR_ACRONYM.test(word.charAt(0));\n};\n/**\n * Both = a && b\n * Neither = !a && !b\n * In the case of Booleans, this means\n * either both true or both false, so\n * we can just compare the equality of\n * a and b.\n */\n\n\nvar bothOrNeither = function bothOrNeither(a, b) {\n  return a === b;\n};\n/**\n * If the entirety of the first word is capital letters\n * and case insensitivity is off, it's an acronym.\n */\n\n\nexports.check = function (word, _ref) {\n  var caseInsensitive = _ref.caseInsensitive;\n  return caseInsensitive ? false : ACRONYM.test(word.split(' ')[0]);\n};\n\nexports.run = function (word) {\n  var isIrregular = isIrregularAcronym(word);\n  var initialVowel = startsWithVowel(word);\n  /*\n   * If it starts with U: \"a\"\n   * If it starts with any other vowel: \"an\"\n   * If it starts with F, H, L, M, N, R, S, or X: \"an\"\n   * If it starts with any other consonant: \"a\"\n   */\n\n  var article = bothOrNeither(initialVowel, isIrregular) ? 'a' : 'an';\n  return article;\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _require = __webpack_require__(0),\n    startsWithVowel = _require.startsWithVowel;\n\nvar irregulars = __webpack_require__(1);\n\nvar EXTRAS = /[\\s'-]/;\n\nvar getFirst = function getFirst(word) {\n  return word.split(EXTRAS)[0].toLowerCase();\n};\n\nvar xor = function xor(a, b) {\n  return (a || b) && !(a && b);\n};\n/**\n * Try some variations on the word to determine whether it's irregular.\n * Specifically, try trimming s, then es, then ed because those are common\n * forms of plurals and past tense verbs (which can be used like adjectives).\n */\n\n\nvar checkForIrregulars = function checkForIrregulars(part) {\n  return [null, 's', 'es', 'ed'].reduce(function (memo, ending) {\n    return memo || irregulars.check(part, ending);\n  }, false);\n};\n\nexports.check = function () {\n  return true;\n};\n\nexports.run = function (word, opts) {\n  // Only check the first word. Also, if it's hyphenated, only\n  // check the first part. Finally, if it's possessive, ignore\n  // the possessive part.\n  var first = getFirst(word);\n  var isIrregular = checkForIrregulars(first);\n  /**\n  * If it starts with a vowel and isn't irregular: \"an\"\n  * If it starts with a vowel and IS irregular: \"a\"\n  * If it starts with a consonant and isn't irregular: \"a\"\n  * If it starts with a consonant and IS irregular: \"an\"\n  */\n\n  var article = xor(startsWithVowel(word), isIrregular) ? 'an' : 'a';\n  return article;\n};\n\n/***/ })\n/******/ ]);\n});","export interface DocumentSettings {\n  /**\n   * Whether to perform a post-processing step cleaning up whitespace.\n   */\n  whitespaceCleanup?: boolean | null;\n\n  /**\n   * Whether to perform a post-processing step repositioning\n   * punctuation marks according to *some* English grammar rules.\n   */\n  punctuationCleanup?: boolean | null;\n\n  /**\n   * Whether to perform basic capitalization correction for words\n   * following sentence-ending punctuation.\n   */\n  capitalizationCleanup?: boolean | null;\n\n  /**\n   * Whether to correct English indefinite articles (a / an)\n   */\n  indefiniteArticleCleanup?: boolean | null;\n}\n\nexport interface RenderSettings {\n  /**\n   * The random seed to use for this render.\n   *\n   * Can be any type, as this is fed directly to the `seedrandom`\n   * library, which converts the object to a string and uses that as\n   * the actual seed.\n   */\n  randomSeed?: number | null;\n\n  /**\n   * Whether to disable `eval` blocks in the document.\n   *\n   * This can be useful for security purposes.\n   */\n  allowEval?: boolean | null;\n\n  /**\n   * The working directory used for imports in this render.\n   *\n   * If the document uses imports, this should generally be set to the\n   * absolute path of the document file's directory.\n   */\n  workingDir?: string | null;\n}\n\n/**\n * Default settings. These are passed in to the main bml rendering function.\n */\nexport const defaultBMLSettings: DocumentSettings = {\n  whitespaceCleanup: true,\n  punctuationCleanup: true,\n  capitalizationCleanup: true,\n  indefiniteArticleCleanup: true,\n};\n\nexport const defaultRenderSettings: RenderSettings = {\n  randomSeed: null,\n  allowEval: true,\n  workingDir: null,\n};\n\n/**\n * Return a new settings object with all the properties defined in newSettings,\n * defaulting to those in originalSettings where absent.\n *\n * If `newSettings` is falsy, return `originalSettings` unmodified.\n */\nexport function mergeSettings<T>(originalSettings: T, newSettings: T | null | undefined): T {\n  return Object.assign({}, originalSettings, newSettings);\n}\n","import { EvalBlock } from './evalBlock';\nimport { WeightedChoice } from './weightedChoice';\nimport { Lexer } from './lexer';\nimport { TokenType } from './tokenType';\nimport { ChoiceFork } from './choiceFork';\nimport { Reference } from './reference';\nimport {\n  IllegalStateError,\n  JavascriptSyntaxError,\n  BMLSyntaxError,\n  BMLDuplicatedRefIndexError,\n} from './errors';\nimport { AstNode } from './ast';\nimport { isStr } from './stringUtils';\n\n\n/**\n * Parse an `eval` block\n *\n * @param lexer - A lexer whose next token is OPEN_BRACKET. This will be\n *     mutated in place such that when the method returns, the lexer's\n *     next token will be after the closing bracket of the block.\n *\n * @return The string of Javascript code extracted from the eval block\n *\n * @throws {JavascriptSyntaxError} If the javascript snippet inside the eval\n *     block contains a syntax error which makes parsing it impossible.\n */\nexport function parseEval(lexer: Lexer): EvalBlock {\n  if (lexer.next()?.tokenType !== TokenType.OPEN_BRACKET) {\n    throw new IllegalStateError('parseEval started with non-OPEN_BRACKET');\n  }\n\n  let state = 'code';\n  let index = lexer.index;\n  let startIndex = index;\n  let openBracketCount = 1;\n  let token;\n  while ((token = lexer.next()) !== null) {\n    switch (state) {\n      case 'block comment':\n        if (token.tokenType === TokenType.CLOSE_BLOCK_COMMENT) {\n          state = 'code';\n        }\n        break;\n      case 'inline comment':\n        if (token.tokenType === TokenType.NEW_LINE) {\n          state = 'code';\n        }\n        break;\n      case 'template literal':\n        if (token.tokenType === TokenType.BACKTICK) {\n          state = 'code';\n        }\n        break;\n      case 'single-quote string':\n        if (token.tokenType === TokenType.SINGLE_QUOTE) {\n          state = 'code';\n        } else if (token.tokenType === TokenType.NEW_LINE) {\n          throw new JavascriptSyntaxError(lexer.str, lexer.index);\n        }\n        break;\n      case 'double-quote string':\n        if (token.tokenType === TokenType.DOUBLE_QUOTE) {\n          state = 'code';\n        } else if (token.tokenType === TokenType.NEW_LINE) {\n          throw new JavascriptSyntaxError(lexer.str, lexer.index);\n        }\n        break;\n      case 'regexp literal':\n        if (token.tokenType === TokenType.SLASH) {\n          state = 'code';\n        }\n        break;\n      case 'code':\n        switch (token.tokenType) {\n          case TokenType.OPEN_BRACKET:\n            openBracketCount++;\n            break;\n          case TokenType.CLOSE_BRACKET:\n            openBracketCount--;\n            if (openBracketCount < 1) {\n              let source = lexer.str.slice(startIndex, lexer.index - 1);\n              return new EvalBlock(source);\n            }\n            break;\n          case TokenType.COMMENT:\n            state = 'inline comment';\n            break;\n          case TokenType.OPEN_BLOCK_COMMENT:\n            state = 'block comment';\n            break;\n          case TokenType.BACKTICK:\n            state = 'template literal';\n            break;\n          case TokenType.SINGLE_QUOTE:\n            state = 'single-quote string';\n            break;\n          case TokenType.DOUBLE_QUOTE:\n            state = 'double-quote string';\n            break;\n          case TokenType.SLASH:\n            state = 'regexp literal';\n            break;\n          default:\n          // pass over..\n        }\n        break;\n      default:\n        throw new Error(`Invalid state: ${state}`);\n    }\n  }\n  throw new JavascriptSyntaxError('could not find end of javascript code block',\n    startIndex);\n}\n\n/**\n * The main function for parsing {} blocks.\n *\n * Expects the lexer's previous token to be the opening curly brace,\n * and the next token whatever comes next.\n */\nexport function parseFork(lexer: Lexer): ChoiceFork | Reference {\n  let startIndex = lexer.index;\n\n  let mappedChoices = new Map();\n  let unmappedChoices: WeightedChoice[] = [];\n\n  // Big blob in 2nd capture is for identifiers inclusive of non-ascii chars\n  // It's an approximation of JS identifiers.\n  let idRe = /(@|#|@!|\\$|#\\$|)([_a-zA-Z\\xA0-\\uFFFF][_a-zA-Z0-9\\xA0-\\uFFFF]*)(:?)/y;\n\n  let id = null;\n  let isReference = false;\n  let isSilent = false;\n  let isReExecuting = false;\n  let isSet = false;\n\n  let acceptId = true;\n  let acceptWeight = false;\n  let acceptChoiceIndex = false;\n  let acceptArrow = false;\n  let acceptReplacement = true;\n  let acceptComma = false;\n  let acceptBlockEnd = false;\n\n  let currentChoiceIndexes = [];\n  let currentReplacement = null;\n  let token;\n\n  while ((token = lexer.peek()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.WHITESPACE:\n      case TokenType.NEW_LINE:\n        break;\n      case TokenType.NUMBER:\n        if (acceptChoiceIndex) {\n          acceptChoiceIndex = false;\n          acceptArrow = true;\n          acceptComma = true;\n          acceptBlockEnd = false;\n          currentChoiceIndexes.push(Number(token.str));\n        } else if (acceptWeight) {\n          acceptWeight = false;\n          acceptComma = true;\n          acceptBlockEnd = true;\n          unmappedChoices[unmappedChoices.length - 1].weight = Number(token.str);\n        } else {\n          throw new BMLSyntaxError('Unexpected number in fork',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.ARROW:\n        if (acceptArrow) {\n          acceptArrow = false;\n          acceptReplacement = true;\n          acceptComma = false;\n        } else {\n          throw new BMLSyntaxError('Unexpected arrow in fork',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.OPEN_PAREN:\n      case TokenType.OPEN_BRACKET:\n      case TokenType.OPEN_BRACE:\n        if (acceptReplacement) {\n          acceptChoiceIndex = false;\n          if (token.tokenType === TokenType.OPEN_PAREN) {\n            lexer.next();\n            currentReplacement = parseDocument(lexer, false);\n          } else if (token.tokenType === TokenType.OPEN_BRACKET) {\n            currentReplacement = parseEval(lexer);\n          } else {\n            lexer.next();\n            currentReplacement = [parseFork(lexer)];\n          }\n          if (currentChoiceIndexes.length) {\n            for (let choiceIndex of currentChoiceIndexes) {\n              if (mappedChoices.has(choiceIndex)) {\n                // it's not ideal to validate this here, but with the way it's currently\n                // built, if we don't it will just silently overwrite the key\n                throw new BMLDuplicatedRefIndexError(\n                  id!, choiceIndex, lexer.str, token.index);\n              }\n              mappedChoices.set(choiceIndex, currentReplacement);\n            }\n            // Reset state for next choice\n            acceptReplacement = false;\n            acceptComma = true;\n            acceptBlockEnd = true;\n            currentChoiceIndexes = [];\n            currentReplacement = null;\n          } else {\n            // Since there is no current choice index, this must be an unmapped choice\n            unmappedChoices.push(new WeightedChoice(currentReplacement, null));\n            acceptReplacement = false;\n            acceptComma = true;\n            acceptWeight = true;\n            acceptBlockEnd = true;\n          }\n        } else {\n          throw new BMLSyntaxError('Unexpected replacement in fork',\n            lexer.str, token.index);\n        }\n        continue;\n      case TokenType.COMMA:\n        if (acceptComma) {\n          acceptComma = false;\n          acceptChoiceIndex = true;\n          if (!acceptArrow) {\n            acceptReplacement = true;\n          }\n        } else {\n          throw new BMLSyntaxError('Unexpected comma in fork',\n            lexer.str, token.index);\n        }\n        break;\n      case TokenType.CLOSE_BRACE:\n        if (acceptBlockEnd) {\n          lexer.next();  // consume close brace\n          if (isReference) {\n            return new Reference(id!, mappedChoices, unmappedChoices, isReExecuting);\n          } else {\n            return new ChoiceFork(unmappedChoices, id, isSilent, isSet)\n          }\n        } else {\n          if (!mappedChoices.size && !unmappedChoices.length) {\n            // Special case for a common mistake\n            if (id) {\n              throw new BMLSyntaxError(`Fork '${id}' has no branches`,\n                lexer.str, token.index, `Did you mean '{@${id}}'?`);\n            } else {\n              throw new BMLSyntaxError('Fork has no branches',\n                lexer.str, token.index);\n            }\n          }\n          throw new BMLSyntaxError('Unexpected close brace in fork',\n            lexer.str, token.index);\n        }\n      case TokenType.AT:\n      case TokenType.HASH:\n      case TokenType.DOLLAR:\n      case TokenType.TEXT:\n        if (acceptId) {\n          idRe.lastIndex = lexer.index;\n          let idMatch = idRe.exec(lexer.str);\n          if (!idMatch) {\n            throw new BMLSyntaxError(`Unexpected token ${token}`,\n              lexer.str, token.index);\n          }\n          let typeSlug = idMatch[1];\n          id = idMatch[2];\n          let includesColon = !!idMatch[3];\n          if (typeSlug == '@') {\n            isReference = true;\n            if (includesColon) {\n              acceptChoiceIndex = true;\n            } else {\n              acceptBlockEnd = true;\n            }\n          } else if (typeSlug == '#') {\n            isSilent = true;\n          } else if (typeSlug == '@!') {\n            isReference = true;\n            isReExecuting = true;\n            if (includesColon) {\n              throw new BMLSyntaxError(`Re-executing reference '${id}' should not have a colon, `\n                + 'since re-executing references cannot have mappings.',\n                lexer.str, token.index, `Did you mean '{@!${id}}'?`)\n            } else {\n              acceptBlockEnd = true;\n            }\n          } else if (typeSlug == '$') {\n            isSet = true;\n          } else if (typeSlug == '#$') {\n            isSet = true;\n            isSilent = true;\n          }\n          lexer.overrideIndex(lexer.index + idMatch[0].length);\n          acceptId = false;\n          continue;\n        } else {\n          throw new BMLSyntaxError(`Unexpected token ${token}`,\n            lexer.str, token.index);\n        }\n      default:\n        throw new BMLSyntaxError(`Unexpected token ${token}`,\n          lexer.str, token.index);\n    }\n    // If we haven't broken out or thrown an error by now, consume this token.\n    lexer.next();\n  }\n  throw new BMLSyntaxError('Could not find end of fork.',\n    lexer.str, startIndex);\n}\n\n\n/**\n * Parse a literal block expressed with double-brackets\n *\n * Expects the lexer's next token to be the second opening bracket.\n * Upon returning, the lexer's next token is the one right after the final closing bracket.\n */\nexport function parseLiteralBlock(lexer: Lexer): string {\n  let blockStartIndex = lexer.index - 1;\n  if (lexer.next()?.tokenType !== TokenType.OPEN_BRACKET) {\n    throw new IllegalStateError('parseLiteralBlock started with non-OPEN_BRACKET');\n  }\n  let token;\n  let result = '';\n  while ((token = lexer.next()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.CLOSE_BRACKET:\n        if (lexer.peek()?.tokenType == TokenType.CLOSE_BRACKET) {\n          lexer.next();\n          return result;\n        }\n      default:\n        result += token.str;\n    }\n  }\n  throw new BMLSyntaxError('Could not find end of literal block', lexer.str, blockStartIndex);\n}\n\n/**\n * The top-level (or recursively called) parsing function. Returns an AST.\n *\n * If being recursively called, isTopLevel should be false and the\n * lexer's previous token should be an OPEN_PAREN.\n */\nexport function parseDocument(lexer: Lexer, isTopLevel: boolean): AstNode[] {\n  let startIndex = lexer.index;\n  let token;\n  let openParenCount = 1;\n  let astNodes: AstNode[] = [];\n\n  function pushString(str: string) {\n    // To keep the AST more compact, sequential string nodes are joined together.\n    if (!astNodes.length) {\n      astNodes.push(str);\n      return;\n    }\n    let lastNode = astNodes[astNodes.length - 1];\n    if (isStr(lastNode)) {\n      astNodes[astNodes.length - 1] = lastNode.concat(str);\n    } else {\n      astNodes.push(str);\n    }\n  }\n\n  while ((token = lexer.next()) !== null) {\n    switch (token.tokenType) {\n      case TokenType.OPEN_PAREN:\n        openParenCount++;\n        pushString(token.str);\n        break;\n      case TokenType.CLOSE_PAREN:\n        openParenCount--;\n        if (openParenCount < 1) {\n          return astNodes;\n        } else {\n          pushString(token.str);\n        }\n        break;\n      case TokenType.OPEN_BRACKET:\n        if (lexer.peek()?.tokenType == TokenType.OPEN_BRACKET) {\n          pushString(parseLiteralBlock(lexer));\n        } else {\n          pushString(token.str);\n        }\n        break;\n      case TokenType.OPEN_BRACE:\n        let fork = parseFork(lexer);\n        astNodes = astNodes.concat(fork);\n        break;\n      default:\n        // Any other input is treated as a string\n        pushString(token.str);\n    }\n  }\n  if (!isTopLevel) {\n    throw new BMLSyntaxError(`Reached end of document while parsing string.`,\n      lexer.str, startIndex)\n  }\n  return astNodes;\n}\n","import * as evalApi from './evalApi';\nimport { UserDefs, validateUserDefs } from './userDefs';\nimport { EvalBindingError } from './errors';\nimport type { Renderer } from './renderer';\n\nconst evalFuncTemplate = `\n  const bml = this;\n\n  const __new_bindings = {};\n\n  function bind(obj) {\n    for (let key in obj) {\n      __new_bindings[key] = obj[key];\n    }\n  }\n\n  // Note ref lookups are currently unstable\n  bml.ref = function(id) {\n    let lookupResult = __context.renderer.executedForkMap.get(id);\n    if (lookupResult === undefined) {\n      throw new Error('Ref lookup inside eval failed for: ' + id);\n    }\n    return lookupResult.renderedOutput;\n  }\n  bml.refDetail = function(id) {\n    let lookupResult = __context.renderer.executedForkMap.get(id);\n    if (lookupResult === undefined) {\n      throw new Error('Ref lookup inside eval failed for: ' + id);\n    }\n    return lookupResult;\n  }\n\n  ***USER DEFS BINDING SLOT***\n\n\n  function insert(str) {\n    __context.output += str;\n  }\n\n  function include(includePath) {\n    let result = __context.renderer.renderInclude(includePath);\n    insert(result);\n  }\n\n  ////////// start user code\n\n  ***USER CODE SLOT***\n\n  ////////// end user code\n\n  ***SAVE USER MUTATIONS SLOT***\n\n  return __new_bindings;\n`;\n\n\nexport type EvalContext = {\n  bindings: UserDefs;\n  renderer: Renderer;\n  output: string;\n}\n\n\nexport class EvalBlock {\n  contents: string;\n\n  constructor(contents: string) {\n    this.contents = contents;\n  }\n\n  toString(): string {\n    return `EvalBlock('${this.contents}')`;\n  }\n\n  generateBindingCode(userDefs: UserDefs): string {\n    let lines = [];\n    if (userDefs.settings) {\n      lines.push('let settings = __context.bindings.settings;');\n    }\n    for (let key in userDefs) {\n      lines.push(`let ${key} = __context.bindings.${key}`)\n    }\n    return lines.join('\\n');\n  }\n\n  generateSaveUserMutationsCode(userDefs: UserDefs): string {\n    let lines = [];\n    if (userDefs.settings) {\n      lines.push('__context.bindings.settings = settings;');\n    }\n    for (let key in userDefs) {\n      lines.push(`__context.bindings.${key} = ${key};`)\n    }\n    return lines.join('\\n');\n  }\n\n  toFunc(userDefs: UserDefs): Function {\n    let funcSrc = evalFuncTemplate.replace('***USER CODE SLOT***', this.contents);\n    funcSrc = funcSrc.replace('***USER DEFS BINDING SLOT***',\n      this.generateBindingCode(userDefs));\n    funcSrc = funcSrc.replace('***SAVE USER MUTATIONS SLOT***',\n      this.generateSaveUserMutationsCode(userDefs));\n    let funcContext = Object.assign({}, evalApi.api);\n    return new Function('__context', funcSrc).bind(funcContext);\n  }\n\n  /*\n   * Execution results are stored in the passed-in context\n   */\n  execute(context: EvalContext) {\n    let newBindings = this.toFunc(context.bindings)(context);\n    validateUserDefs(newBindings);\n    for (let [key, value] of Object.entries(newBindings)) {\n      if (context.bindings.hasOwnProperty(key)) {\n        throw new EvalBindingError(key);\n      }\n      context.bindings[key] = value;\n    }\n  }\n}\n\n","import * as rand from './rand';\nimport { WeightedChoice } from './weightedChoice';\n\n/**\n * This module is exposed to BML script `eval` blocks in a `bml` object namespace.\n */\n\nexport const api = {\n  WeightedChoice: WeightedChoice,\n  weightedChoose: rand.weightedChoose,\n  randomInt: rand.randomInt,\n  randomFloat: rand.randomFloat\n}\n","import { DocumentSettings } from './settings';\nimport { EvalBoundSettingsError } from './errors';\n\n\nfunction nullOrUndefined<T>(object: T | undefined | null): object is T {\n  return <T>object === undefined || <T>object === null;\n}\n\nexport type UserDefs = { [index: string]: any };\n\nfunction validateSettingField(settings: UserDefs, field: string, expectedType: string) {\n  const value = settings[field];\n  if (!nullOrUndefined(value) && typeof value !== expectedType) {\n    throw new EvalBoundSettingsError('setting.' + field, value);\n  }\n}\n\nexport function validateUserDefs(userDefs: UserDefs) {\n  let settings = userDefs['settings'];\n  if (settings) {\n    validateSettingField(settings, 'whitespaceCleanup', 'boolean');\n    validateSettingField(settings, 'punctuationCleanup', 'boolean');\n    validateSettingField(settings, 'capitalizationCleanup', 'boolean');\n  }\n}\n","export enum TokenType {\n  WHITESPACE = 'WHITESPACE',\n  NEW_LINE = 'NEW_LINE',\n  VISUAL_NEW_LINE = 'VISUAL_NEW_LINE',\n  COMMENT = 'COMMENT',\n  OPEN_BLOCK_COMMENT = 'OPEN_BLOCK_COMMENT',\n  CLOSE_BLOCK_COMMENT = 'CLOSE_BLOCK_COMMENT',\n  SLASH = 'SLASH',\n  SINGLE_QUOTE = 'SINGLE_QUOTE',\n  DOUBLE_QUOTE = 'DOUBLE_QUOTE',\n  BACKTICK = 'BACKTICK',\n  OPEN_PAREN = 'OPEN_PAREN',\n  CLOSE_PAREN = 'CLOSE_PAREN',\n  OPEN_BRACE = 'OPEN_BRACE',\n  CLOSE_BRACE = 'CLOSE_BRACE',\n  OPEN_BRACKET = 'OPEN_BRACKET',\n  CLOSE_BRACKET = 'CLOSE_BRACKET',\n  COMMA = 'COMMA',\n  COLON = 'COLON',\n  AT = 'AT',\n  HASH = 'HASH',\n  BANG = 'BANG',\n  DOLLAR = 'DOLLAR',\n  ARROW = 'ARROW',\n  NUMBER = 'NUMBER',\n  TEXT = 'TEXT',\n}\n","import { WeightedChoice, Choice, sumWeights } from './weightedChoice'\nimport {\n  normalizeWeights,\n  weightedChoose\n} from './rand';\nimport { NoPossibleChoiceError, InvalidForkWeightsError } from './errors';\n\nexport type ChoiceForkCallResult = {\n  replacement: Choice,\n  choiceIndex: number\n}\n\nexport class ChoiceFork {\n  weights: WeightedChoice[];\n  initWeights: number[];\n  identifier: string | null;\n  isSilent: boolean;\n  isSet: boolean;\n\n  constructor(weights: WeightedChoice[], identifier: string | null, isSilent: boolean, isSet: boolean) {\n    this.weights = normalizeWeights(weights);\n    this.validateWeights();\n    this.initWeights = this.weights.map((w) => (w.weight!));\n    this.identifier = identifier;\n    this.isSilent = isSilent;\n    this.isSet = isSet;\n  }\n\n  /**\n   * returns an object of the form {replacement: String, choiceIndex: Int}\n   */\n  call(): ChoiceForkCallResult {\n    let result;\n    try {\n      result = weightedChoose(this.weights);\n    } catch (error) {\n      if (error instanceof NoPossibleChoiceError && this.isSet) {\n        console.warn(`Set '${this.identifier}' is exhausted; resetting weights.`)\n        this.resetWeights();\n        return this.call();\n      } else {\n        throw error;\n      }\n    }\n    if (this.isSet) {\n      this.weights[result.choiceIndex].weight = 0;\n    }\n    return { replacement: result.choice, choiceIndex: result.choiceIndex };\n  }\n\n  private resetWeights() {\n    for (let [idx, val] of this.weights.entries()) {\n      val.weight = this.initWeights[idx];\n    }\n  }\n\n  private validateWeights() {\n    if (sumWeights(this.weights) === 0) {\n      throw new InvalidForkWeightsError();\n    }\n  }\n\n  toString(): string {\n    return `ChoiceFork{weights: ${this.weights}, `\n      + `identifier: ${this.identifier}, isSilent: ${this.isSilent}, isSet: ${this.isSet}}`;\n  }\n}\n","import { Choice, WeightedChoice } from './weightedChoice';\nimport { ChoiceFork } from './choiceFork';\n\nexport type ReferenceMap = Map<number, Choice>;\n\nexport class Reference {\n\n  id: string;\n  referenceMap: ReferenceMap;\n  fallbackChoiceFork: ChoiceFork | null;\n  reExecute: boolean;\n\n  constructor(id: string, choiceMap: ReferenceMap, fallbackChocies: WeightedChoice[], reExecute: boolean) {\n    this.id = id;\n    this.referenceMap = choiceMap;\n    if (fallbackChocies.length) {\n      this.fallbackChoiceFork = new ChoiceFork(fallbackChocies, null, false, false);\n    } else {\n      this.fallbackChoiceFork = null;\n    }\n    this.reExecute = reExecute;\n    if (reExecute) {\n      if (choiceMap.size || fallbackChocies.length) {\n        throw new Error('Got reExecute=true but mappings were provided. ' +\n          'This error should be caught earlier in the parser.')\n      }\n    }\n  }\n}\n","import { Token } from './token';\nimport { TokenType } from './tokenType';\n\nconst ANY_WHITESPACE_RE = /\\s/;\n\nexport class Lexer {\n\n  str: string;\n  index: number;\n  private _cachedNext: Token | null = null;\n  private _newLineRe: RegExp = /\\r?\\n/y;\n  private _whitespaceRe: RegExp = /[^\\S\\r\\n]+/y;  // non-newline whitespace\n  private _numberRe: RegExp = /(\\d+(\\.\\d+)?)|(\\.\\d+)/y;\n\n  constructor(str: string) {\n    this.str = str;\n    this.index = 0;\n  }\n\n  /**\n   * Set this.index and invalidate the next-token cache\n   */\n  overrideIndex(newIndex: number) {\n    this._cachedNext = null;\n    this.index = newIndex;\n  }\n\n  /**\n   * Determine the next item in the token stream\n   */\n  _determineNextRaw(): Token | null {\n    if (this.index >= this.str.length) {\n      return null;\n    }\n    let tokenType;\n    let tokenIndex = this.index;\n    let tokenEndIndex = null;\n    let tokenString;\n    this._newLineRe.lastIndex = this.index;\n    this._whitespaceRe.lastIndex = this.index;\n    this._numberRe.lastIndex = this.index;\n    let newLineMatch = this._newLineRe.exec(this.str);\n    let whitespaceMatch = this._whitespaceRe.exec(this.str);\n    let numberMatch = this._numberRe.exec(this.str);\n    if (newLineMatch !== null) {\n      tokenType = TokenType.NEW_LINE;\n      tokenString = newLineMatch[0];\n    } else if (whitespaceMatch !== null) {\n      tokenType = TokenType.WHITESPACE;\n      tokenString = whitespaceMatch[0];\n    } else if (numberMatch !== null) {\n      tokenType = TokenType.NUMBER;\n      tokenString = numberMatch[0];\n    } else if (this.str.slice(this.index, this.index + 2) === '//') {\n      tokenType = TokenType.COMMENT;\n      tokenString = '//';\n    } else if (this.str.slice(this.index, this.index + 2) === '/*') {\n      tokenType = TokenType.OPEN_BLOCK_COMMENT;\n      tokenString = '/*';\n    } else if (this.str.slice(this.index, this.index + 2) === '*/') {\n      tokenType = TokenType.CLOSE_BLOCK_COMMENT;\n      tokenString = '*/';\n    } else if (this.str[this.index] === '/') {\n      tokenType = TokenType.SLASH;\n      tokenString = '/';\n    } else if (this.str[this.index] === '\\'') {\n      tokenType = TokenType.SINGLE_QUOTE;\n      tokenString = '\\'';\n    } else if (this.str[this.index] === '\"') {\n      tokenType = TokenType.DOUBLE_QUOTE;\n      tokenString = '\"';\n    } else if (this.str[this.index] === '`') {\n      tokenType = TokenType.BACKTICK;\n      tokenString = '`';\n    } else if (this.str[this.index] === '(') {\n      tokenType = TokenType.OPEN_PAREN;\n      tokenString = '(';\n    } else if (this.str[this.index] === ')') {\n      tokenType = TokenType.CLOSE_PAREN;\n      tokenString = ')';\n    } else if (this.str[this.index] === '{') {\n      tokenType = TokenType.OPEN_BRACE;\n      tokenString = '{';\n    } else if (this.str[this.index] === '}') {\n      tokenType = TokenType.CLOSE_BRACE;\n      tokenString = '}';\n    } else if (this.str[this.index] === ',') {\n      tokenType = TokenType.COMMA;\n      tokenString = ',';\n    } else if (this.str[this.index] === ':') {\n      tokenType = TokenType.COLON;\n      tokenString = ':';\n    } else if (this.str[this.index] === '@') {\n      tokenType = TokenType.AT;\n      tokenString = '@';\n    } else if (this.str[this.index] === '#') {\n      tokenType = TokenType.HASH;\n      tokenString = '#';\n    } else if (this.str[this.index] === '!') {\n      tokenType = TokenType.BANG;\n      tokenString = '!';\n    } else if (this.str[this.index] === '$') {\n      tokenType = TokenType.DOLLAR;\n      tokenString = '$';\n    } else if (this.str[this.index] === '[') {\n      tokenType = TokenType.OPEN_BRACKET;\n      tokenString = '[';\n    } else if (this.str[this.index] === ']') {\n      tokenType = TokenType.CLOSE_BRACKET;\n      tokenString = ']';\n    } else if (this.str.slice(this.index, this.index + 2) === '->') {\n      tokenType = TokenType.ARROW;\n      tokenString = '->';\n    } else {\n      tokenType = TokenType.TEXT;\n      if (this.str[this.index] === '\\\\') {\n        let nextChar = this.str[this.index + 1];\n        if ('\\\\/[{])'.includes(nextChar)) {\n          tokenEndIndex = this.index + 2;\n          tokenString = nextChar;\n        } else if (nextChar === 'n') {\n          tokenEndIndex = this.index + 2;\n          tokenString = '\\n';\n        } else if (nextChar === 't') {\n          tokenEndIndex = this.index + 2;\n          tokenString = '\\t';\n        } else if (nextChar === 'r') {\n          tokenEndIndex = this.index + 2;\n          tokenString = '\\r';\n        } else {\n          tokenString = '\\\\';\n        }\n      } else {\n        tokenString = this.str[this.index];\n      }\n    }\n\n    if (tokenEndIndex === null) {\n      tokenEndIndex = tokenIndex + tokenString.length;\n    }\n    let token = new Token(tokenType, tokenIndex, tokenEndIndex, tokenString);\n    return token;\n  }\n\n  _determineNextReal(): Token | null {\n    let inLineComment = false;\n    let inBlockComment = false;\n    let token;\n    let startIndex = this.index;\n\n    while ((token = this._determineNextRaw()) !== null) {\n      if (inLineComment) {\n        if (token.tokenType === TokenType.NEW_LINE) {\n          inLineComment = false;\n          return new Token(TokenType.NEW_LINE, token.index, token.endIndex, token.str);\n        }\n      } else if (inBlockComment) {\n        if (token.tokenType === TokenType.CLOSE_BLOCK_COMMENT) {\n          // Block comments output a single whitespace positioned at\n          // the closing slash of the `*/`\n          // TODO why???? isn't it more intuitive that they should emit nothing???\n          let virtualSpaceIdx = token.index + 1;\n          return new Token(TokenType.WHITESPACE, virtualSpaceIdx, virtualSpaceIdx + 1, ' ');\n        }\n      } else {\n        if (token.tokenType === TokenType.COMMENT) {\n          // Use some hacky checks to work around lack of lookbehind\n          // and elegant lookahead.\n          let commentFollowedByWhitespace = token.index >= this.str.length\n            || ANY_WHITESPACE_RE.test(this.str[token.endIndex]);\n          let commentPrecededByWhitespace = token.index === 0\n            || ANY_WHITESPACE_RE.test(this.str[token.index - 1]);\n          if (commentPrecededByWhitespace || commentFollowedByWhitespace) {\n            inLineComment = true;\n          } else {\n            // If line comment isn't preceded or followed by whitespace,\n            // emit a TEXT token for it instead.\n            return new Token(TokenType.TEXT, token.index, token.endIndex, token.str);\n          }\n        } else if (token.tokenType === TokenType.OPEN_BLOCK_COMMENT) {\n          inBlockComment = true;\n        } else {\n          this.index = startIndex;\n          return token;\n        }\n      }\n      // Determining the next real token currently requires\n      // fake-consuming tokens until a real one is found.  It's a bad\n      // hack, but `this.index` should be reset to the initial\n      // position before this function exits.\n      this.index = token.endIndex;\n    }\n    this.index = startIndex;\n    return null;\n  }\n\n  next(): Token | null {\n    let token;\n    if (this._cachedNext !== null) {\n      token = this._cachedNext;\n      this._cachedNext = null;\n    } else {\n      token = this._determineNextReal();\n    }\n    if (token !== null) {\n      this.index = token.endIndex;\n    } else {\n      this.index = this.str.length;\n    }\n    return token;\n  }\n\n  peek(): Token | null {\n    if (this._cachedNext !== null) {\n      return this._cachedNext;\n    }\n    let token = this._determineNextReal();\n    this._cachedNext = token;\n    return token;\n  }\n\n  nextSatisfying(predicate: (a: Token) => boolean): Token | null {\n    let token;\n    while ((token = this.next()) !== null) {\n      if (predicate(token)) {\n        return token;\n      }\n    }\n    return null;\n  }\n\n  nextNonWhitespace(): Token | null {\n    return this.nextSatisfying((t) =>\n      (t.tokenType !== TokenType.WHITESPACE && t.tokenType !== TokenType.NEW_LINE));\n  }\n}\n","import { TokenType } from './tokenType';\n\nexport class Token {\n\n  tokenType: TokenType;\n  /** Index of the first character of this token in the string */\n  index: number;\n  /** Index after the last character of this token in the string (exclusive bound) */\n  endIndex: number;\n  /**\n   * Output string for the token.\n   *\n   * This may not always be the same as the input text consumed by the token.\n   * For example, escape sequences like `\\{` will have `token.str === '{'`.\n   */\n  str: string;\n\n  constructor(tokenType: TokenType, index: number, endIndex: number, str: string) {\n    this.tokenType = tokenType;\n    this.index = index;\n    this.endIndex = endIndex;\n    this.str = str;\n  }\n\n  toString(): string {\n    return `Token{tokenType: ${this.tokenType}, index: ${this.index}, `\n      + `endIndex: ${this.endIndex}, string: '${this.str}'}`;\n  }\n}\n","import { parseDocument } from './parsers';\nimport { Lexer } from './lexer';\nimport { AstNode } from './ast';\nimport { ChoiceFork } from './choiceFork';\nimport { Reference } from './reference'\nimport { EvalBlock } from './evalBlock';\n\nexport type AnalysisResult = {\n  possibleOutcomes: bigint\n};\n\ntype ForkIdMap = Map<string, [ForkNode, ChoiceFork]>;\n\nabstract class AnalysisNode {\n}\n\n\nclass ForkNode extends AnalysisNode {\n  id: string | null;\n  branches: AnalysisTree[];\n  referencedBy: RefNode[] = [];\n\n  constructor(id: string | null = null, branches: AnalysisTree[] = []) {\n    super();\n    this.id = id;\n    this.branches = branches;\n  }\n\n  countOutcomes(): bigint {\n    let outcomes = BigInt(0);\n    for (let branch of this.branches) {\n      outcomes += countOutcomesForAnalysisTree(branch);\n    }\n    for (let ref of this.referencedBy) {\n      outcomes += ref.countOutcomesAddedToReferredNode();\n    }\n    return outcomes;\n  }\n}\n\nclass RefNode extends AnalysisNode {\n  forkNodeReferredTo: ForkNode;\n  referenceMap: Map<number, AnalysisTree>;\n\n  constructor(forkNodeReferredTo: ForkNode, referenceMap: Map<number, AnalysisTree>) {\n    super();\n    this.forkNodeReferredTo = forkNodeReferredTo;\n    this.referenceMap = referenceMap;\n  }\n\n  countOutcomesAddedToReferredNode(): bigint {\n    let outcomes = BigInt(0);\n    for (let [_, value] of this.referenceMap.entries()) {\n      // Mapped choices contribute 1 less than plain choices\n      // because 1 has already been accounted for in the referenced fork\n      outcomes += countOutcomesForAnalysisTree(value) - BigInt(1);\n    }\n    return outcomes;\n  }\n}\n\n\n\ntype AnalysisTree = AnalysisNode[]\n\n\nfunction countOutcomesForAnalysisTree(tree: AnalysisTree): bigint {\n  let outcomes = BigInt(1); // Base case is 1 for an empty tree\n  for (let node of tree) {\n    if (node instanceof ForkNode) {\n      outcomes *= node.countOutcomes();\n    }\n    // branches added by ref nodes are resolved by their referred forks, so skip them.\n  }\n  return outcomes;\n}\n\n\nfunction deriveForkNode(choiceFork: ChoiceFork, forkIdMap: ForkIdMap): ForkNode {\n  let forkNode = new ForkNode(choiceFork.identifier, []);\n  if (forkNode.id) {\n    forkIdMap.set(forkNode.id, [forkNode, choiceFork]);\n  }\n  for (let weight of choiceFork.weights) {\n    let choice = weight.choice;\n    if (choice instanceof EvalBlock) {\n      forkNode.branches.push([])\n    } else {\n      let subTree = deriveAnalysisTree(choice, forkIdMap);\n      forkNode.branches.push(subTree)\n    }\n\n  }\n  return forkNode;\n}\n\nfunction deriveRefNode(ref: Reference, forkIdMap: ForkIdMap): RefNode {\n  // TODO handle re-executing refs\n  let forkMapLookupResult = forkIdMap.get(ref.id);\n  if (!forkMapLookupResult) {\n    // Handle unmapped refs gracefully - this is expected\n    // for refs pointing to declarations in included files\n    return new RefNode(new ForkNode(), new Map());\n  }\n  let forkNodeReferredTo = forkIdMap.get(ref.id)![0];\n  let refNode = new RefNode(forkNodeReferredTo, new Map());\n  forkNodeReferredTo.referencedBy.push(refNode);\n  for (let [key, value] of ref.referenceMap.entries()) {\n    let mappedValue: AnalysisTree;\n    if (value instanceof EvalBlock) {\n      mappedValue = [];\n    } else {\n      let subTree = deriveAnalysisTree(value, forkIdMap);\n      mappedValue = subTree;\n    }\n    refNode.referenceMap.set(key, mappedValue);\n  }\n  // To make later analysis simple, create the implied mappings for the fallback fork\n  if (ref.fallbackChoiceFork) {\n    let fallbackForkNode = deriveForkNode(ref.fallbackChoiceFork, forkIdMap);\n    let referredFork = forkIdMap.get(ref.id)![1];\n    for (let i = 0; i < referredFork.weights.length; i++) {\n      if (!refNode.referenceMap.has(i)) {\n        refNode.referenceMap.set(i, [fallbackForkNode]);\n      }\n    }\n  }\n  return refNode;\n}\n\nfunction deriveAnalysisTree(ast: AstNode[], forkIdMap: ForkIdMap): AnalysisTree {\n  let analysisTree: AnalysisTree = [];\n  for (let node of ast) {\n    if (node instanceof ChoiceFork) {\n      analysisTree.push(deriveForkNode(node, forkIdMap));\n    } else if (node instanceof Reference) {\n      analysisTree.push(deriveRefNode(node, forkIdMap));\n    }\n    // string nodes add no branches, so they are removed from the analysis tree\n  }\n  return analysisTree;\n}\n\n\n\n\n/**\n * Analyze a BML document without executing it\n * \n * This does a rough back-of-the-envelope approximation of the number of possible\n * branches through the document. It has several shortcomings, especially when dealing\n * with refs and silent forks.\n *\n * Note that if your document contains cyclical reference loops, this will hang.\n */\nexport function analyze(bmlDocument: string): AnalysisResult {\n  let lexer = new Lexer(bmlDocument);\n  let ast = parseDocument(lexer, true);\n  let analysisTree = deriveAnalysisTree(ast, new Map());\n  let possibleOutcomes = countOutcomesForAnalysisTree(analysisTree);\n  return {\n    possibleOutcomes\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","$d3c1734dacb01657$var$cachedSetTimeout","$d3c1734dacb01657$var$cachedClearTimeout","$d3c1734dacb01657$var$currentQueue","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","global","module1","define1","Alea","seed","n","me","mash","data","String","i","length","h","charCodeAt","next","t","s0","c","s1","s2","copy","f","impl","opts","xg","state","prng","int32","double","quick","amd","alea","define","XorGen","strseed","x","y","z","w","k","top","bot","result","xor128","v","d","xorwow","X","j","push","slice","Date","xorshift7","limit","Math","max","xor4096","b","floor","tychei","$a7629ff39e921c85$exports","$d3c1734dacb01657$exports","$d3c1734dacb01657$var$process","$d3c1734dacb01657$var$defaultSetTimout","$d3c1734dacb01657$var$defaultClearTimeout","setTimeout","e","clearTimeout","$d3c1734dacb01657$var$runTimeout","fun","$d3c1734dacb01657$var$queue","$d3c1734dacb01657$var$draining","$d3c1734dacb01657$var$queueIndex","$d3c1734dacb01657$var$cleanUpNextTick","concat","$d3c1734dacb01657$var$drainQueue","timeout","len","run","$d3c1734dacb01657$var$runClearTimeout","marker","$d3c1734dacb01657$var$Item","array","$d3c1734dacb01657$var$noop","$a7629ff39e921c85$var$assertPath","path","TypeError","JSON","stringify","$a7629ff39e921c85$var$normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","nextTick","args","Array","arguments","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","$a7629ff39e921c85$var$posix","resolve","resolvedPath","resolvedAbsolute","undefined","normalize","isAbsolute","trailingSeparator","join","joined","arg","relative","from","to","fromStart","fromEnd","fromLen","toStart","toLen","toEnd","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","end","matchedSlash","basename","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","pathObject","base","root","parse","ret","sep","delimiter","win32","posix","$foUwZ","$78d9e39c826e6bbd$export$b363a0fb27031153","choice","weight","toString","clone","$78d9e39c826e6bbd$export$e3ec5db62775bb4","weights","reduce","acc","val","$2173e3b55588bdf3$export$faf796819bf7156f","str","index","lineAndColumn","$2173e3b55588bdf3$export$7762a5f1fbaa187f","line","column","newLine","$2173e3b55588bdf3$export$63cc9d6c11a5a382","obj","$be52afd1406121c4$export$25b19446f82d7080","message","Object","setPrototypeOf","$be52afd1406121c4$export$212344d213252f95","bmlDoc","errorIndex","$be52afd1406121c4$export$9bd8738e2696d815","hint","resolvedMsg","$be52afd1406121c4$export$5f41361166083558","refIdentifier","choiceIndex","$be52afd1406121c4$export$b00eb0c7b5e7384f","field","value","$be52afd1406121c4$export$2b8f184bbdc74d8a","key","$be52afd1406121c4$export$e84e68f1a3f7e062","$be52afd1406121c4$export$2a10791adb5497e6","includePath","$be52afd1406121c4$export$beede8335535d955","$be52afd1406121c4$export$fbbbb9948ee25133","$f2dae5dda642a89f$exports","$gj6Et","$4gDjz","$HLBv4","$ktaoY","$gBs5C","$ktLSh","$fa5d8df011db7ec0$exports","pool","math","nodecrypto","rngname","startdenom","pow","significance","overflow","seedrandom","options","callback","shortseed","mixkey","flatten","depth","prop","typ","entropy","tostring","autoseed","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","navigator","plugins","screen","arc4","ARC4","g","S","pass","is_math_call","keylen","s","mask","width","count","r","smear","stringseed","fromCharCode","random","ex","self","$23dd371fa0105bbf$var$rng","$23dd371fa0105bbf$export$231d937d7748069","min","$23dd371fa0105bbf$export$3c5f89dae98e900b","ceil","$23dd371fa0105bbf$export$dfb0db305cae9fba","sum","progress","pickedValue","wc","console","warn","fallbackIndex","$159889a114a1acb2$exports","window","factory","modules","STARTS_WITH_VOWEL","startsWithVowel","word","test","capitalize","article","charAt","toUpperCase","check","ending","regex","RegExp","replace","list","indexOf","__webpack_require__","_require","irregulars","rules","indefinite","some","rule","handleOptions","articleOnly","irregularWords","NUMBERS","EIGHT_ELEVEN_EIGHTEEN","ELEVEN_EIGHTEEN","number","match","startsWith11Or18","numbers","startsWith","ACRONYM","IRREGULAR_ACRONYM","_ref","caseInsensitive","split","isIrregular","bothOrNeither","EXTRAS","part","toLowerCase","memo","xor","installedModules","moduleId","l","m","getter","o","defineProperty","enumerable","get","Symbol","toStringTag","mode","ns","create","bind","object","property","hasOwnProperty","p","$31958278014cc1d0$var$BLANK_LINE_RE","$31958278014cc1d0$var$TRAILING_WHITESPACE_RE","$31958278014cc1d0$var$MISPLACED_WORD_ENDING_PUNC_RE","$31958278014cc1d0$var$INCORRECT_CAPS_RE","$31958278014cc1d0$var$VISUAL_LINE_BREAK_RE","$31958278014cc1d0$var$INDEFINITE_ARTICLE_RE","$a3cd9ccef2b1fd6c$export$18e0fb7e055a6ffc","whitespaceCleanup","punctuationCleanup","capitalizationCleanup","indefiniteArticleCleanup","$a3cd9ccef2b1fd6c$export$129a826f9bfa0e84","randomSeed","allowEval","workingDir","$a3cd9ccef2b1fd6c$export$953b8844777cd492","originalSettings","newSettings","assign","$c2835ee42eb40a49$export$644d8ea042df96a6","WeightedChoice","weightedChoose","randomInt","randomFloat","$67b5769a2e5b6e40$var$validateSettingField","settings","expectedType","$0bc74b15410ab9b7$var$evalFuncTemplate","$0bc74b15410ab9b7$export$c14d55ff8a781168","contents","generateBindingCode","userDefs","lines","generateSaveUserMutationsCode","toFunc","funcSrc","funcContext","Function","execute","context","newBindings","bindings","entries","$c53c14e71ec8b103$export$f435f793048e7a0f","TokenType","$68840703e4e8e9f0$export$d27702c2be747f09","identifier","isSilent","isSet","weightedChoices","normalized","nullWeightCount","weightedChoice","nullWeight","validateWeights","initWeights","map","error","resetWeights","replacement","idx","$e85e0028c85965d9$export$e0be378c32fb70a7","choiceMap","fallbackChocies","reExecute","referenceMap","fallbackChoiceFork","size","$8a47c715e80dd7cc$export$b6a9369736b19f4d","lexer","isTopLevel","token","startIndex","openParenCount","astNodes","pushString","lastNode","tokenType","OPEN_PAREN","CLOSE_PAREN","OPEN_BRACKET","$8a47c715e80dd7cc$export$94bf5b6a291876d6","peek","blockStartIndex","CLOSE_BRACKET","OPEN_BRACE","fork","$8a47c715e80dd7cc$export$47ca0410daecad03","mappedChoices","Map","unmappedChoices","idRe","isReference","isReExecuting","acceptId","acceptWeight","acceptChoiceIndex","acceptArrow","acceptReplacement","acceptComma","acceptBlockEnd","currentChoiceIndexes","currentReplacement","WHITESPACE","NEW_LINE","NUMBER","Number","ARROW","$8a47c715e80dd7cc$export$437922f793a69740","openBracketCount","CLOSE_BLOCK_COMMENT","BACKTICK","SINGLE_QUOTE","DOUBLE_QUOTE","SLASH","COMMENT","OPEN_BLOCK_COMMENT","has","set","COMMA","CLOSE_BRACE","AT","HASH","DOLLAR","TEXT","lastIndex","idMatch","exec","typeSlug","includesColon","overrideIndex","$8b64b6441bb0a3f3$export$50792b0e93539fde","endIndex","$a7fe260e13656a6f$var$ANY_WHITESPACE_RE","$a7fe260e13656a6f$export$6168dc8908a6c652","_cachedNext","_newLineRe","_whitespaceRe","_numberRe","newIndex","_determineNextRaw","tokenString","tokenIndex","tokenEndIndex","newLineMatch","whitespaceMatch","numberMatch","COLON","BANG","nextChar","includes","_determineNextReal","inLineComment","inBlockComment","virtualSpaceIdx","commentFollowedByWhitespace","commentPrecededByWhitespace","nextSatisfying","predicate","nextNonWhitespace","$60ec6aaa2f66c1da$export$88530751e3977073","executedForkMap","evalContext","output","renderer","resolveReference","reference","referredExecutedFork","choiceFork","renderedOutput","renderChoice","matchedReferenceResult","renderAst","ast","node","nextNode","postprocess","text","documentSettings","_match","p1","p2","$31958278014cc1d0$export$4d20fe649bca738b","atDocStart","lastLineWasBlank","isBlank","rewrittenLine","atLineStart","lastCharWasSpace","char","charIsSpace","endsWith","substring","originalArticle","upcaseFirstLetter","renderWithoutPostProcess","renderAndPostProcess","renderInclude","bmlDocumentString","rngState","resolvedWorkingDir","resolvedIncludePath","readFileSync","subWorkingDir","subRenderer","$ffe99070104eb57b$var$AnalysisNode","$ffe99070104eb57b$var$ForkNode","branches","referencedBy","countOutcomes","outcomes","BigInt","branch","$ffe99070104eb57b$var$countOutcomesForAnalysisTree","ref","countOutcomesAddedToReferredNode","$ffe99070104eb57b$var$RefNode","forkNodeReferredTo","_","tree","$ffe99070104eb57b$var$deriveForkNode","forkIdMap","forkNode","subTree","$ffe99070104eb57b$var$deriveAnalysisTree","analysisTree","$ffe99070104eb57b$var$deriveRefNode","refNode","mappedValue","fallbackForkNode","referredFork","renderSettings","bml","analyze","bmlDocument","possibleOutcomes"],"version":3,"file":"bml.bundle.js.map"}